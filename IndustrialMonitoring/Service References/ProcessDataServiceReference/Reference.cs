//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IndustrialMonitoring.ProcessDataServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemsLogLatestAIOViewModel", Namespace="http://schemas.datacontract.org/2004/07/Monitoring.ViewModels")]
    [System.SerializableAttribute()]
    public partial class ItemsLogLatestAIOViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemLogLatestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemLogLatestId {
            get {
                return this.ItemLogLatestIdField;
            }
            set {
                if ((this.ItemLogLatestIdField.Equals(value) != true)) {
                    this.ItemLogLatestIdField = value;
                    this.RaisePropertyChanged("ItemLogLatestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemsAIOViewModel", Namespace="http://schemas.datacontract.org/2004/07/Monitoring.ViewModels")]
    [System.SerializableAttribute()]
    public partial class ItemsAIOViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SharedLibrary.ItemType ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShowInUITimeIntervalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SharedLibrary.ItemType ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((this.ItemTypeField.Equals(value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowInUITimeInterval {
            get {
                return this.ShowInUITimeIntervalField;
            }
            set {
                if ((this.ShowInUITimeIntervalField.Equals(value) != true)) {
                    this.ShowInUITimeIntervalField = value;
                    this.RaisePropertyChanged("ShowInUITimeInterval");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProcessDataServiceReference.IProcessDataService")]
    public interface IProcessDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GeItemsLogLatest", ReplyAction="http://tempuri.org/IProcessDataService/GeItemsLogLatestResponse")]
        IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel GeItemsLogLatest(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProcessDataService/GeItemsLogLatest", ReplyAction="http://tempuri.org/IProcessDataService/GeItemsLogLatestResponse")]
        System.IAsyncResult BeginGeItemsLogLatest(int itemId, System.AsyncCallback callback, object asyncState);
        
        IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel EndGeItemsLogLatest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItemsAll", ReplyAction="http://tempuri.org/IProcessDataService/GetItemsAllResponse")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> GetItemsAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProcessDataService/GetItemsAll", ReplyAction="http://tempuri.org/IProcessDataService/GetItemsAllResponse")]
        System.IAsyncResult BeginGetItemsAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> EndGetItemsAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItems", ReplyAction="http://tempuri.org/IProcessDataService/GetItemsResponse")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> GetItems(System.Func<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel, bool> predicate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProcessDataService/GetItems", ReplyAction="http://tempuri.org/IProcessDataService/GetItemsResponse")]
        System.IAsyncResult BeginGetItems(System.Func<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel, bool> predicate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> EndGetItems(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProcessDataServiceChannel : IndustrialMonitoring.ProcessDataServiceReference.IProcessDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeItemsLogLatestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GeItemsLogLatestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetItemsAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessDataServiceClient : System.ServiceModel.ClientBase<IndustrialMonitoring.ProcessDataServiceReference.IProcessDataService>, IndustrialMonitoring.ProcessDataServiceReference.IProcessDataService {
        
        private BeginOperationDelegate onBeginGeItemsLogLatestDelegate;
        
        private EndOperationDelegate onEndGeItemsLogLatestDelegate;
        
        private System.Threading.SendOrPostCallback onGeItemsLogLatestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetItemsAllDelegate;
        
        private EndOperationDelegate onEndGetItemsAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetItemsDelegate;
        
        private EndOperationDelegate onEndGetItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsCompletedDelegate;
        
        public ProcessDataServiceClient() {
        }
        
        public ProcessDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProcessDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GeItemsLogLatestCompletedEventArgs> GeItemsLogLatestCompleted;
        
        public event System.EventHandler<GetItemsAllCompletedEventArgs> GetItemsAllCompleted;
        
        public event System.EventHandler<GetItemsCompletedEventArgs> GetItemsCompleted;
        
        public IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel GeItemsLogLatest(int itemId) {
            return base.Channel.GeItemsLogLatest(itemId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGeItemsLogLatest(int itemId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGeItemsLogLatest(itemId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel EndGeItemsLogLatest(System.IAsyncResult result) {
            return base.Channel.EndGeItemsLogLatest(result);
        }
        
        private System.IAsyncResult OnBeginGeItemsLogLatest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int itemId = ((int)(inValues[0]));
            return this.BeginGeItemsLogLatest(itemId, callback, asyncState);
        }
        
        private object[] OnEndGeItemsLogLatest(System.IAsyncResult result) {
            IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel retVal = this.EndGeItemsLogLatest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGeItemsLogLatestCompleted(object state) {
            if ((this.GeItemsLogLatestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GeItemsLogLatestCompleted(this, new GeItemsLogLatestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GeItemsLogLatestAsync(int itemId) {
            this.GeItemsLogLatestAsync(itemId, null);
        }
        
        public void GeItemsLogLatestAsync(int itemId, object userState) {
            if ((this.onBeginGeItemsLogLatestDelegate == null)) {
                this.onBeginGeItemsLogLatestDelegate = new BeginOperationDelegate(this.OnBeginGeItemsLogLatest);
            }
            if ((this.onEndGeItemsLogLatestDelegate == null)) {
                this.onEndGeItemsLogLatestDelegate = new EndOperationDelegate(this.OnEndGeItemsLogLatest);
            }
            if ((this.onGeItemsLogLatestCompletedDelegate == null)) {
                this.onGeItemsLogLatestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGeItemsLogLatestCompleted);
            }
            base.InvokeAsync(this.onBeginGeItemsLogLatestDelegate, new object[] {
                        itemId}, this.onEndGeItemsLogLatestDelegate, this.onGeItemsLogLatestCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> GetItemsAll() {
            return base.Channel.GetItemsAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetItemsAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItemsAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> EndGetItemsAll(System.IAsyncResult result) {
            return base.Channel.EndGetItemsAll(result);
        }
        
        private System.IAsyncResult OnBeginGetItemsAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetItemsAll(callback, asyncState);
        }
        
        private object[] OnEndGetItemsAll(System.IAsyncResult result) {
            System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> retVal = this.EndGetItemsAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsAllCompleted(object state) {
            if ((this.GetItemsAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsAllCompleted(this, new GetItemsAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsAllAsync() {
            this.GetItemsAllAsync(null);
        }
        
        public void GetItemsAllAsync(object userState) {
            if ((this.onBeginGetItemsAllDelegate == null)) {
                this.onBeginGetItemsAllDelegate = new BeginOperationDelegate(this.OnBeginGetItemsAll);
            }
            if ((this.onEndGetItemsAllDelegate == null)) {
                this.onEndGetItemsAllDelegate = new EndOperationDelegate(this.OnEndGetItemsAll);
            }
            if ((this.onGetItemsAllCompletedDelegate == null)) {
                this.onGetItemsAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsAllDelegate, null, this.onEndGetItemsAllDelegate, this.onGetItemsAllCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> GetItems(System.Func<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel, bool> predicate) {
            return base.Channel.GetItems(predicate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetItems(System.Func<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel, bool> predicate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItems(predicate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> EndGetItems(System.IAsyncResult result) {
            return base.Channel.EndGetItems(result);
        }
        
        private System.IAsyncResult OnBeginGetItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Func<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel, bool> predicate = ((System.Func<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel, bool>)(inValues[0]));
            return this.BeginGetItems(predicate, callback, asyncState);
        }
        
        private object[] OnEndGetItems(System.IAsyncResult result) {
            System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel> retVal = this.EndGetItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsCompleted(object state) {
            if ((this.GetItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsCompleted(this, new GetItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsAsync(System.Func<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel, bool> predicate) {
            this.GetItemsAsync(predicate, null);
        }
        
        public void GetItemsAsync(System.Func<IndustrialMonitoring.ProcessDataServiceReference.ItemsAIOViewModel, bool> predicate, object userState) {
            if ((this.onBeginGetItemsDelegate == null)) {
                this.onBeginGetItemsDelegate = new BeginOperationDelegate(this.OnBeginGetItems);
            }
            if ((this.onEndGetItemsDelegate == null)) {
                this.onEndGetItemsDelegate = new EndOperationDelegate(this.OnEndGetItems);
            }
            if ((this.onGetItemsCompletedDelegate == null)) {
                this.onGetItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsDelegate, new object[] {
                        predicate}, this.onEndGetItemsDelegate, this.onGetItemsCompletedDelegate, userState);
        }
    }
}
