//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IndustrialMonitoring.ProcessDataServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemsLogLatestAIOViewModel", Namespace="http://schemas.datacontract.org/2004/07/MonitoringServiceLibrary.ViewModels")]
    [System.SerializableAttribute()]
    public partial class ItemsLogLatestAIOViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemLogLatestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemLogLatestId {
            get {
                return this.ItemLogLatestIdField;
            }
            set {
                if ((this.ItemLogLatestIdField.Equals(value) != true)) {
                    this.ItemLogLatestIdField = value;
                    this.RaisePropertyChanged("ItemLogLatestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item1", Namespace="http://schemas.datacontract.org/2004/07/MonitoringServiceLibrary.ViewModels")]
    [System.SerializableAttribute()]
    public partial class Item1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SharedLibrary.ItemType ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShowInUITimeIntervalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SharedLibrary.ItemType ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((this.ItemTypeField.Equals(value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowInUITimeInterval {
            get {
                return this.ShowInUITimeIntervalField;
            }
            set {
                if ((this.ShowInUITimeIntervalField.Equals(value) != true)) {
                    this.ShowInUITimeIntervalField = value;
                    this.RaisePropertyChanged("ShowInUITimeInterval");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item2", Namespace="http://schemas.datacontract.org/2004/07/MonitoringServiceLibrary.ViewModels")]
    [System.SerializableAttribute()]
    public partial class Item2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SharedLibrary.ItemType ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTypeStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SharedLibrary.WhenToLog SaveInItemsLogLastWhenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaveInItemsLogLastWhenStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaveInItemsLogLastesTimeIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaveInItemsLogTimeIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SharedLibrary.WhenToLog SaveInItemsLogWhenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaveInItemsLogWhenStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScanCycleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShowInUITimeIntervalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SharedLibrary.ItemType ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((this.ItemTypeField.Equals(value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemTypeString {
            get {
                return this.ItemTypeStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTypeStringField, value) != true)) {
                    this.ItemTypeStringField = value;
                    this.RaisePropertyChanged("ItemTypeString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SharedLibrary.WhenToLog SaveInItemsLogLastWhen {
            get {
                return this.SaveInItemsLogLastWhenField;
            }
            set {
                if ((this.SaveInItemsLogLastWhenField.Equals(value) != true)) {
                    this.SaveInItemsLogLastWhenField = value;
                    this.RaisePropertyChanged("SaveInItemsLogLastWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SaveInItemsLogLastWhenString {
            get {
                return this.SaveInItemsLogLastWhenStringField;
            }
            set {
                if ((object.ReferenceEquals(this.SaveInItemsLogLastWhenStringField, value) != true)) {
                    this.SaveInItemsLogLastWhenStringField = value;
                    this.RaisePropertyChanged("SaveInItemsLogLastWhenString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SaveInItemsLogLastesTimeInterval {
            get {
                return this.SaveInItemsLogLastesTimeIntervalField;
            }
            set {
                if ((this.SaveInItemsLogLastesTimeIntervalField.Equals(value) != true)) {
                    this.SaveInItemsLogLastesTimeIntervalField = value;
                    this.RaisePropertyChanged("SaveInItemsLogLastesTimeInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SaveInItemsLogTimeInterval {
            get {
                return this.SaveInItemsLogTimeIntervalField;
            }
            set {
                if ((this.SaveInItemsLogTimeIntervalField.Equals(value) != true)) {
                    this.SaveInItemsLogTimeIntervalField = value;
                    this.RaisePropertyChanged("SaveInItemsLogTimeInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SharedLibrary.WhenToLog SaveInItemsLogWhen {
            get {
                return this.SaveInItemsLogWhenField;
            }
            set {
                if ((this.SaveInItemsLogWhenField.Equals(value) != true)) {
                    this.SaveInItemsLogWhenField = value;
                    this.RaisePropertyChanged("SaveInItemsLogWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SaveInItemsLogWhenString {
            get {
                return this.SaveInItemsLogWhenStringField;
            }
            set {
                if ((object.ReferenceEquals(this.SaveInItemsLogWhenStringField, value) != true)) {
                    this.SaveInItemsLogWhenStringField = value;
                    this.RaisePropertyChanged("SaveInItemsLogWhenString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScanCycle {
            get {
                return this.ScanCycleField;
            }
            set {
                if ((this.ScanCycleField.Equals(value) != true)) {
                    this.ScanCycleField = value;
                    this.RaisePropertyChanged("ScanCycle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowInUITimeInterval {
            get {
                return this.ShowInUITimeIntervalField;
            }
            set {
                if ((this.ShowInUITimeIntervalField.Equals(value) != true)) {
                    this.ShowInUITimeIntervalField = value;
                    this.RaisePropertyChanged("ShowInUITimeInterval");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item3", Namespace="http://schemas.datacontract.org/2004/07/MonitoringServiceLibrary.ViewModels")]
    [System.SerializableAttribute()]
    public partial class Item3 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tab1", Namespace="http://schemas.datacontract.org/2004/07/MonitoringServiceLibrary.ViewModels")]
    [System.SerializableAttribute()]
    public partial class Tab1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TabIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TabNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TabId {
            get {
                return this.TabIdField;
            }
            set {
                if ((this.TabIdField.Equals(value) != true)) {
                    this.TabIdField = value;
                    this.RaisePropertyChanged("TabId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TabName {
            get {
                return this.TabNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TabNameField, value) != true)) {
                    this.TabNameField = value;
                    this.RaisePropertyChanged("TabName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabsItemsViewModel", Namespace="http://schemas.datacontract.org/2004/07/MonitoringServiceLibrary.ViewModels")]
    [System.SerializableAttribute()]
    public partial class TabsItemsViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TabIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TabItemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TabId {
            get {
                return this.TabIdField;
            }
            set {
                if ((this.TabIdField.Equals(value) != true)) {
                    this.TabIdField = value;
                    this.RaisePropertyChanged("TabId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TabItemId {
            get {
                return this.TabItemIdField;
            }
            set {
                if ((this.TabItemIdField.Equals(value) != true)) {
                    this.TabItemIdField = value;
                    this.RaisePropertyChanged("TabItemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemsLogChartHistoryViewModel", Namespace="http://schemas.datacontract.org/2004/07/MonitoringServiceLibrary.ViewModels")]
    [System.SerializableAttribute()]
    public partial class ItemsLogChartHistoryViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemLogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemLogId {
            get {
                return this.ItemLogIdField;
            }
            set {
                if ((this.ItemLogIdField.Equals(value) != true)) {
                    this.ItemLogIdField = value;
                    this.RaisePropertyChanged("ItemLogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProcessDataServiceReference.IProcessDataService")]
    public interface IProcessDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GeItemsLogLatest", ReplyAction="http://tempuri.org/IProcessDataService/GeItemsLogLatestResponse")]
        IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel GeItemsLogLatest(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GeItemsLogLatest", ReplyAction="http://tempuri.org/IProcessDataService/GeItemsLogLatestResponse")]
        System.Threading.Tasks.Task<IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel> GeItemsLogLatestAsync(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItems", ReplyAction="http://tempuri.org/IProcessDataService/GetItemsResponse")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item1> GetItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItems", ReplyAction="http://tempuri.org/IProcessDataService/GetItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item1>> GetItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItems2", ReplyAction="http://tempuri.org/IProcessDataService/GetItems2Response")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item2> GetItems2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItems2", ReplyAction="http://tempuri.org/IProcessDataService/GetItems2Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item2>> GetItems2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItems3", ReplyAction="http://tempuri.org/IProcessDataService/GetItems3Response")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item3> GetItems3();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItems3", ReplyAction="http://tempuri.org/IProcessDataService/GetItems3Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item3>> GetItems3Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItem", ReplyAction="http://tempuri.org/IProcessDataService/GetItemResponse")]
        IndustrialMonitoring.ProcessDataServiceReference.Item1 GetItem(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItem", ReplyAction="http://tempuri.org/IProcessDataService/GetItemResponse")]
        System.Threading.Tasks.Task<IndustrialMonitoring.ProcessDataServiceReference.Item1> GetItemAsync(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetTabsAll", ReplyAction="http://tempuri.org/IProcessDataService/GetTabsAllResponse")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Tab1> GetTabsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetTabsAll", ReplyAction="http://tempuri.org/IProcessDataService/GetTabsAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Tab1>> GetTabsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetTab", ReplyAction="http://tempuri.org/IProcessDataService/GetTabResponse")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Tab1> GetTab(System.Func<IndustrialMonitoring.ProcessDataServiceReference.Tab1, bool> predicate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetTab", ReplyAction="http://tempuri.org/IProcessDataService/GetTabResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Tab1>> GetTabAsync(System.Func<IndustrialMonitoring.ProcessDataServiceReference.Tab1, bool> predicate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetTabItemsAll", ReplyAction="http://tempuri.org/IProcessDataService/GetTabItemsAllResponse")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel> GetTabItemsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetTabItemsAll", ReplyAction="http://tempuri.org/IProcessDataService/GetTabItemsAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel>> GetTabItemsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetTabItems", ReplyAction="http://tempuri.org/IProcessDataService/GetTabItemsResponse")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel> GetTabItems(System.Func<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel, bool> predicate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetTabItems", ReplyAction="http://tempuri.org/IProcessDataService/GetTabItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel>> GetTabItemsAsync(System.Func<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel, bool> predicate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItemsForTab", ReplyAction="http://tempuri.org/IProcessDataService/GetItemsForTabResponse")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item1> GetItemsForTab(int tabId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItemsForTab", ReplyAction="http://tempuri.org/IProcessDataService/GetItemsForTabResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item1>> GetItemsForTabAsync(int tabId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItemLogs", ReplyAction="http://tempuri.org/IProcessDataService/GetItemLogsResponse")]
        System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsLogChartHistoryViewModel> GetItemLogs(int itemId, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetItemLogs", ReplyAction="http://tempuri.org/IProcessDataService/GetItemLogsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsLogChartHistoryViewModel>> GetItemLogsAsync(int itemId, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/AddItem2", ReplyAction="http://tempuri.org/IProcessDataService/AddItem2Response")]
        bool AddItem2(IndustrialMonitoring.ProcessDataServiceReference.Item2 item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/AddItem2", ReplyAction="http://tempuri.org/IProcessDataService/AddItem2Response")]
        System.Threading.Tasks.Task<bool> AddItem2Async(IndustrialMonitoring.ProcessDataServiceReference.Item2 item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/DeleteItem", ReplyAction="http://tempuri.org/IProcessDataService/DeleteItemResponse")]
        bool DeleteItem(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/DeleteItem", ReplyAction="http://tempuri.org/IProcessDataService/DeleteItemResponse")]
        System.Threading.Tasks.Task<bool> DeleteItemAsync(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/EditItem2", ReplyAction="http://tempuri.org/IProcessDataService/EditItem2Response")]
        bool EditItem2(IndustrialMonitoring.ProcessDataServiceReference.Item2 item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/EditItem2", ReplyAction="http://tempuri.org/IProcessDataService/EditItem2Response")]
        System.Threading.Tasks.Task<bool> EditItem2Async(IndustrialMonitoring.ProcessDataServiceReference.Item2 item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/AddItemsToTab", ReplyAction="http://tempuri.org/IProcessDataService/AddItemsToTabResponse")]
        bool AddItemsToTab(string tabName, System.Collections.Generic.List<string> items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/AddItemsToTab", ReplyAction="http://tempuri.org/IProcessDataService/AddItemsToTabResponse")]
        System.Threading.Tasks.Task<bool> AddItemsToTabAsync(string tabName, System.Collections.Generic.List<string> items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetHorn", ReplyAction="http://tempuri.org/IProcessDataService/GetHornResponse")]
        bool GetHorn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetHorn", ReplyAction="http://tempuri.org/IProcessDataService/GetHornResponse")]
        System.Threading.Tasks.Task<bool> GetHornAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetHornHMI", ReplyAction="http://tempuri.org/IProcessDataService/GetHornHMIResponse")]
        bool GetHornHMI();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetHornHMI", ReplyAction="http://tempuri.org/IProcessDataService/GetHornHMIResponse")]
        System.Threading.Tasks.Task<bool> GetHornHMIAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetMuteHorn", ReplyAction="http://tempuri.org/IProcessDataService/GetMuteHornResponse")]
        bool GetMuteHorn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/GetMuteHorn", ReplyAction="http://tempuri.org/IProcessDataService/GetMuteHornResponse")]
        System.Threading.Tasks.Task<bool> GetMuteHornAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/MuteHorn", ReplyAction="http://tempuri.org/IProcessDataService/MuteHornResponse")]
        void MuteHorn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/MuteHorn", ReplyAction="http://tempuri.org/IProcessDataService/MuteHornResponse")]
        System.Threading.Tasks.Task MuteHornAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/UnMuteHorn", ReplyAction="http://tempuri.org/IProcessDataService/UnMuteHornResponse")]
        void UnMuteHorn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessDataService/UnMuteHorn", ReplyAction="http://tempuri.org/IProcessDataService/UnMuteHornResponse")]
        System.Threading.Tasks.Task UnMuteHornAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProcessDataServiceChannel : IndustrialMonitoring.ProcessDataServiceReference.IProcessDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessDataServiceClient : System.ServiceModel.ClientBase<IndustrialMonitoring.ProcessDataServiceReference.IProcessDataService>, IndustrialMonitoring.ProcessDataServiceReference.IProcessDataService {
        
        public ProcessDataServiceClient() {
        }
        
        public ProcessDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProcessDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel GeItemsLogLatest(int itemId) {
            return base.Channel.GeItemsLogLatest(itemId);
        }
        
        public System.Threading.Tasks.Task<IndustrialMonitoring.ProcessDataServiceReference.ItemsLogLatestAIOViewModel> GeItemsLogLatestAsync(int itemId) {
            return base.Channel.GeItemsLogLatestAsync(itemId);
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item1> GetItems() {
            return base.Channel.GetItems();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item1>> GetItemsAsync() {
            return base.Channel.GetItemsAsync();
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item2> GetItems2() {
            return base.Channel.GetItems2();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item2>> GetItems2Async() {
            return base.Channel.GetItems2Async();
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item3> GetItems3() {
            return base.Channel.GetItems3();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item3>> GetItems3Async() {
            return base.Channel.GetItems3Async();
        }
        
        public IndustrialMonitoring.ProcessDataServiceReference.Item1 GetItem(int itemId) {
            return base.Channel.GetItem(itemId);
        }
        
        public System.Threading.Tasks.Task<IndustrialMonitoring.ProcessDataServiceReference.Item1> GetItemAsync(int itemId) {
            return base.Channel.GetItemAsync(itemId);
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Tab1> GetTabsAll() {
            return base.Channel.GetTabsAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Tab1>> GetTabsAllAsync() {
            return base.Channel.GetTabsAllAsync();
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Tab1> GetTab(System.Func<IndustrialMonitoring.ProcessDataServiceReference.Tab1, bool> predicate) {
            return base.Channel.GetTab(predicate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Tab1>> GetTabAsync(System.Func<IndustrialMonitoring.ProcessDataServiceReference.Tab1, bool> predicate) {
            return base.Channel.GetTabAsync(predicate);
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel> GetTabItemsAll() {
            return base.Channel.GetTabItemsAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel>> GetTabItemsAllAsync() {
            return base.Channel.GetTabItemsAllAsync();
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel> GetTabItems(System.Func<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel, bool> predicate) {
            return base.Channel.GetTabItems(predicate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel>> GetTabItemsAsync(System.Func<IndustrialMonitoring.ProcessDataServiceReference.TabsItemsViewModel, bool> predicate) {
            return base.Channel.GetTabItemsAsync(predicate);
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item1> GetItemsForTab(int tabId) {
            return base.Channel.GetItemsForTab(tabId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.Item1>> GetItemsForTabAsync(int tabId) {
            return base.Channel.GetItemsForTabAsync(tabId);
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsLogChartHistoryViewModel> GetItemLogs(int itemId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetItemLogs(itemId, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.ProcessDataServiceReference.ItemsLogChartHistoryViewModel>> GetItemLogsAsync(int itemId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetItemLogsAsync(itemId, startDate, endDate);
        }
        
        public bool AddItem2(IndustrialMonitoring.ProcessDataServiceReference.Item2 item) {
            return base.Channel.AddItem2(item);
        }
        
        public System.Threading.Tasks.Task<bool> AddItem2Async(IndustrialMonitoring.ProcessDataServiceReference.Item2 item) {
            return base.Channel.AddItem2Async(item);
        }
        
        public bool DeleteItem(int itemId) {
            return base.Channel.DeleteItem(itemId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteItemAsync(int itemId) {
            return base.Channel.DeleteItemAsync(itemId);
        }
        
        public bool EditItem2(IndustrialMonitoring.ProcessDataServiceReference.Item2 item) {
            return base.Channel.EditItem2(item);
        }
        
        public System.Threading.Tasks.Task<bool> EditItem2Async(IndustrialMonitoring.ProcessDataServiceReference.Item2 item) {
            return base.Channel.EditItem2Async(item);
        }
        
        public bool AddItemsToTab(string tabName, System.Collections.Generic.List<string> items) {
            return base.Channel.AddItemsToTab(tabName, items);
        }
        
        public System.Threading.Tasks.Task<bool> AddItemsToTabAsync(string tabName, System.Collections.Generic.List<string> items) {
            return base.Channel.AddItemsToTabAsync(tabName, items);
        }
        
        public bool GetHorn() {
            return base.Channel.GetHorn();
        }
        
        public System.Threading.Tasks.Task<bool> GetHornAsync() {
            return base.Channel.GetHornAsync();
        }
        
        public bool GetHornHMI() {
            return base.Channel.GetHornHMI();
        }
        
        public System.Threading.Tasks.Task<bool> GetHornHMIAsync() {
            return base.Channel.GetHornHMIAsync();
        }
        
        public bool GetMuteHorn() {
            return base.Channel.GetMuteHorn();
        }
        
        public System.Threading.Tasks.Task<bool> GetMuteHornAsync() {
            return base.Channel.GetMuteHornAsync();
        }
        
        public void MuteHorn() {
            base.Channel.MuteHorn();
        }
        
        public System.Threading.Tasks.Task MuteHornAsync() {
            return base.Channel.MuteHornAsync();
        }
        
        public void UnMuteHorn() {
            base.Channel.UnMuteHorn();
        }
        
        public System.Threading.Tasks.Task UnMuteHornAsync() {
            return base.Channel.UnMuteHornAsync();
        }
    }
}
