//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IndustrialMonitoring.UserServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserViewModel", Namespace="http://schemas.datacontract.org/2004/07/MonitoringServiceLibrary.ViewModels")]
    [System.SerializableAttribute()]
    public partial class UserViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User2", Namespace="http://schemas.datacontract.org/2004/07/MonitoringServiceLibrary.ViewModels")]
    [System.SerializableAttribute()]
    public partial class User2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceReference.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserName", ReplyAction="http://tempuri.org/IUserService/GetUserByUserNameResponse")]
        IndustrialMonitoring.UserServiceReference.UserViewModel GetUserByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserName", ReplyAction="http://tempuri.org/IUserService/GetUserByUserNameResponse")]
        System.Threading.Tasks.Task<IndustrialMonitoring.UserServiceReference.UserViewModel> GetUserByUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserId", ReplyAction="http://tempuri.org/IUserService/GetUserByUserIdResponse")]
        IndustrialMonitoring.UserServiceReference.UserViewModel GetUserByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserId", ReplyAction="http://tempuri.org/IUserService/GetUserByUserIdResponse")]
        System.Threading.Tasks.Task<IndustrialMonitoring.UserServiceReference.UserViewModel> GetUserByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Authorize", ReplyAction="http://tempuri.org/IUserService/AuthorizeResponse")]
        bool Authorize(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Authorize", ReplyAction="http://tempuri.org/IUserService/AuthorizeResponse")]
        System.Threading.Tasks.Task<bool> AuthorizeAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckPermission", ReplyAction="http://tempuri.org/IUserService/CheckPermissionResponse")]
        bool CheckPermission(int userId, int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckPermission", ReplyAction="http://tempuri.org/IUserService/CheckPermissionResponse")]
        System.Threading.Tasks.Task<bool> CheckPermissionAsync(int userId, int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UserHaveItemInTab", ReplyAction="http://tempuri.org/IUserService/UserHaveItemInTabResponse")]
        bool UserHaveItemInTab(int userId, int tabId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UserHaveItemInTab", ReplyAction="http://tempuri.org/IUserService/UserHaveItemInTabResponse")]
        System.Threading.Tasks.Task<bool> UserHaveItemInTabAsync(int userId, int tabId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsers2", ReplyAction="http://tempuri.org/IUserService/GetUsers2Response")]
        System.Collections.Generic.List<IndustrialMonitoring.UserServiceReference.User2> GetUsers2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsers2", ReplyAction="http://tempuri.org/IUserService/GetUsers2Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.UserServiceReference.User2>> GetUsers2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetPassword", ReplyAction="http://tempuri.org/IUserService/SetPasswordResponse")]
        int SetPassword(int userId, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetPassword", ReplyAction="http://tempuri.org/IUserService/SetPasswordResponse")]
        System.Threading.Tasks.Task<int> SetPasswordAsync(int userId, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserServicesPermission", ReplyAction="http://tempuri.org/IUserService/GetUserServicesPermissionResponse")]
        System.Collections.Generic.List<int> GetUserServicesPermission(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserServicesPermission", ReplyAction="http://tempuri.org/IUserService/GetUserServicesPermissionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetUserServicesPermissionAsync(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : IndustrialMonitoring.UserServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<IndustrialMonitoring.UserServiceReference.IUserService>, IndustrialMonitoring.UserServiceReference.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IndustrialMonitoring.UserServiceReference.UserViewModel GetUserByUserName(string userName) {
            return base.Channel.GetUserByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<IndustrialMonitoring.UserServiceReference.UserViewModel> GetUserByUserNameAsync(string userName) {
            return base.Channel.GetUserByUserNameAsync(userName);
        }
        
        public IndustrialMonitoring.UserServiceReference.UserViewModel GetUserByUserId(int userId) {
            return base.Channel.GetUserByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<IndustrialMonitoring.UserServiceReference.UserViewModel> GetUserByUserIdAsync(int userId) {
            return base.Channel.GetUserByUserIdAsync(userId);
        }
        
        public bool Authorize(string userName, string password) {
            return base.Channel.Authorize(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> AuthorizeAsync(string userName, string password) {
            return base.Channel.AuthorizeAsync(userName, password);
        }
        
        public bool CheckPermission(int userId, int itemId) {
            return base.Channel.CheckPermission(userId, itemId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckPermissionAsync(int userId, int itemId) {
            return base.Channel.CheckPermissionAsync(userId, itemId);
        }
        
        public bool UserHaveItemInTab(int userId, int tabId) {
            return base.Channel.UserHaveItemInTab(userId, tabId);
        }
        
        public System.Threading.Tasks.Task<bool> UserHaveItemInTabAsync(int userId, int tabId) {
            return base.Channel.UserHaveItemInTabAsync(userId, tabId);
        }
        
        public System.Collections.Generic.List<IndustrialMonitoring.UserServiceReference.User2> GetUsers2() {
            return base.Channel.GetUsers2();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IndustrialMonitoring.UserServiceReference.User2>> GetUsers2Async() {
            return base.Channel.GetUsers2Async();
        }
        
        public int SetPassword(int userId, string oldPassword, string newPassword) {
            return base.Channel.SetPassword(userId, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<int> SetPasswordAsync(int userId, string oldPassword, string newPassword) {
            return base.Channel.SetPasswordAsync(userId, oldPassword, newPassword);
        }
        
        public System.Collections.Generic.List<int> GetUserServicesPermission(int userId) {
            return base.Channel.GetUserServicesPermission(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetUserServicesPermissionAsync(int userId) {
            return base.Channel.GetUserServicesPermissionAsync(userId);
        }
    }
}
