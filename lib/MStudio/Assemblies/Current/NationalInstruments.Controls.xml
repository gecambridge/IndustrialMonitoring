<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NationalInstruments.Controls</name>
    </assembly>
    <members>
        <member name="T:NationalInstruments.Controls.Converters.ArcSweepConverter">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ArcSweepConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ArcSweepConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ArcSweepConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ArcSweepConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.DoubleToThicknessConverter">
            <summary>
            Used to scale a base thickness value by a numeric value.
            </summary>
            <remarks>
            Use the <see cref="T:NationalInstruments.Controls.Converters.DoubleToThicknessConverter"/> class to scale
            a base thickness by a single numeric value. Set 
            <see cref="P:NationalInstruments.Controls.Converters.DoubleToThicknessConverter.BaseThickness"/>
            to the <see cref="T:System.Windows.Thickness"/> value you wish to scale.
            </remarks>
            <lastupdated>5/31/2012 10:36:05 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.DoubleToThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
            <lastupdated>11/16/2011 3:37:55 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.DoubleToThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
            <lastupdated>11/16/2011 3:37:58 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Converters.DoubleToThicknessConverter.BaseThickness">
            <summary>
            Gets or sets the base thickness to scale.
            </summary>
            <value>The default value is a <see cref="T:System.Windows.Thickness"/> of one.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.EnumFlagMatcher">
            <summary>
            Uses the bitwise AND operator (<c>&amp;</c>) on numeric values to determine whether a value is a match for a target value.
            </summary>
            <remarks>
            This matcher is useful for testing whether a value includes an enum flag.
            </remarks>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.IValueMatcher">
            <summary>
            Represents an object with the capability to determine if a given value matches a
            target value.
            </summary>
            <remarks>
            The <see cref="M:NationalInstruments.Controls.Converters.IValueMatcher.IsMatch(System.Object,System.Object)"/> method
            compares a given value to a target value.
            </remarks>
            <lastupdated>5/31/2012 11:29:47 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.IValueMatcher.IsMatch(System.Object,System.Object)">
            <summary>
            Determines whether the given value matches the given target value.
            </summary>
            <param name="value">A value to test.</param>
            <param name="target">The target value to match against.</param>
            <returns><see langword="true"/> if <paramref name="value"/> matches <paramref name="target"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumFlagMatcher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Converters.EnumFlagMatcher" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>11/21/2011 2:11:12 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumFlagMatcher.IsMatch(System.Object,System.Object)">
            <inheritdoc/>
            <remarks>
            Determines a match by converting <paramref name="value"/> and <paramref name="target"/> to <see cref="T:System.Int64"/> values,
            and then testing whether the bitwise AND of the converted values is non-zero.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumFlagMatcher.ToString">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Converters.EnumFlagMatcher.MatchOnAnyFlag">
            <summary>
            Gets or sets a value indicating whether a value must match all flags (the default), or whether a value can match any flag.
            </summary>
            <value>A value indicating whether a value must match all flags (the default), or whether a value can match any flag.
            </value>
            <remarks>
            Set <see cref="P:NationalInstruments.Controls.Converters.EnumFlagMatcher.MatchOnAnyFlag"/> to <see langword="true"/> to allow matches against partial flag values.
            For example, given the flag value <c>ConsoleModifiers.Control | ConsoleModifiers.Shift</c>, the value <see cref="F:System.ConsoleModifiers.Control"/> will match against it.
            <para>
            By default, <see cref="P:NationalInstruments.Controls.Converters.EnumFlagMatcher.MatchOnAnyFlag"/> is set to <see langword="false"/> to allow only exact flag matches.
            For example, given the flag value <c>ConsoleModifiers.Control | ConsoleModifiers.Shift</c>, the value <see cref="F:System.ConsoleModifiers.Control"/> will not match against it,
            but the value <c>ConsoleModifiers.Control | ConsoleModifiers.Shift</c> or <c>ConsoleModifiers.Alt | ConsoleModifiers.Control | ConsoleModifiers.Shift</c> would match against it,
            as these include all of the given flags.
            </para>
            </remarks>
            <lastupdated>5/31/2012 4:51:31 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.EnumObjectConverter`1">
            <summary>
            Base class for converting <see cref="T:NationalInstruments.EnumObject"/> instances to and from string values.
            </summary>
            <typeparam name="T">The <see cref="T:NationalInstruments.EnumObject"/> type being converted.</typeparam>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.ConvertStringToObject(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
            <inheritdoc cref="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/>
            <summary>
            Converts the specified string value to an instance of the <typeparamref name="T"/> smart enum.
            </summary>
            <remarks>
            The default implementation uses <see cref="M:NationalInstruments.EnumObject.Parse(System.Type,System.String)"/> to parse the string value.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,`0)">
            <inheritdoc cref="M:NationalInstruments.Controls.Converters.EnumObjectConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/>
            <summary>
            Converts the specified <typeparamref name="T"/> smart enum value to a string.
            </summary>
            <remarks>
            The default implementation calls <see cref="M:System.Object.ToString"/> on the value.
            </remarks>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.EqualityMatcher">
            <summary>
            Uses value equality to determine whether a value is a match for a target value.
            </summary>
            <remarks>
            Use the <see cref="T:NationalInstruments.Controls.Converters.EqualityMatcher"/> to compare
            arbitrary types for value equality. The <see cref="M:NationalInstruments.Controls.Converters.EqualityMatcher.IsMatch(System.Object,System.Object)"/>
            method uses the <see cref="M:System.Object.Equals(System.Object,System.Object)"/> method to determine value
            equality.
            </remarks>
            <lastupdated>5/31/2012 11:03:36 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.EqualityMatcher.Default">
            <summary>
            Gets the default equality matcher.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EqualityMatcher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Converters.EqualityMatcher" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>11/21/2011 2:11:45 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EqualityMatcher.IsMatch(System.Object,System.Object)">
            <inheritdoc/>
            <remarks>
            Determines a match by testing whether <paramref name="value"/> is equal to <paramref name="target"/>
            using <see cref="M:System.Object.Equals(System.Object,System.Object)"/>
            </remarks>
            <lastupdated>5/31/2012 11:04:04 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.EqualityMatcher.ToString">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.MatchedValueConverter">
            <summary>
            Converts an input value to a result value by returning the first <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> in the <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.Matches"/> collection
            that has a matching <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/>, or returns <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.DefaultResult"/> if no match can be found.
            </summary>
            <remarks>
            Before matching, value conversion is performed to the type of the incoming value,
            allowing you to specify <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> values and results with simple strings.
            <para>
            Matches are performed against an instance of <see cref="T:NationalInstruments.Controls.Converters.IValueMatcher"/>.
            By default, an <see cref="T:NationalInstruments.Controls.Converters.EqualityMatcher"/> is used, which determines a match using the <see cref="M:System.Object.Equals(System.Object,System.Object)"/> static method.
            You can also use the <see cref="T:NationalInstruments.Controls.Converters.EnumFlagMatcher"/> to match <see cref="T:System.Enum"/> values against individual flags.
            </para>
            <para>
            <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/> works the same way as <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>, except that matches are performed against <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> instead,
            and <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> or <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.DefaultValue"/> is returned.
            </para>
            </remarks>
            <example>
            The following example demonstrates how to use <see cref="T:NationalInstruments.Controls.Converters.MatchedValueConverter"/> to perform basic conversions.
            <code lang="XAML">
            &lt;!--
             Convert a Boolean value to the opposite Visibility value:
               False: Visibility.Collapsed  (Default)
                True: Visibility.Visible
            --&gt;
            &lt;ni:MatchedValueConverter x:Key="BooleanToCollapsedVisibility" DefaultValue="False" DefaultResult="Visible"&gt;
                &lt;ni:MatchPair Value="True" Result="Collapsed" /&gt;
            &lt;/ni:MatchedValueConverter&gt;
             
            &lt;!--
             Convert an interaction mode value to a Boolean value for a specific enum flag:
               (Default): False
               EditRange: True
            --&gt;
            &lt;ni:EnumFlagMatcher x:Key="EnumFlagMatcher" /&gt;
            &lt;ni:MatchedValueConverter x:Key="IsRangeEditable" DefaultResult="False" ValueMatcher="{StaticResource EnumFlagMatcher}"&gt;
                &lt;ni:MatchPair Value="EditRange" Result="True" /&gt;
            &lt;/ni:MatchedValueConverter&gt;
            </code>
            </example>
            <lastupdated>6/19/2012 10:02:13 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.MatchedValueConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Converters.MatchedValueConverter" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>11/21/2011 2:12:07 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
            <summary>
            Returns the first <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> in <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.Matches"/> where <paramref name="value"/> matches <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/>,
            or returns <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.DefaultResult"/> if no matching <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> is found.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.MatchedValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
            <summary>
            Returns the first <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> in <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.Matches"/> where <paramref name="value"/> matches <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/>,
            or returns <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.DefaultValue"/> if no matching <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> is found.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Converters.MatchedValueConverter.Matches">
            <summary>
            Gets the collection of <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> values to search for a match on the value passed to <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>.
            </summary>
            <value>The collection of <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> values to search for a match on the value passed to <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>.
            </value>
            <lastupdated>5/31/2012 4:49:59 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Converters.MatchedValueConverter.DefaultValue">
            <summary>
            Gets or sets the default value to return if no <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> in <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.Matches"/>
            has a <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> equal to the passed to <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>.
            </summary>
            <value>The default value to return if no <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> in <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.Matches"/>
            has a <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> equal to the passed to <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>.</value>
            <lastupdated>5/31/2012 4:49:46 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Converters.MatchedValueConverter.DefaultResult">
            <summary>
            Gets or sets the default result to return if no <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> in <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.Matches"/>
            has a <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> equal to the passed to <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>.
            </summary>
            <value>The default result to return if no <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> in <see cref="P:NationalInstruments.Controls.Converters.MatchedValueConverter.Matches"/>
            has a <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> equal to the passed to <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>.
            </value>
            <lastupdated>5/31/2012 4:49:37 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Converters.MatchedValueConverter.ValueMatcher">
            <summary>
            Gets or sets the <see cref="T:NationalInstruments.Controls.Converters.IValueMatcher"/> to use when determining which <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> is a match for the value passed to <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>.
            </summary>
            <value>The <see cref="T:NationalInstruments.Controls.Converters.IValueMatcher"/> to use when determining which <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> is a match for the value passed to <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>.
            </value>
            <lastupdated>5/31/2012 4:50:11 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.MatchPair">
            <summary>
            Identifies a target value and result pair for <see cref="T:NationalInstruments.Controls.Converters.MatchedValueConverter"/>.
            </summary>
            <remarks>
            This class is used by <see cref="T:NationalInstruments.Controls.Converters.MatchedValueConverter"/> to identify the 
            <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> to return when the <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>
            method is called with the target <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/>.
            </remarks>
            <lastupdated>5/31/2012 11:07:25 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.MatchPair.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Converters.MatchPair"/> class.
            </summary>
            <lastupdated>11/21/2011 2:12:38 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.MatchPair.GetConvertedValue(System.Object)">
            <summary>
            Converts <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> to the same type as the specified source value.
            </summary>
            <param name="sourceValue">The object whose type determines what <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> will be converted to.</param>
            <returns><see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> converted to the type of <paramref name="sourceValue"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.MatchPair.GetConvertedValue(System.Type)">
            <summary>
            Converts <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> to the specified type.
            </summary>
            <param name="valueType">The type that <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> will be converted to.</param>
            <returns><see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/> converted to the type of <paramref name="valueType"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="valueType"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.MatchPair.GetConvertedResult(System.Object)">
            <summary>
            Converts <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> to the same type as the specified source result.
            </summary>
            <param name="sourceResult">The object whose type determines what <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> will be converted to.</param>
            <returns><see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> converted to the type of <paramref name="sourceResult"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.MatchPair.GetConvertedResult(System.Type)">
            <summary>
            Converts <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> to the specified type.
            </summary>
            <param name="resultType">The type that <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> will be converted to.</param>
            <returns><see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/> converted to the type of <paramref name="resultType"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="resultType"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:NationalInstruments.Controls.Converters.MatchPair.Value">
            <summary>
            Gets or sets the value for <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/> to match against.
            </summary>
            <value>
            The value that will cause <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>
            to return <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Result"/>.
            </value>
            <lastupdated>5/31/2012 11:09:04 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Converters.MatchPair.Result">
            <summary>
            Gets or sets the result to return when the value passed to <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/> matches <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/>.
            </summary>
            <value>
            The result that will be returned when <see cref="M:NationalInstruments.Controls.Converters.MatchedValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"/>
            is called with a matching <see cref="P:NationalInstruments.Controls.Converters.MatchPair.Value"/>.
            </value>
            <lastupdated>6/19/2012 10:02:57 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.NonNullMultiConverter">
            <summary>
            Represents a multi-value converter that returns the first non-<see langword="null"/> value in its input.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.NonNullMultiConverter.Instance">
            <summary>Gets a <see cref="T:NationalInstruments.Controls.Converters.NonNullMultiConverter"/> instance.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.NonNullMultiConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.NonNullMultiConverter.System#Windows#Data#IMultiValueConverter#ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.NotifyCollectionChangedSimplifier">
            <summary>
            Returns an <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> instance that issues one <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/>
            event for each item changed.
            </summary>
            <remarks>
            This converter is necessary when a collection that batches multiple changes into a single <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/>
            event, such as <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1"/>, is used to populate an <see cref="T:System.Windows.Controls.ItemsControl"/>.
            </remarks>
            <lastupdated>2012-03-09 1:17:36 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.NotifyCollectionChangedSimplifier.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.NotifyCollectionChangedSimplifier.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.NotifyCollectionChangedSimplifier.TrySimplify(System.Object)">
            <exclude/><summary>Creates a serializing wrapper around the specified value, if it is a collection.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.NotifyCollectionChangedSimplifier.UnbatchingCollection">
            <exclude/><summary>Wraps a notifying collection and serializes all batched change events.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.RangeConverter">
            <summary>
            Converts a <see cref="T:NationalInstruments.Controls.Range`1"/> to and from a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.RangeConverter.SerializationFormat">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RangeConverter.GetInputParts(System.String,System.IFormatProvider)">
            <exclude/>
            <summary>Splits an input string into an array of parts, based on the list separator of the culture.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RangeConverter.GetRangeArgumentType(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Gets the TData type of the range from the context, or <see langword="null"/> if the context does not have a strong-typed range destination.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RangeConverter.GetRangeArgumentType(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
            <summary>Gets the TData type of the range from the context or input string, falling back on <see cref="T:System.Double"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.RangeConverter.IConversionHelper">
            <exclude/><summary>Represents the helper used to convert ranges to and from formatted string values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.RangeConverter.ConversionHelper`2">
            <exclude/><summary>The helper used to convert ranges to and from formatted string values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.RelativeOrientationConverter">
            <summary>
            Converts a <see cref="T:NationalInstruments.Controls.RelativeOrientation"/> to and from a <see cref="T:System.String"/> or <see cref="T:System.Double"/> value.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RelativeOrientationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RelativeOrientationConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RelativeOrientationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.RelativeOrientationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.SizeToDimensionConverter">
            <summary>
            Converts a <see cref="T:System.Windows.Size"/> to a <see cref="T:System.Double"/> that represents
            one of the size's dimensions.
            </summary>
            <remarks>
            Use this class when you want to bind to only one of the dimensions of a
            <see cref="T:System.Windows.Size"/> property.
            </remarks>
            <lastupdated>5/31/2012 11:18:52 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.SizeToDimensionConverter.Width">
            <summary>Gets a <see cref="T:NationalInstruments.Controls.Converters.SizeToDimensionConverter"/>
            instance that converts a <see cref="T:System.Windows.Size"/> to its width.</summary>
            <lastupdated>5/31/2012 11:19:53 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.SizeToDimensionConverter.Height">
            <summary>Gets a <see cref="T:NationalInstruments.Controls.Converters.SizeToDimensionConverter"/>
            instance that converts a <see cref="T:System.Windows.Size"/> to its height.</summary>
            <lastupdated>5/31/2012 11:19:42 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.SizeToDimensionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.SizeToDimensionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.UIElementToNullConverter">
            <summary>
            Converts an object to null if it is a UIElement.
            Used to avoid duplicating UIElements in the visual tree.
            </summary>
            <lastupdated>6/19/2012 10:03:25 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.UIElementToNullConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.UIElementToNullConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.ValueEquivalenceConverter">
            <summary>
            Converter that will returns the result of a comparison between two values
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueEquivalenceConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueEquivalenceConverter.System#Windows#Data#IMultiValueConverter#ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.ValueFormatterConverter">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterConverter.GeneralFormatterPrefix">
            <summary>The prefix for the string representation of a <see cref="T:NationalInstruments.Controls.GeneralValueFormatter"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterConverter.GeneralFormatterShortFormatSeparator">
            <summary>The separator for the short-format in the string representation of a <see cref="T:NationalInstruments.Controls.GeneralValueFormatter"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterConverter.RadixFormatterPrefix">
            <summary>The prefix for the string representation of a <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterConverter.RadixFormatterSeparator">
            <summary>The separator for the settings in the string representation of a <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterConverter.RadixFormatterUppercase">
            <summary>The option for Uppercase in the string representation of a <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterConverter.RadixFormatterLowercase">
            <summary>The option for Lowercase in the string representation of a <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterConverter.RadixFormatterSigned">
            <summary>The option for Signed in the string representation of a <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterConverter.RadixFormatterUnsigned">
            <summary>The option for Unsigned in the string representation of a <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterConverter.RadixFormatterShowRadix">
            <summary>The option for ShowRadix in the string representation of a <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterConverter.ConvertFrom(System.String)">
            <exclude/>
            <summary>Converts a string value to a <see cref="T:NationalInstruments.Controls.GeneralValueFormatter"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterConverter.NormalizeFormat(System.String)">
            <summary>Normalizes the specified format string to its canonical form.</summary>
            <param name="format">The format string to normalize.</param>
            <returns>A format string without leading or trailing whitespace, or <see langword="null"/> if the string is empty.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterConverter.RemovePrefix(System.String,System.String@)">
            <summary>Removes the specified prefix from the input string, if present.</summary>
            <param name="prefix">The prefix to remove.</param>
            <param name="input">The input to check.</param>
            <returns><see langword="true"/> if <paramref name="input"/> contained <paramref name="prefix"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.ValueFormatterGroupConverter">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterGroupConverter.Prefix">
            <summary>The prefix for the string representation of a <see cref="T:NationalInstruments.Controls.ValueFormatterGroup"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.ValueFormatterGroupConverter.Separator">
            <summary>The separator for the formatters in the string representation of a <see cref="T:NationalInstruments.Controls.ValueFormatterGroup"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterGroupConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterGroupConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterGroupConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterGroupConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterGroupConverter.ConvertFrom(System.String)">
            <exclude/>
            <summary>Converts a string value to a <see cref="T:NationalInstruments.Controls.ValueFormatterGroup"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.ValueFormatterMultiConverter">
            <summary>
            Converts a value to a string given the specified <see cref="T:NationalInstruments.Controls.Primitives.IValueFormatter"/>.
            </summary>
            <remarks>
            The parameter is a format string.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterMultiConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValueFormatterMultiConverter.System#Windows#Data#IMultiValueConverter#ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <exclude/>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.ValuePresenterConverter">
            <exclude/>
            <lastupdated>5/31/2012 5:03:22 PM</lastupdated>
            <updatedby>jpeters</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValuePresenterConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValuePresenterConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValuePresenterConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.ValuePresenterConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Data.BufferCollection">
            <summary>
            Represents a read-only collection of buffers of various data types.
            </summary>
            <remarks>
            Use the <see cref="T:NationalInstruments.Controls.Data.BufferCollection"/> class to represent
            a collection of buffers of various data types.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/31/2012 11:53:03 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Data.BufferCollection.Empty">
            <summary>Gets a value representing an empty collection of data.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection.#ctor(NationalInstruments.DataInfrastructure.IBuffer[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.BufferCollection"/> class.
            </summary>
            <param name="data">The data buffers the collection will contain.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="data"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="data"/> contains a <see langword="null"/> buffer.
            </exception>
            <lastupdated>5/31/2012 12:04:51 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection.#ctor(System.Collections.Generic.IEnumerable{NationalInstruments.DataInfrastructure.IBuffer})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.BufferCollection"/> class.
            </summary>
            <param name="data">The data buffers the collection will contain.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="data"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="data"/> contains a <see langword="null"/> buffer.
            </exception>
            <lastupdated>5/4/2012 10:39:40 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection.VerifyData``1(``0[],System.Boolean)">
            <summary>
            Verifies that the data contains no <see langword="null"/> values, and returns a safe reference to the verified data.
            </summary>
            <typeparam name="T">The type of data to verify.</typeparam>
            <param name="data">The data to verify.</param>
            <param name="safe">A value indicating whether <paramref name="data"/> has been copied into an array is safe to use, or if a safe copy should be made.</param>
            <returns>A safe copy of <paramref name="data"/>.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Data.BufferCollection`1">
            <summary>
            Represents a read-only collection of buffers.
            </summary>
            <typeparam name="TData">The data type of the buffers.</typeparam>
            <remarks>
            Use the <see cref="T:NationalInstruments.Controls.Data.BufferCollection`1"/> class
            to represent a read-only collection of buffers that have a specific type.
            </remarks>
            <threadsafety safety="safe"/>
            <lastupdated>5/31/2012 12:04:19 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection`1.#ctor(NationalInstruments.DataInfrastructure.Buffer{`0}[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.BufferCollection`1"/> class.
            </summary>
            <param name="data">The data buffers the collection will contain.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="data"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="data"/> contains a <see langword="null"/> buffer.
            </exception>
            <lastupdated>5/31/2012 12:04:51 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection`1.#ctor(System.Collections.Generic.IEnumerable{NationalInstruments.DataInfrastructure.Buffer{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.BufferCollection`1"/>
            class.
            </summary>
            <param name="data">
            The data buffers the collection will contain.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="data"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="data"/> contains a <see langword="null"/> buffer.
            </exception>
            <lastupdated>5/31/2012 12:08:22 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection`1.Dispose(System.Boolean)">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
            <param name="disposing">A value indicating whether the method is called from <see cref="M:NationalInstruments.Controls.Data.BufferCollection`1.Dispose"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.BufferCollection`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Data.DataMapperChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:NationalInstruments.Controls.Data.IDataMapper.DataMapperChanged"/> event.
            </summary>
            <remarks>
            A <see cref="T:NationalInstruments.Controls.Data.DataMapperChangedEventArgs"/> instance is
            passed with each <see cref="E:NationalInstruments.Controls.Data.IDataMapper.DataMapperChanged"/>
            event. The <see cref="P:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.Source"/>
            property indicates the source of the event.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/31/2012 12:13:16 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.AdjustRangeSource">
            <summary>Identifies a <see cref="M:NationalInstruments.Controls.Data.IDataMapper`1.AdjustRange(NationalInstruments.Controls.Data.BufferCollection{`0},System.Double,System.Double)"/> change source.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.TransformSource">
            <summary>Identifies a <see cref="M:NationalInstruments.Controls.Data.IDataMapper.Transform(System.Double,System.Double)"/> change source.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.RestoreSource">
            <summary>Identifies a <see cref="M:NationalInstruments.Controls.Data.IDataMapper.Restore(System.Object)"/> change source.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.RangeSource">
            <summary>Identifies a <see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range"/> change source.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.DataMapperChangedEventArgs"/> class with the specified source.
            </summary>
            <param name="source">The source of the event.</param>
            <param name="restoreState">
            An object that can be used to <see cref="M:NationalInstruments.Controls.Data.IDataMapper.Restore(System.Object)"/> the state of the data mapper before the change,
            or <see langword="null"/> if the change cannot be undone.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="source"/> is empty.
            </exception>
            <lastupdated>2014-11-20 9:07:26 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.ToString">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.Source">
            <summary>Gets the source of the event.</summary>
            <value>The source of the event.</value>
            <lastupdated>5/31/2012 12:13:33 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.RestoreState">
            <summary>Gets the source of the event.</summary>
            <value>The source of the event.</value>
            <lastupdated>2014-11-20 9:07:26 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.IDataMapper">
            <summary>
            Represents a data mapper that converts raw data to relative values.
            </summary>
            <seealso cref="T:NationalInstruments.Controls.Data.IDataMapper`1"/>
            <remarks>
            Implementations of <see cref="T:NationalInstruments.Controls.Data.IDataMapper"/> are used
            to convert data values to relative values.
            </remarks>
            <lastupdated>5/31/2012 12:44:09 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IDataMapper.Transform(System.Double,System.Double)">
            <summary>
            Shifts and resizes the data mapper by the specified factors.
            </summary>
            <param name="panFactor">The relative amount to pan the data mapper.</param>
            <param name="zoomFactor">The relative amount to zoom the data mapper.</param>
            <remarks>
            <para>
            The pan factor controls the relative position of the edge of the "window" of the mapper closest to
            the relative coordinate 0. Changing the pan factor has the same effect as sliding this window along
            the axis. The "width" of the data displayed will not change.
            </para>
            <para>
            The zoom factor controls the width of the "window" of the mapper in relative coordinates. It cannot
            be negative or zero.
            </para>
            <para>
            For example, a pan factor of 0 and a zoom factor of 1 will map from relative coordinate 0.0 to 1.0.
            A pan factor of 0.1 and zoom factor of 0.3 will map from 0.1 to 0.4.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="panFactor"/> is <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.NegativeInfinity"/>, or <see cref="F:System.Double.PositiveInfinity"/>.
            <para>- or -</para>
            <para>
            <paramref name="zoomFactor"/> is <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.NegativeInfinity"/>, or <see cref="F:System.Double.PositiveInfinity"/>.
            </para>
            <para>- or -</para>
            <para>
            <paramref name="zoomFactor"/> is less than or equal to zero.
            </para>
            </exception>
            <lastupdated>5/31/2012 1:47:38 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IDataMapper.Restore(System.Object)">
            <summary>
            Restores the data mapper to a previous configuration using the specified state.
            </summary>
            <param name="restoreState">A <see cref="P:NationalInstruments.Controls.Data.DataMapperChangedEventArgs.RestoreState"/> value.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="restoreState"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="restoreState"/> is not a valid value for the current data mapper.
            </exception>
        </member>
        <member name="P:NationalInstruments.Controls.Data.IDataMapper.DataType">
            <summary>Gets the type of data supported by the data mapper.</summary>
            <value>The type of data supported by the data mapper.</value>
            <lastupdated>5/4/2012 11:25:35 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="E:NationalInstruments.Controls.Data.IDataMapper.DataMapperChanged">
            <summary>
            Occurs when a change to the data mapper requires existing relative values to be re-mapped.
            </summary>
            <lastupdated>5/4/2012 11:27:11 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.IDataMapper`1">
            <summary>
            Represents a strongly-typed data mapper that converts raw data to relative values.
            </summary>
            <typeparam name="TData">The data type of the data mapper.</typeparam>
            <remarks>
            UI controls use data mappers to accurately display any data type.
            </remarks>
            <seealso cref="T:NationalInstruments.Controls.Data.IDataMapper"/>
            <lastupdated>6/18/2012 5:06:27 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IDataMapper`1.Contains(`0)">
            <summary>
            Returns a value indicating whether the specified raw data value is inside the bounds of the data mapper.
            </summary>
            <param name="value">A raw data value.</param>
            <returns><see langword="true"/> if the value is inside the bounds of the data mapper; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IDataMapper`1.Overlaps(NationalInstruments.Controls.Data.BufferCollection{`0})">
            <summary>
            Returns a value indicating whether the specified raw data values appear in or cross the bounds of the data mapper.
            </summary>
            <param name="data">The raw data values to test.</param>
            <returns>
            <see langword="true"/> if any value is inside the bounds of the data mapper,
            or if any values cross the bounds of the data mapper;
            otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="data"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IDataMapper`1.AdjustRange(NationalInstruments.Controls.Data.BufferCollection{`0},System.Double,System.Double)">
            <summary>
            Adjusts the logical range of the data mapper to accommodate the specified data.
            </summary>
            <param name="data">The data used to adjust the logical range of the data mapper.</param>
            <param name="minimumMargin">The relative margin to apply to the minimum of the range.</param>
            <param name="maximumMargin">The relative margin to apply to the maximum of the range.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="data"/> is <see langword="null"/>.
            </exception>
            <lastupdated>2012-06-28 1:02:33 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IDataMapper`1.Map(NationalInstruments.DataInfrastructure.Buffer{`0})">
            <summary>
            Converts the specified raw data values to the corresponding relative values.
            </summary>
            <param name="values">A buffer of raw data values.</param>
            <returns>
            A <see cref="T:NationalInstruments.DataInfrastructure.Buffer`1"/> containing the relative values corresponding to each of the specified raw data values in the bounds of the data mapper.
            </returns>
            <remarks>
            Data values that cannot be mapped are set to <see cref="F:System.Double.NaN"/> and 
            marked with an invalid samples trait.
            <para>
            The interval trait for the incoming buffer is mapped to the appropriate <see cref="T:NationalInstruments.Controls.Data.RelativeIntervalTrait"/> value.
            </para>
            <para>
            The <see cref="P:NationalInstruments.DataInfrastructure.Buffer`1.Unit"/> of the returned buffer of relative values is 
            <see cref="T:NationalInstruments.Controls.Data.RelativeValueUnit"/>.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="values"/> is <see langword="null"/>.
            </exception>
            <lastupdated>6/18/2012 5:07:38 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IDataMapper`1.Map(`0)">
            <summary>
            Converts the specified raw data value to the corresponding relative value.
            </summary>
            <param name="value">A raw data value.</param>
            <returns>
            The relative value corresponding to the specified raw data value in the bounds of the data mapper, 
            or <see cref="F:System.Double.NaN"/> if the value could not be mapped.
            </returns>
            <remarks>
            Converts the specified raw data value to the corresponding relative value.
            </remarks>
            <lastupdated>6/18/2012 5:07:54 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IDataMapper`1.InverseMap(NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Unit)">
            <summary>
            Converts the specified relative values to the corresponding raw data values.
            </summary>
            <param name="relativeValues">A buffer of relative values.</param>
            <param name="unit">The unit of the raw data values, used to set <see cref="P:NationalInstruments.DataInfrastructure.IBuffer.Unit"/>.</param>
            <returns>
            A <see cref="T:NationalInstruments.DataInfrastructure.Buffer`1"/> containing the raw data values corresponding to each of the specified relative 
            values in the bounds of the data mapper.
            </returns>
            <remarks>
            Relative values that cannot be unmapped are set to the default value of <typeparamref name="TData"/> and 
            marked with an invalid samples trait.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="relativeValues"/> is <see langword="null"/>.
            </exception>
            <lastupdated>5/4/2012 11:32:30 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IDataMapper`1.TryInverseMap(System.Double,`0@)">
            <summary>
            Converts the specified relative value to the corresponding raw data value.
            </summary>
            <param name="relativeValue">A value relative to the corresponding raw data value.</param>
            <param name="value">
            Contains the raw data value corresponding to the specified relative value in the bounds of the data mapper 
            if the conversion succeeded, or the default value of <typeparamref name="TData"/> if the conversion failed.
            </param>
            <returns><see langword="true"/> if <paramref name="relativeValue"/> was converted successfully; otherwise <see langword="false"/>.</returns>
            <lastupdated>5/4/2012 11:36:07 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.IDataMapper`1.Descriptor">
            <summary>
            Gets the descriptor used by the data mapper to perform mathematical operations on raw data values.
            </summary>
            <remarks>Gets the descriptor used by the data mapper to perform mathematical operations on raw data values.</remarks>
            <value>
            The descriptor used by the data mapper to perform mathematical operations on raw data values,
            or <see langword="null"/> if the data mapper is limited to a specific data type and does not use a descriptor.
            </value>
            <lastupdated>6/18/2012 5:07:06 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.ILogarithmicRangeDataMapper`2">
            <summary>
            Represents a strongly-typed data mapper that uses a <see cref="T:NationalInstruments.Controls.Range`1"/> to map raw data values.
            </summary>
            <typeparam name="TData">The data type of the data mapper.</typeparam>
            <typeparam name="TLog">The corresponding logarithm type for the <typeparamref name="TData"/> data type.</typeparam>
            <seealso cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/>
            <threadsafety safety="unsafe"/>
            <remarks>
            Implementations of <see cref="T:NationalInstruments.Controls.Data.ILogarithmicRangeDataMapper`2"/>
            use a logarithmic <see cref="T:NationalInstruments.Controls.Range`1"/> to map values.
            </remarks>
            <lastupdated>5/31/2012 1:51:42 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.IRangeDataMapper`1">
            <summary>
            Represents a strongly-typed data mapper that uses a <see cref="T:NationalInstruments.Controls.Range`1"/> to map numeric data values.
            </summary>
            <typeparam name="TData">The data type of the data mapper.</typeparam>
            <seealso cref="T:NationalInstruments.Controls.Data.IDataMapper`1"/>
            <remarks>
            Implementations of <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/>
            use a <see cref="T:NationalInstruments.Controls.Range`1"/> to map values.
            </remarks>
            <lastupdated>5/31/2012 1:56:26 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.IRangeDataMapper">
            <summary>
            Represents a data mapper that can return an <see cref="T:NationalInstruments.Controls.Primitives.IRange"/> to map numeric data values.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IRangeDataMapper.GetRange">
            <summary>Gets the range used to map raw data values.</summary>
            <returns>The range used to map raw data values.</returns>
            <lastupdated>6/10/2013 12:54:58 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.IRangeDataMapper.RangeAdjuster">
            <summary>
            Gets or sets the adjuster used to update the <see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range"/> for new data.
            </summary>
            <value>
            The adjuster used to update the <see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range"/> for new data.
            </value>
            <remarks>
            The default value is <see cref="P:NationalInstruments.Controls.RangeAdjuster.FitLoosely"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <lastupdated>5/4/2012 12:54:58 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IRangeDataMapper`1.CanAcceptRange(NationalInstruments.Controls.Range{`0})">
            <summary>
            Determines whether the specified range can be assigned to <see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range"/>.
            </summary>
            <param name="range">The <see cref="T:NationalInstruments.Controls.Range`1"/> to validate.</param>
            <returns><see langword="true"/> if <paramref name="range"/> is valid; otherwise, <see langword="false"/>.</returns>
            <lastupdated>5/4/2012 11:44:46 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IRangeDataMapper`1.CoerceRange(NationalInstruments.Controls.Range{`0})">
            <summary>
            Returns a coerced range based on the given range that can be assigned to <see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range"/>.
            </summary>
            <param name="range">The <see cref="T:NationalInstruments.Controls.Range`1"/> to coerce.</param>
            <returns>A <see cref="T:NationalInstruments.Controls.Range`1"/> based on <paramref name="range"/> that can be assigned to 
            <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/>.</returns>
            <lastupdated>5/4/2012 11:46:01 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range">
            <summary>
            Gets or sets the range used to map raw data values.
            </summary>
            <value>The range used to map raw data values.</value>
            <exception cref="T:System.ArgumentException">
              <see cref="M:NationalInstruments.Controls.Data.IRangeDataMapper`1.CanAcceptRange(NationalInstruments.Controls.Range{`0})"/> returns <see langword="false"/> for <paramref name="value"/>.
            </exception>
            <lastupdated>5/4/2012 12:54:53 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.IsInverted">
            <summary>
            Gets or sets a value indicating whether the range is inverted.
            </summary>
            <value>The default value is <see langword="false"/>.
            </value>
            <remarks>
            <para>
            A normal range (<see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.IsInverted"/> equal to <see langword="false"/>) maps 
            values near <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> towards 0.0 and 
            values near <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/> towards 1.0.
            </para>
            <para>
            An inverted range (<see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.IsInverted"/> equal to <see langword="true"/>) maps 
            values near <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> towards 1.0 and 
            values near <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/> towards 0.0.
            </para>
            </remarks>
            <lastupdated>5/4/2012 11:42:29 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.ILogarithmicRangeDataMapper`2.CanAcceptLogarithmBase(`1)">
            <summary>
            Determines whether the specified logarithm base can be assigned to <see cref="P:NationalInstruments.Controls.Data.ILogarithmicRangeDataMapper`2.LogarithmBase"/>.
            </summary>
            <param name="logarithmBase">The logarithm base to validate.</param>
            <returns><see langword="true"/> if <paramref name="logarithmBase"/> is valid; otherwise, <see langword="false"/>.</returns>
            <lastupdated>5/4/2012 11:39:11 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.ILogarithmicRangeDataMapper`2.LogarithmBase">
            <summary>
            Gets or sets the base of the logarithm used for the data mapper.
            </summary>
            <exception cref="T:System.ArgumentException">
            <see cref="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.CanAcceptLogarithmBase(`2)"/>
             returns <see langword="false"/> for <paramref name="value"/>.
            </exception>
            <value>
            The base of the logarithm used by the data mapper as defined by the implementation.
            </value>
            <lastupdated>5/31/2012 1:52:25 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1">
            <summary>Represents an object to perform scaling calculations for a specific range.</summary>
            <typeparam name="TData">The data type of the calculator.</typeparam>
            <remarks>
            The calculator is used by <see cref="T:NationalInstruments.Controls.Data.RangeDataMapper`2"/> to perform mapping calculations. Because the range values
            passed to <see cref="M:NationalInstruments.Controls.Data.RangeDataMapper`2.GetMapperCalculator"/> are constant, any dependent values can be calculated
            once at creation time.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/14/2012 1:13:16 AM</lastupdated>
            <updatedby>Owen Pellegrin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1.Map(`0)">
            <inheritdoc cref="M:NationalInstruments.Controls.Data.IDataMapper`1.Map(`0)"/>
            <summary>Implements the <see cref="M:NationalInstruments.Controls.Data.IDataMapper`1.Map(`0)"/> method.</summary>
            <lastupdated>5/4/2012 3:13:46 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1.TryInverseMap(System.Double,`0@)">
            <inheritdoc cref="M:NationalInstruments.Controls.Data.IDataMapper`1.TryInverseMap(System.Double,`0@)"/>
            <summary>Implements the <see cref="M:NationalInstruments.Controls.Data.IDataMapper`1.TryInverseMap(System.Double,`0@)"/> method.</summary>
            <lastupdated>5/4/2012 12:52:10 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1.ShiftByDifference(`0,`0,`0)">
            <summary>Shifts <paramref name="value"/> by the difference between the specified original and shifted baseline values.</summary>
            <param name="value">The value to shift.</param>
            <param name="originalValue">The original baseline value.</param>
            <param name="shiftedOriginalValue">The <paramref name="originalValue"/> shifted by the target amount.</param>
            <returns>The <paramref name="value"/> shifted by the difference between the <paramref name="originalValue"/> and the <paramref name="shiftedOriginalValue"/>.</returns>
            <lastupdated>5/4/2012 12:51:42 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1.Range">
            <inheritdoc cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range"/>
            <remarks>
            Returns the <see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range"/> value the calculator was created with.
            </remarks>
            <lastupdated>5/4/2012 12:48:00 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1.IsInverted">
            <inheritdoc cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.IsInverted"/>
            <remarks>
            Returns the <see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.IsInverted"/> value the calculator was created with.
            </remarks>
            <lastupdated>5/4/2012 12:47:34 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.LinearRangeDataMapper`3">
            <inheritdoc/>
            <summary>
            Represents a data mapper for linear data.
            </summary>
            <remarks>
            The <see cref="T:NationalInstruments.Controls.Data.LinearRangeDataMapper`3"/>
            class maps values using a linear mapping function.
            </remarks>
            <typeparam name="TData">The data type of the data mapper.</typeparam>
            <typeparam name="THelper">The corresponding mathematical type for the <typeparamref name="TData"/> data type.</typeparam>
            <typeparam name="TOperations">The descriptor type to use when performing operations on <typeparamref name="TData"/> values.</typeparam>
            <seealso cref="T:NationalInstruments.Controls.Data.RangeDataMapper`2"/>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/31/2012 12:31:42 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
            <content>[partial class - CAR #397339]</content>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="T:NationalInstruments.Controls.Data.RangeDataMapper`2">
            <summary>
            Provides a common base class implementation for <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/>.
            </summary>
            <typeparam name="TData">The data type of the data mapper.</typeparam>
            <typeparam name="TOperations">The descriptor type to use when performing operations on <typeparamref name="TData"/> values.</typeparam>
            <seealso cref="T:NationalInstruments.Controls.Data.IDataMapper"/>
            <seealso cref="T:NationalInstruments.Controls.Data.IDataMapper`1"/>
            <seealso cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/>
            <remarks>
            Implementations of <see cref="T:NationalInstruments.Controls.Data.RangeDataMapper`2"/>
            use a <see cref="T:NationalInstruments.Controls.Range`1"/> to map values.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/31/2012 12:29:53 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Data.RangeDataMapper`2.Ops">
            <summary>
            Gets the <typeparamref name="TOperations"/> descriptor used to perform mathematical operations on raw <typeparamref name="TData"/> values.
            </summary>
            <lastupdated>2012-05-15 9:40:20 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.Transform(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.Restore(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.Contains(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.Overlaps(NationalInstruments.Controls.Data.BufferCollection{`0})">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.CanAcceptRange(NationalInstruments.Controls.Range{`0})">
            <inheritdoc/>
            <remarks>
            The base implementation checks that the specified <see cref="T:NationalInstruments.Controls.Range`1"/> is not empty.
            </remarks>
            <lastupdated>5/4/2012 11:00:53 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.CanAcceptRangeCore(NationalInstruments.Controls.Range{`0})">
            <inheritdoc cref="M:NationalInstruments.Controls.Data.RangeDataMapper`2.CanAcceptRange(NationalInstruments.Controls.Range{`0})"/>
            <summary>
            Implements the <see cref="M:NationalInstruments.Controls.Data.RangeDataMapper`2.CanAcceptRange(NationalInstruments.Controls.Range{`0})"/> method.
            </summary>
            <lastupdated>5/4/2012 11:01:36 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.CoerceRange(NationalInstruments.Controls.Range{`0})">
            <inheritdoc/>
            <remarks>
            The base implementation returns a default range from <c>0</c> to <c>10</c> if the specified <see cref="T:NationalInstruments.Controls.Range`1"/> is empty.
            </remarks>
            <lastupdated>5/4/2012 11:02:09 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.GetValidRange(NationalInstruments.Controls.Range{`0})">
            <summary>
            Returns a valid range for the data mapper.
            </summary>
            <param name="range">An existing invalid range that the new range can be based on.</param>
            <returns>A valid range for the data mapper.</returns>
            <lastupdated>5/4/2012 11:08:28 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.AdjustRange(NationalInstruments.Controls.Data.BufferCollection{`0},System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.Map(`0)">
            <inheritdoc/>
            <param name="value">A raw data value.</param>
            <lastupdated>6/6/2012 2:58:20 PM</lastupdated>
            <updatedby>Lisa</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.Map(NationalInstruments.DataInfrastructure.Buffer{`0})">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.TryInverseMap(System.Double,`0@)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.InverseMap(NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Unit)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.GetMapperCalculator">
            <summary>
            Retrieves an <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1"/> implementation used to perform mapping calculations
            using the values of <see cref="P:NationalInstruments.Controls.Data.RangeDataMapper`2.Range"/> and <see cref="P:NationalInstruments.Controls.Data.RangeDataMapper`2.IsInverted"/>
            on the mapper.
            </summary>
            <returns>
            An <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1"/> implementation for the current mapper state.
            </returns>
            <lastupdated>2012-05-15 9:42:05 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.GetMapperCalculator(NationalInstruments.Controls.Range{`0},System.Boolean)">
            <summary>
            Retrieves an <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1"/> implementation used to perform mapping calculations on the specified range values.
            </summary>
            <param name="range">The value of the range.</param>
            <param name="isInverted">A value indicating whether the range is inverted.</param>
            <returns>
            An <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1"/> implementation for the specified mapper state.
            </returns>
            <exception cref="T:System.ArgumentException">
              <see cref="M:NationalInstruments.Controls.Data.IRangeDataMapper`1.CanAcceptRange(NationalInstruments.Controls.Range{`0})"/> returns <see langword="false"/> for <paramref name="range"/>.
            </exception>
            <lastupdated>2012-05-15 9:42:22 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.GetMapperCalculatorCore(NationalInstruments.Controls.Range{`0},System.Boolean)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.CreateMapperCalculator(NationalInstruments.Controls.Range{`0},System.Boolean)">
            <inheritdoc cref="M:NationalInstruments.Controls.Data.RangeDataMapper`2.GetMapperCalculator(NationalInstruments.Controls.Range{`0},System.Boolean)"/>
            <summary>Creates a new <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1"/> for the specified range values.</summary>
            <lastupdated>5/4/2012 11:02:39 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.TryMapInterval(System.Object,System.Double@)">
            <summary>
            Tries to map the declared interval for a buffer to a relative value.
            </summary>
            <param name="interval">The interval for the buffer.</param>
            <param name="relativeInterval">When this method returns <see langword="true"/>, contains the relative value corresponding to the buffer interval.</param>
            <returns><see langword="true"/> if <paramref name="interval"/> could be mapped to <paramref name="relativeInterval"/>; otherwise, <see langword="false"/>.</returns>
            <remarks>
            The value of <paramref name="relativeInterval"/> is the relative mapping of <paramref name="interval"/>
            added to the current <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> value of <see cref="T:NationalInstruments.Controls.Range"/>, without inversion.
            <para>
            For example, for a range of <c>[0,10]</c> and an increment of <c>1</c>, <paramref name="relativeInterval"/> would be <c>0.1</c> (minimum 0 + interval 1).
            </para>
            </remarks>
            <lastupdated>5/4/2012 11:10:12 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.GetRelativeIntervalTrait(System.Object,System.Double,NationalInstruments.DataInfrastructure.TraitSet)">
            <summary>
            Gets the relative interval trait for a buffer.
            </summary>
            <param name="interval">The smallest interval for the buffer, or <see langword="null"/>.</param>
            <param name="relativeInterval">The relative value of <paramref name="interval"/>.</param>
            <param name="traits">The traits for the buffer.</param>
            <returns>The relative interval trait for a buffer, or <see langword="null"/> if the buffer does not contain an interval.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.OnIsInvertedChanged">
            <summary>Called when the value of <see cref="P:NationalInstruments.Controls.Data.RangeDataMapper`2.IsInverted"/> has changed.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.OnRangeChanged(NationalInstruments.Controls.Range{`0})">
            <summary>Called when the value of <see cref="P:NationalInstruments.Controls.Data.RangeDataMapper`2.Range"/> has changed.</summary>
            <param name="oldRange">The old value of <see cref="P:NationalInstruments.Controls.Data.RangeDataMapper`2.Range"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.NationalInstruments#Controls#Data#IRangeDataMapper#GetRange">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.TryMapInterval``1(System.Object,NationalInstruments.DataInfrastructure.Descriptors.IOpAddition{`0,``0},System.Double@)">
            <exclude/>
            <summary>Used by derived implementations to handle interval mapping.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.GetRelativeIntervalTrait(NationalInstruments.DataInfrastructure.TraitSet)">
            <exclude/>
            <summary>Used by derived implementations to handle interval mapping.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.TraitFilter(NationalInstruments.DataInfrastructure.Trait)">
            <exclude/>
            <summary>Used by derived implementations to perform standard trait filtering for mapped values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.RangeDataMapper`2"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeDataMapper`2.OnDataMapperChanged(NationalInstruments.Controls.Data.DataMapperChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NationalInstruments.Controls.Data.RangeDataMapper`2.DataMapperChanged"/> event.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e"/> is <see langword="null"/>.
            </exception>
            <param name="e">
            An instance of <see cref="T:NationalInstruments.Controls.Data.DataMapperChangedEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeDataMapper`2.DataType">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeDataMapper`2.Descriptor">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeDataMapper`2.IsInverted">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeDataMapper`2.RangeAdjuster">
            <inheritdoc/><exception cref="T:System.ArgumentNullException">
      <para>
        <paramref name="value"/> cannot be <see langword="null"/>.</para>
    </exception>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeDataMapper`2.Range">
            <inheritdoc/><exception cref="T:System.ArgumentException"><para><see cref="M:NationalInstruments.Controls.Data.IRangeDataMapper`1.CanAcceptRange(NationalInstruments.Controls.Range{`0})"/>
 returns <see langword="false"/> for <see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range"/>.</para></exception><lastupdated>5/4/2012 11:12:33 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="E:NationalInstruments.Controls.Data.RangeDataMapper`2.DataMapperChanged">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ILinearRangeDataMapper">
            <summary>
            Used to indicate that a data mapper is linear.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LinearRangeDataMapper`3.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LinearRangeDataMapper`3.CreateMapperCalculator(NationalInstruments.Controls.Range{`0},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LinearRangeDataMapper`3.TryMapInterval(System.Object,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Data.LinearRangeDataMapper`3.LinearCalculator">
            <summary>
            Performs linear interpolation on a value in a given range.
            <para>
            For example, given a raw data value starting at Range.Minimum and moving towards Range.Maximum,
            the corresponding relative value will move linearly from 0.0 to 1.0. If the range is inverted,
            the relative value will move linearly from 1.0 to 0.0 instead.
            </para>
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Data.LinearRangeDataMapper`3.LinearOverflowCalculator">
            <summary>
            Like <see cref="T:NationalInstruments.Controls.Data.LinearRangeDataMapper`3.LinearCalculator"/>, performs linear interpolation on a value in a given range,
            with special consideration to the size limits of the underlying data type.
            <para>
            For example, if <code>TData</code> is <see cref="T:System.SByte"/>, then trying to calculate the interval between
            <see cref="F:System.SByte.MinValue"/> (-128) and <see cref="F:System.SByte.MaxValue"/> (127) would require more space than can fit in a <see cref="T:System.SByte"/>.
            </para>
            <para>
            Instead, we divide the range into two ranges, such as [-128,0) and [0,127], which can be calculated without overflow.
            Then we use the appropriate calculator based on where the input value falls, adjusting the calculated relative value
            to match the proportion of the original range that it covers.
            </para>
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Data.LinearRangeDataMapper`3.LinearOverflowCalculator.SubrangeCalculator">
            <exclude/><summary>Contains information on a subset of the full range covered by the data mapper.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5">
            <inheritdoc/>
            <summary>Represents a logarithmic data mapper.</summary>
            <typeparam name="TData">The data type of the data mapper.</typeparam>
            <typeparam name="TOperations">The descriptor type to use when performing operations on <typeparamref name="TData"/> values.</typeparam>
            <typeparam name="TLog">The corresponding logarithm type for the <typeparamref name="TData"/> data type.</typeparam>
            <typeparam name="TLogHelper">The corresponding mathematical type for the <typeparamref name="TLog"/> data type.</typeparam>
            <typeparam name="TLogOperations">The descriptor type to use when performing operations on <typeparamref name="TLog"/> values.</typeparam>
            <remarks>
            The <see cref="T:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5"/>
            class maps values using a logarithmic mapping function.
            </remarks>
            <seealso cref="T:NationalInstruments.Controls.Data.RangeDataMapper`2"/>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/31/2012 12:31:11 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
            <content>[partial class - CAR #397339]</content>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.CanAcceptLogarithmBase(`2)">
            <inheritdoc/>
            <remarks>
            Checks that the logarithm base is greater than zero.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.CanAcceptRangeCore(NationalInstruments.Controls.Range{`0})">
            <inheritdoc/>
            <remarks>
            Checks that the range is greater than zero.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.GetValidRange(NationalInstruments.Controls.Range{`0})">
            <inheritdoc/>
            <remarks>
            Returns a range that is greater than zero.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.GetMapperCalculator(NationalInstruments.Controls.Range{`0},System.Boolean,`2)">
            <summary>
            Retrieves an <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1"/> implementation used to perform mapping calculations on the specified range values.
            </summary>
            <param name="range">The value of the range.</param>
            <param name="isInverted">A value indicating whether the range is inverted.</param>
            <param name="logarithmBase">The value of the logarithm base.</param>
            <returns>An <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapperCalculator`1"/> implementation for the specified mapper state.</returns>
            <exception cref="T:System.ArgumentException">
            <see cref="M:NationalInstruments.Controls.Data.IRangeDataMapper`1.CanAcceptRange(NationalInstruments.Controls.Range{`0})"/> returns <see langword="false"/> for <paramref name="range"/>.
            </exception>
            <lastupdated>5/22/2012 3:25:12 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.CreateMapperCalculator(NationalInstruments.Controls.Range{`0},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.TryMapInterval(System.Object,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.GetRelativeIntervalTrait(System.Object,System.Double,NationalInstruments.DataInfrastructure.TraitSet)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5"/> class.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.LogarithmBase">
            <summary>Gets or sets the base of the logarithm used for the scale.</summary><value>The default value is 10.</value><exception cref="T:System.ArgumentException"><para><see cref="M:NationalInstruments.Controls.Data.ILogarithmicRangeDataMapper`2.CanAcceptLogarithmBase(`1)"/>
 returns <see langword="false"/> for <c>LogarithmBase</c>.</para></exception><lastupdated>5/31/2012 12:26:11 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.LogarithmicCalculator">
            <summary>Performs logarithmic interpolation on a value in a given range.</summary>
            <remarks>
            The implementation performs a logarithmic interpolation by taking the logarithm of the input value and performing a linear
            interpolation of the resulting value.
            </remarks>
        </member>
        <member name="T:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.IRelativeIntervalHelper">
            <summary>Represents a helper used to calculate relative intervals for specific relative values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.RelativeIntervalHelper`2">
            <summary>The <see cref="T:NationalInstruments.Controls.Data.LogarithmicRangeDataMapper`5.IRelativeIntervalHelper"/> implementation.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Data.RangeAdjusterArgs`1">
            <summary>
            Provides data for <see cref="M:NationalInstruments.Controls.RangeAdjuster.GetAdjustedRange``1(NationalInstruments.Controls.Data.RangeAdjusterArgs{``0})"/> method calls.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <remarks>
            Use <see cref="T:NationalInstruments.Controls.Data.RangeAdjusterArgs`1"/> to provide information for
            <see cref="M:NationalInstruments.Controls.RangeAdjuster.GetAdjustedRange``1(NationalInstruments.Controls.Data.RangeAdjusterArgs{``0})"/> calls.
            </remarks>
            <lastupdated>2012-06-28 9:17:03 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.#ctor(NationalInstruments.Controls.Data.BufferCollection{`0},NationalInstruments.Controls.Data.IRangeDataMapper{`0},System.Double,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.RangeAdjusterArgs`1"/> class with the specified data, mapper, and margin.</summary><param name="data">The data to use to adjust the range.</param><param name="mapper">The data mapper to adjust the range for.</param><param name="minimumMargin">The relative margin to apply to the minimum of the range.</param><param name="maximumMargin">The relative margin to apply to the maximum of the range.</param><lastupdated>28 Jun 2012 10:50:27 AM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.#ctor(NationalInstruments.Controls.Data.BufferCollection{`0},NationalInstruments.Controls.Data.IRangeDataMapper{`0})">
            <inheritdoc cref="M:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.#ctor(NationalInstruments.Controls.Data.BufferCollection{`0},NationalInstruments.Controls.Data.IRangeDataMapper{`0},System.Double,System.Double)"/><lastupdated>28 Jun 2012 10:50:57 AM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.Range">
            <summary> Gets the current range of the data mapper. </summary>
            <value>The <see cref="P:NationalInstruments.Controls.Data.IRangeDataMapper`1.Range"/> of <see cref="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.Mapper"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.HasMargin">
            <summary>
            Gets a value indicating whether <see cref="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.MinimumMargin"/> or <see cref="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.MaximumMargin"/> is set.
            </summary>
            <value>
            <see langword="true"/> if either <see cref="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.MinimumMargin"/> or <see cref="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.MaximumMargin"/> is not zero;
            otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.Data">
            <summary>Gets the data to use to adjust the range.</summary><value>The data to use to adjust the range.</value><lastupdated>28 Jun 2012 10:47:17 AM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.Mapper">
            <summary>Gets the data mapper to adjust the range for.</summary><value>The data mapper to adjust the range for.</value><lastupdated>28 Jun 2012 10:48:05 AM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.MinimumMargin">
            <summary>Gets the relative margin to apply to the minimum of the range.</summary><value>The relative margin to apply to the minimum of the range.</value><lastupdated>28 Jun 2012 10:48:40 AM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.MaximumMargin">
            <summary>Gets the relative margin to apply to the maximum of the range.</summary><value>The relative margin to apply to the maximum of the range.</value><lastupdated>28 Jun 2012 10:48:53 AM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.RelativeIdealRange">
            <summary>
            Represents the ideal relative range for the set of divisions returned by <see cref="M:NationalInstruments.Controls.RangeDivisionsMode.GetDivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Int32)"/>.
            </summary>
            <remarks>
            Return <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> when overriding <see cref="M:NationalInstruments.Controls.RangeDivisionsMode.GetDivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Int32)"/> when ideal divisions cannot be generated for a given range.
            <para>Use <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> when overriding <see cref="M:NationalInstruments.Controls.RangeDivisionsMode.GetSubdivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Collections.Generic.IList{``0})"/> to adjust the incoming divisions collection.</para>
            </remarks>
            <seealso cref="T:NationalInstruments.Controls.RangeDivisionsMode"/>
            <threadsafety safety="safe"/>
            <lastupdated>2013-02-13 4:28:37 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.TryGetTagValue``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <exclude/><summary>Gets the ideal range value from the specified collection, if available.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.TryUnwrapTagValue(System.Object,System.String)">
            <exclude/><summary>Tries to unwrap the specified tag value to a <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.TryUnwrapTagValue``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <exclude/><summary>Tries to get and unwrap the specified tag value to a <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.UpdateTagValueReplaceState(System.Nullable{NationalInstruments.Controls.Data.RelativeIdealRange}@,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <exclude/><summary>Updates <see cref="P:NationalInstruments.Controls.Data.RelativeIdealRange.ReplaceGeneratedMinimum"/> or <see cref="P:NationalInstruments.Controls.Data.RelativeIdealRange.ReplaceGeneratedMaximum"/> of the specified tag value, if necessary.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.TrySetTagValue``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Object)">
            <exclude/><summary>Sets the ideal range value fon the specified collection, if possible.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.SetTagValue``1(System.Collections.Generic.IList{``0},System.String,System.Object)">
            <exclude/><summary>Sets the ideal range value fon the specified collection, or returns a new collection with the value set.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.#ctor(System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> struct.</summary><param name="minimum">The ideal relative minimum for the generated divisions.</param><param name="maximum">The ideal relative maximum for the generated divisions.</param><param name="replaceGeneratedMinimum">A value indicating whether <see cref="P:NationalInstruments.Controls.Data.RelativeIdealRange.Minimum"/> should replace the smallest generated division.</param><param name="replaceGeneratedMaximum">A value indicating whether <see cref="P:NationalInstruments.Controls.Data.RelativeIdealRange.Maximum"/> should replace the largest generated division.</param><lastupdated>28 May 2013 2:48:37 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.Equals(NationalInstruments.Controls.Data.RelativeIdealRange)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            <see langword='true'/> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword='false'/>.
            </returns>
            <param name='other'>
            An object to compare with this object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.op_Equality(NationalInstruments.Controls.Data.RelativeIdealRange,NationalInstruments.Controls.Data.RelativeIdealRange)">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> objects have the same value.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.op_Inequality(NationalInstruments.Controls.Data.RelativeIdealRange,NationalInstruments.Controls.Data.RelativeIdealRange)">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> objects have different values.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="obj">
            The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIdealRange.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RelativeIdealRange.Minimum">
            <summary>Gets the ideal relative minimum for the generated divisions.</summary><value>The ideal relative value for the smallest generated division.</value><lastupdated>28 May 2013 2:47:56 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RelativeIdealRange.Maximum">
            <summary>Gets the ideal relative maximum for the generated divisions.</summary><value>The ideal relative value for the largest generated division.</value><lastupdated>28 May 2013 2:47:59 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RelativeIdealRange.ReplaceGeneratedMinimum">
            <summary>Gets a value indicating whether <see cref="P:NationalInstruments.Controls.Data.RelativeIdealRange.Minimum"/> should replace the smallest generated division.</summary><value>A value indicating whether <see cref="P:NationalInstruments.Controls.Data.RelativeIdealRange.Minimum"/> should replace the smallest generated division.</value><lastupdated>28 May 2013 2:48:13 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RelativeIdealRange.ReplaceGeneratedMaximum">
            <summary>Gets a value indicating whether <see cref="P:NationalInstruments.Controls.Data.RelativeIdealRange.Maximum"/> should replace the largest generated division.</summary><value>A value indicating whether <see cref="P:NationalInstruments.Controls.Data.RelativeIdealRange.Maximum"/> should replace the largest generated division.</value><lastupdated>28 May 2013 2:48:13 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.RelativeInterval">
            <summary>
            Represents a relative interval around around a relative value.
            </summary>
            <remarks>
            Use <see cref="M:NationalInstruments.Controls.Data.RelativeInterval.Apply(System.Double,System.Double@,System.Double@)"/> to retrieve the relative values around a relative interval returned by <see cref="M:NationalInstruments.Controls.Data.RelativeIntervalTrait.GetRelativeInterval(System.Double)"/>.
            </remarks>
            <seealso cref="T:NationalInstruments.Controls.Data.RelativeIntervalTrait"/>
            <threadsafety safety="safe"/>
            <lastupdated>2013-02-13 4:28:37 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.RelativeInterval"/> struct with the specified relative interval.
            </summary>
            <param name="interval">The full relative interval.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="interval"/> is less than 0.
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.RelativeInterval"/> struct with the specified upper and lower relative intervals.
            </summary>
            <param name="lowerInterval">The lower relative interval.</param>
            <param name="upperInterval">The upper relative interval.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="lowerInterval"/> is less than 0.</para>
            <para>- or -</para>
            <para><paramref name="upperInterval"/> is less than 0.</para> 
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.RelativeInterval"/> struct with the specified upper and lower relative intervals, and target value.
            </summary>
            <param name="lowerInterval">The lower relative interval.</param>
            <param name="upperInterval">The upper relative interval.</param>
            <param name="targetValue">The value the relative interval applies to.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.Apply(System.Double,System.Double@,System.Double@)">
            <summary>
            Applies the relative interval to a given relative value.
            </summary>
            <param name="value">A relative value.</param>
            <param name="lowerValue">After the method returns, contains the relative value with <see cref="P:NationalInstruments.Controls.Data.RelativeInterval.LowerInterval"/> applied.</param>
            <param name="upperValue">After the method returns, contains the relative value with <see cref="P:NationalInstruments.Controls.Data.RelativeInterval.UpperInterval"/> applied.</param>
            <remarks>
            If <paramref name="value"/> matches <see cref="P:NationalInstruments.Controls.Data.RelativeInterval.TargetValue"/>,
            then <see cref="P:NationalInstruments.Controls.Data.RelativeInterval.LowerInterval"/> and <see cref="P:NationalInstruments.Controls.Data.RelativeInterval.UpperInterval"/> are used directly.
            <para>
            If the relative interval has a <see cref="P:NationalInstruments.Controls.Data.RelativeInterval.TargetValue"/>, but a different <paramref name="value"/> is supplied,
            then <paramref name="lowerValue"/> and <paramref name="upperValue"/> may contain unexpected results.
            </para>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.#ctor(System.Double,System.Double,System.Nullable{System.Double})">
            <exclude/><lastupdated>19 Feb 2013 2:48:37 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.Equals(NationalInstruments.Controls.Data.RelativeInterval)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            <see langword='true'/> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword='false'/>.
            </returns>
            <param name='other'>
            An object to compare with this object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.op_Equality(NationalInstruments.Controls.Data.RelativeInterval,NationalInstruments.Controls.Data.RelativeInterval)">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Data.RelativeInterval"/> objects have the same value.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Data.RelativeInterval"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Data.RelativeInterval"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.op_Inequality(NationalInstruments.Controls.Data.RelativeInterval,NationalInstruments.Controls.Data.RelativeInterval)">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Data.RelativeInterval"/> objects have different values.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Data.RelativeInterval"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Data.RelativeInterval"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="obj">
            The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeInterval.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RelativeInterval.LowerInterval">
            <summary>Gets the lower relative interval.</summary><value>The lower relative interval.</value><lastupdated>19 Feb 2013 2:47:56 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RelativeInterval.UpperInterval">
            <summary>Gets the upper relative interval.</summary><value>The upper relative interval.</value><lastupdated>19 Feb 2013 2:47:59 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RelativeInterval.TargetValue">
            <summary>Gets the value the relative interval applies to.</summary><value>The value the relative interval applies to.</value><lastupdated>19 Feb 2013 2:48:13 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.RelativeIntervalTrait">
            <summary>
            A <see cref="T:NationalInstruments.DataInfrastructure.Trait"/> that indicates the relative interval for the associated buffer.
            </summary>
            <remarks>
            Use the <see cref="T:NationalInstruments.Controls.Data.RelativeIntervalTrait"/> when you need to indicate a relative interval for a buffer.
            </remarks>
            <seealso cref="M:NationalInstruments.Controls.Data.IDataMapper`1.Map(NationalInstruments.DataInfrastructure.Buffer{`0})"/>
            <threadsafety safety="safe"/>
            <lastupdated>2013-02-13 4:31:08 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIntervalTrait.#ctor(NationalInstruments.DataInfrastructure.TraitScope,NationalInstruments.Controls.Data.RelativeInterval)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.RelativeIntervalTrait"/> class with the specified scope and interval.
            </summary>
            <param name="scope">The scope the trait applies to.</param>
            <param name="relativeInterval">The fixed relative interval for the associated buffer.</param>
            <exception cref="T:System.ArgumentException">
              <para><paramref name="scope"/> is empty.</para>
              <para>- or -</para>
              <para><paramref name="scope"/> is not a range or buffer scope.</para>
            </exception>
            <lastupdated>5/4/2012 11:17:34 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIntervalTrait.#ctor(NationalInstruments.DataInfrastructure.TraitScope,System.Func{System.Double,NationalInstruments.Controls.Data.RelativeInterval})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Data.RelativeIntervalTrait"/> class with the specified scope and interval function.
            </summary>
            <param name="scope">The scope the trait applies to.</param>
            <param name="calculator">The function used to calculate the relative intervals for the associated buffer.</param>
            <exception cref="T:System.ArgumentException">
              <para><paramref name="scope"/> is empty.</para>
              <para>- or -</para>
              <para><paramref name="scope"/> is not a range or buffer scope.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="calculator"/> is <see langword="null"/>.
            </exception>
            <lastupdated>5/4/2012 11:17:34 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIntervalTrait.GetRelativeInterval(System.Double)">
            <summary>
            Gets the relative interval for the specified relative position in the range.
            </summary>
            <param name="relativeValue">A relative value.</param>
            <returns>
            The relative interval at the specified relative position in the range.
            </returns>
            <lastupdated>2013-12-02 3:25:27 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIntervalTrait.SliceCore(NationalInstruments.DataInfrastructure.TraitScope,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIntervalTrait.GetLocalHashCode">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIntervalTrait.LocalEquals(NationalInstruments.DataInfrastructure.Trait)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeIntervalTrait.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
            <lastupdated>5/30/2012 3:18:00 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RelativeIntervalTrait.IsFixedInterval">
            <summary>Gets a value indicating whether the relative interval is fixed.</summary>
            <value>A value indicating whether the relative interval is fixed.</value>
            <remarks>
            If the interval is fixed, <see cref="M:NationalInstruments.Controls.Data.RelativeIntervalTrait.GetRelativeInterval(System.Double)"/> will always return the same value.
            </remarks>
            <returns>
            <see langword="true"/> if the relative interval is fixed.
            </returns>
            <lastupdated>4/18/2014 1:12:17 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Data.RelativeValueUnit">
            <summary>
            Represents the unit for scaled relative values.
            </summary>
            <remarks>
            The <see cref="T:NationalInstruments.Controls.Data.RelativeValueUnit"/> class is used
            to mark relative data returned by the 
            <seealso cref="M:NationalInstruments.Controls.Data.IDataMapper`1.Map(NationalInstruments.DataInfrastructure.Buffer{`0})"/> method.
            </remarks>
            <seealso cref="M:NationalInstruments.Controls.Data.IDataMapper`1.Map(NationalInstruments.DataInfrastructure.Buffer{`0})"/>
            <threadsafety safety="safe"/>
            <lastupdated>5/31/2012 12:41:04 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeValueUnit.#ctor">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeValueUnit.ToStringCore(System.String,System.IFormatProvider)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeValueUnit.CreateConverter``1(NationalInstruments.DataInfrastructure.Unit)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeValueUnit.EqualsCore(NationalInstruments.DataInfrastructure.Unit)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Data.RelativeValueUnit.GetHashCodeCore">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Data.RelativeValueUnit.Instance">
            <summary>Gets the unit for scaled relative values.</summary>
            <value>The unit for scaled relative values.</value>
            <lastupdated>2012-05-15 9:24:49 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.AbortOperation">
            <exclude/>
            <summary>Represents the abort method for an ongoing operation.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AbortOperation.op_Implicit(System.Action)~NationalInstruments.Controls.Internal.AbortOperation">
            <exclude/><summary>Creates an abort operation from an action.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AbortOperation.op_Implicit(System.Windows.Threading.DispatcherOperation)~NationalInstruments.Controls.Internal.AbortOperation">
            <exclude/><summary>Creates an abort operation from a dispatcher operation.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AbortOperation.Abort">
            <exclude/><summary>Aborts the operation, if any.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.AbortOperation.None">
            <exclude/><summary>Gets a value indicating no operation is pending.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.AbortOperation.CanAbort">
            <exclude/><summary>Gets a value indicating whether the operation has been set.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.AngleUtility">
            <exclude/><summary>Contains members for working with radian and degree angle values.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.AngleUtility.FullCircleDegrees">
            <summary>Gets the number of degrees in a circle.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.AngleUtility.HalfCircleDegrees">
            <summary>Gets the number of degrees in half of a circle.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.AngleUtility.QuarterCircleDegrees">
            <summary>Gets the number of degrees in a quarter of a circle.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.AngleUtility.FullCircleRadians">
            <summary>Gets the number of radians in a circle.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.AngleUtility.HalfCircleRadians">
            <summary>Gets the number of radians in half of a circle.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.AngleUtility.QuarterCircleRadians">
            <summary>Gets the number of radians in a quarter of a circle.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.AngleUtility.FullCircleArc">
            <summary>Gets a value representing a geometric circle.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AngleUtility.GetQuadrant(System.Double)">
            <summary>
            Gets the quadrant where the specified angle appears.
            </summary>
            <param name="relativeAngle">The relative value of the angle.</param>
            <returns>A value between 1 and 4 indicating the geometric quadrant where the angle appears.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AngleUtility.GetInverseAngle(System.Windows.Point,System.Windows.Size)">
            <summary>
            Gets the angle of a target point relative to a center of a given area.
            </summary>
            <param name="target">The target point.</param>
            <param name="area">The bounding area whose center is used to calculate angle.</param>
            <returns>The angle at which the target is from the center, in the range of [-180, 180]</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AngleUtility.GetInverseAngle(System.Windows.Point,System.Windows.Point)">
            <summary>
            Gets the angle of a target point relative to a center point. See also GetAbsoluteAngle
            </summary>
            <param name="target">The target point.</param>
            <param name="center">The center point.</param>
            <returns>The angle at which the target is from the center, in the range of [-180, 180]. Zero degrees is
            at 3 o'clock and positive values are counterclockwise from that point.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AngleUtility.GetAbsoluteAngle(System.Windows.Point,System.Windows.Point)">
            <summary>
            Gets the angle of a target point relative to a center point. See also GetInverseAngle.
            </summary>
            <param name="target">The target point.</param>
            <param name="center">The center point.</param>
            <returns>The angle at which the target is from the center, in the range of [0, 360]. Zero degrees is
            at 3 o'clock and positive values are counterclockwise from that point.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AngleUtility.GetMinimumCircularAngle(System.Double,System.Double)">
            <summary>
            Returns the minimal difference between two angle.
            </summary>
            <param name="angle1">The first angle.</param>
            <param name="angle2">The second angle.</param>
            <returns>An angle in the range [-180, 180].</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AngleUtility.ModAngleToBetween0And360(System.Double)">
            <summary>
            Coerces an angle to the range [0, 360).
            </summary>
            <param name="angle">Original angle</param>
            <returns>Coerced angle</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AngleUtility.ModAngleToBetweenNegAndPos360(System.Double,System.Boolean)">
            <summary>
            Coerces an angle to the sweep angle range [-360, 360] or (-360, 360) depending upon the value of "inclusive".
            </summary>
            <param name="angle">Original angle</param>
            <param name="inclusive">If true, -360 and 360 are legal return values. If false, these will be coerced to zero.</param>
            <returns>Coerced angle</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AngleUtility.DegreesToRadians(System.Double)">
            <summary>
            Converts a value in degrees into a value in radians.
            </summary>
            <param name="degrees">Angle in degrees</param>
            <returns>Angle in radians</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.AngleUtility.RadiansToDegrees(System.Double)">
            <summary>
            Converts a value in radians into a value in degrees.
            </summary>
            <param name="radians">Angle in radians</param>
            <returns>Angle in degrees</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.CompositeScaleInteractionModePresenter">
            <exclude/><summary>Applies the <see cref="T:NationalInstruments.Controls.RangeLabeledDivisions"/> minimum/maximum editability properties to the host, based on the scale's interaction mode.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.CompositeScalePresenter">
            <summary>Manages multiple presenters responsible for the visual representation for a scale.</summary>
            <lastupdated>2014-06-23 3:22:39 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1">
            <summary>
            A collection of items that notifies before and after changes are made.
            </summary>
            <typeparam name="T">
            The type of elements in the list.
            </typeparam>
            <remarks>
            Use <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1"/> instead of
            <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> when you desire
            batching events or notifications before changes are made.
            </remarks>
            <lastupdated>6/1/2012 10:38:03 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.INotifyCollectionChanging">
            <summary>
            Notifies listeners of collection changes in a batching manner.
            </summary>
            <remarks>
            Implementors provide batched notifications of collection changes.
            </remarks>
            <lastupdated>6/1/2012 2:33:24 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.INotifyCollectionChanging.CollectionChanging">
            <summary>
            Occurs when the collection is changing.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NotifyingCollection`1.CountPropertyName">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NotifyingCollection`1.IndexerPropertyName">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NotifyingCollection`1.TagPropertyName">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>11/21/2011 2:29:33 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1" crefType="Unqualified"/> class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection whose elements are copied to the new <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1"/>.</param>
            <lastupdated>11/21/2011 2:30:18 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Add(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of this collection.
            </summary>
            <param name="newItems">
            The new items.
            </param>
            <lastupdated>11/16/2011 4:22:13 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Clear">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Contains(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.CopyTo(`0[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.IndexOf(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Insert(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Inserts the elements of a collection into this collection at the specified index.
            </summary>
            <param name="index">
            The index at which to start the insertion.
            </param>
            <param name="newItems">
            The collection of new elements to insert.
            </param>
            <lastupdated>2012-06-07 5:49:32 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.ReplaceAll(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Replaces all the elements of this collection with the elements of the specified collection.
            </summary>
            <param name="newItems">The the items to place in the collection.</param>
            <remarks>Events will only be raised for changed items.</remarks>
            <lastupdated>2012-05-07 10:33:25 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.ReplaceAll(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Replaces all the elements of this collection with the elements of the specified collection.
            </summary>
            <param name="newItems">The the items to place in the collection.</param>
            <param name="notifyOnUnchanged">A value indicating whether unchanged items should be ignored.</param>
            <remarks>
            When <paramref name="notifyOnUnchanged"/> is <see langword="false"/>, events will only be raised for
            changed items. When <paramref name="notifyOnUnchanged"/> is <see langword="true"/>, events will always
            be raised for all items.
            </remarks>
            <lastupdated>2012-05-07 10:33:25 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.ReplaceRange(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Replaces the elements of a collection into the <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1"/> at the specified index,
            raising only a single <see cref="E:NationalInstruments.Controls.Primitives.INotifyCollectionChanging.CollectionChanging"/> event.
            </summary>
            <param name="index">The zero-based index at which the new elements should be replaced.</param>
            <param name="count">
            The number of elements to replace.
            If less than the number of <paramref name="newItems"/>, additional elements are removed.
            If greater than the number of <paramref name="newItems"/>, additional elements are inserted at the end.
            </param>
            <param name="newItems">
            The collection whose elements should be inserted into the <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1"/>.
            The collection itself cannot be null, but it can contain elements that are null, if type <typeparamref name="T"/> is a reference type.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Remove(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Remove(`0,System.Int32@)">
            <summary>Removes an item.</summary>
            <param name="item">The item to remove.</param>
            <param name="index">The index the item was removed from, or -1 if it did not exist.</param>
            <returns>Whether the item was removed.</returns>
            <lastupdated>12/23/2014 3:11:30 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of elements from this collection.
            </summary>
            <param name="index">
            The index at which to start removing elements.
            </param>
            <param name="count">
            The number of elements to remove.
            </param>
            <lastupdated>2012-06-07 5:50:19 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#ComponentModel#ISupportInitialize#BeginInit">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#ComponentModel#ISupportInitialize#EndInit">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.ChangeItems(System.Int32,System.Int32,`0[])">
            <summary>
            Modifies the items in the collection, if any values have changed.
            </summary>
            <param name="index">The index where modifications should occur.</param>
            <param name="removeCount">The number of items to remove from the collection.</param>
            <param name="newItems">The items to add to the collection.</param>
            <remarks>
            If <paramref name="index"/> is negative, or <paramref name="removeCount"/> and <paramref name="newItems"/> are empty,
            then <see cref="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.ChangeItemsCore(System.Int32,System.Int32,`0[])"/> will not be called.
            </remarks>
            <returns><see langword="true"/> if the collection was modified; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
              The collection is in the middle of being modified.
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.ChangeItemsCore(System.Int32,System.Int32,`0[])">
            <summary>
            Called when items change.
            </summary>
            <param name="index">
            The index at which to start changing items.
            </param>
            <param name="removeCount">
            The amount of elements to remove.
            </param>
            <param name="newItems">
            The items to be added to the collection.
            </param>
            <remarks>
            Override <see cref="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.ChangeItemsCore(System.Int32,System.Int32,`0[])"/> when you would
            like to alter the behavior of <see cref="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.ChangeItems(System.Int32,System.Int32,`0[])"/>.
            </remarks>
            <returns>
            Always returns <see langword="true"/>.
            </returns>
            <lastupdated>2012-06-07 5:52:16 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.FreezeCore(System.Boolean)">
            <inheritdoc/>
            <lastupdated>11/16/2011 4:28:29 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.CloneCore(System.Windows.Freezable)">
            <inheritdoc/>
            <lastupdated>11/16/2011 4:28:17 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.CloneCurrentValueCore(System.Windows.Freezable)">
            <inheritdoc/>
            <lastupdated>11/16/2011 4:28:23 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.GetAsFrozenCore(System.Windows.Freezable)">
            <inheritdoc/>
            <lastupdated>11/16/2011 4:28:33 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <inheritdoc/>
            <lastupdated>11/16/2011 4:28:42 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#IList#Add(System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#IList#Contains(System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#IList#IndexOf(System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#IList#Remove(System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NotifyingCollection`1.TagProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Tag'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Tag'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyingCollection`1.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Count">
            <inheritdoc/>
            <value>The number of elements contained in the <see cref="T:System.Collections.ICollection" crefType="Unqualified"/>.</value>
            <lastupdated>6/6/2012 2:57:20 PM</lastupdated>
            <updatedby>Lisa</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Item(System.Int32)">
            <inheritdoc/>
            <value>The element at the specified index.</value>
            <lastupdated>6/6/2012 3:08:54 PM</lastupdated>
            <updatedby>Lisa</updatedby>
            <approved>False</approved>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.NotifyingCollection`1.CollectionChanging">
            <inheritdoc/>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
            <exclude/>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#IList#IsFixedSize">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#IList#IsReadOnly">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#ICollection#IsSynchronized">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#ICollection#SyncRoot">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.System#Collections#IList#Item(System.Int32)">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Tag">
            <exclude/><summary>Gets or sets an arbitrary object value that can be used to store custom information about this collection.</summary><value>An arbitrary object value that can be used to store custom information about this collection. The default value is <see langword="null"/>.</value><lastupdated>29 May 2013 1:29:09 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.RemovingItems">
            <summary>
            Gets or sets a list referencing the removed items.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.IScalePresenter">
            <summary>Manages the visual representation for a scale or its components.</summary>
            <remarks>
            <see cref="T:NationalInstruments.Controls.Primitives.IScalePresenter"/> is responsible for generating the UI elements that make up the visual representation of a scale.
            </remarks>
            <lastupdated>2014-06-25 2:04:28 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IScalePresenter.IsCompatible(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <summary>Determines whether the presenter is compatible with the specified scale.</summary>
            <param name="host">The host for the presenter.</param>
            <param name="scale">The scale to examine.</param>
            <returns><see langword="true"/> if <paramref name="scale"/> can be presented by the current instance.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="scale"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IScalePresenter.Initialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <summary>Prepares the host to display visuals.</summary>
            <param name="host">The host for the presenter.</param>
            <param name="scale">The scale to present.</param>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="host"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="scale"/> is <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IScalePresenter.Uninitialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <summary>Clears the host of the visuals created by the presenter.</summary>
            <param name="host">The host for the presenter.</param>
            <param name="scale">The scale to present.</param>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="host"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="scale"/> is <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IScalePresenter.DesiredVisibility">
            <summary>Gets the desired visibility of the scale presenter in its parent host.</summary>
            <value>
            The desired visibility of the scale presenter in its parent host. The default value is <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </value>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.CompositeScalePresenter"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.IsCompatible(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.IsCompatible(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/>
            <remarks>Returns <see langword="true"/> if all component presenters are compatible.</remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.Initialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.Initialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.Uninitialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.Uninitialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.Initialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/>
            <summary>Implements the <see cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.Initialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/> method.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.Uninitialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/>
            <summary>Implements the <see cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.Uninitialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/> method.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.UpdateDesiredVisibility">
            <summary>
            Updates <see cref="P:NationalInstruments.Controls.Primitives.CompositeScalePresenter.DesiredVisibility"/> with the value calculated by <see cref="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)"/>.
            </summary>
            <remarks>
            If the presenter has not been initialized with a scale,
            <see cref="P:NationalInstruments.Controls.Primitives.CompositeScalePresenter.DesiredVisibility"/> is updated to the default of <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <summary>Calculates the desired visibility of the scale in the current host.</summary>
            <param name="scale">The current scale value.</param>
            <returns>The desired visibility of the scale.</returns>
            <remarks>Returns the greatest visibility of all the component presenters allowed by <see cref="P:NationalInstruments.Controls.Primitives.IScale.Visibility" crefType="PartiallyQualified"/>.</remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.OnScaleInvalidated(System.EventArgs)">
            <summary>
            Called when the <see cref="E:NationalInstruments.Controls.Primitives.IScale.Invalidated"/> event is raised by the scale.
            </summary>
            <param name="e">The <see cref="E:NationalInstruments.Controls.Primitives.IScale.Invalidated"/> event args.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.ChangeItemsCore(System.Int32,System.Int32,NationalInstruments.Controls.Primitives.IScalePresenter[])">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.FreezeCore(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.Add(System.Collections.Generic.IEnumerable{NationalInstruments.Controls.Primitives.IScalePresenter})">
            <exclude/><summary>Adds all of the specified presenters.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.Add(System.Windows.DependencyProperty)">
            <exclude/><summary>Generates a presenter from the value of a dependency property.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CompositeScalePresenter.DesiredVisibilityProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.CompositeScalePresenter.DesiredVisibility'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.CompositeScalePresenter.DesiredVisibility'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CompositeScalePresenter.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.CompositeScalePresenter.Host">
            <summary>Gets the host for the presenter.</summary>
            <value>The host for the presenter.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.CompositeScalePresenter.Empty">
            <exclude/><summary>Gets a no-op presenter.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.CompositeScalePresenter.DesiredVisibility">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.CompositeScalePresenter.ScaleInvalidatedListener">
            <summary>
            Gets or sets a weak event listener for the IScale.Invalidated event.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.CompositeScalePresenter.PropertyListenerPresenter">
            <exclude/><summary>Generates a presenter from the value of a dependency property.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleComponentPresenter">
            <exclude/><summary>Manages the visual representation for a component of a scale.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.IDispatchTarget">
            <exclude/>
            <summary>Represents the target of a <see cref="T:NationalInstruments.Controls.Internal.Dispatchable"/> delegate.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IDispatchTarget.CheckAccess">
            <exclude/><summary>Determines whether the target can receive messages on the current thread.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IDispatchTarget.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
            <exclude/><summary>Dispatches the specified action on the dispatcher used by the target.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.IDispatchTarget.CanReceiveMessages">
            <exclude/><summary>Gets a value indicating whether the target is able to receive dispatcher messages.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.IsCompatible(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.IsCompatible(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.Initialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.Initialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.Uninitialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScalePresenter.Uninitialize(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.BooleanToVisibility(System.Boolean)">
            <exclude/><summary>Gets the <see cref="T:System.Windows.Visibility"/> corresponding to the specified value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.TryGetComponentVisuals``1(NationalInstruments.Controls.Primitives.RelativePanel,``0@,System.Boolean)">
            <exclude/><summary>Tries to retrieve the visuals used to display the component from the specified panel.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.SetComponentVisuals``1(NationalInstruments.Controls.Primitives.RelativePanel,``0)">
            <exclude/><summary>Sets the visuals used to display the component on the specified panel.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.NationalInstruments#Controls#Internal#IDispatchTarget#BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.IsCompatibleCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ScaleComponentPresenter.VisualsProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.Visuals'/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.Visuals'/> attached property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.GetVisuals(NationalInstruments.Controls.Primitives.RelativePanel)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.Visuals"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.Visuals"/> property value for the element.
            </returns>
            <remarks>
            Gets the elements used to present the scale component.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleComponentPresenter.SetVisuals(NationalInstruments.Controls.Primitives.RelativePanel,System.Collections.Generic.Dictionary{System.Int32,System.Object})">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.Visuals"/> attached property to a specified element.
            </summary>
            <remarks>
            Sets the elements used to present the scale component.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Collections.Generic.Dictionary`2"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.LogCategory">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.HostScale">
            <exclude/><summary>Gets the scale from the host.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.DesiredVisibility">
            <inheritdoc cref="P:NationalInstruments.Controls.Primitives.IScalePresenter.DesiredVisibility"/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.NationalInstruments#Controls#Internal#IDispatchTarget#CanReceiveMessages">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleComponentPresenter.Host">
            <summary>
            Gets the host used to dispaly the component.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CompositeScaleInteractionModePresenter.#ctor(System.Windows.DependencyProperty,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.CompositeScaleInteractionModePresenter"/> class.</summary>
            <param name="interactionModeProperty">The interaction mode property on the scale.</param>
            <param name="allowMinimumEdits">A value indicating whether to set <see cref="F:NationalInstruments.Controls.RangeLabeledDivisions.IsMinimumEditableProperty"/>.</param>
            <param name="allowMaximumEdits">A value indicating whether to set <see cref="F:NationalInstruments.Controls.RangeLabeledDivisions.IsMaximumEditableProperty"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CompositeScaleInteractionModePresenter.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CompositeScaleInteractionModePresenter.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.CompositeScaleInteractionModePresenter.IsScaleProperty">
            <exclude/><summary>Gets a value indicating whether the interaction mode property is declared directly on the scale, or on the owner.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter">
            <exclude/><summary>Calculates desired visibility based on the location of the scale and the host.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter.#ctor(System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter"/> class.</summary>
            <param name="interactionModeProperty">The interaction mode property on the scale.</param>
            <param name="locationProperty">The location property on the scale.</param>
            <param name="positionProperty">The attached position property on the host.</param>
            <param name="dependent">A value indicating whether the presenter is for a dependent (reverse-location) scale.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter.IsCompatible(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter.HostPositionProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter.HostPosition'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter.HostPosition'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.CompositeScaleLocationPresenter.HostPosition">
            <summary>
            Gets or sets the position of the scale host.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Config">
            <exclude/>
            <summary>Contains assembly-level configuration information.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.Config.ControlsXmlPrefix">
            <summary>XML namespace prefix for top-level types in XAML.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.Config.ControlsXmlNamespace">
            <summary>XML namespace for top-level types in XAML.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.Config.ControlsPrimitivesXmlPrefix">
            <summary>XML namespace prefix for primitive types in XAML.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.Config.ControlsPrimitivesXmlNamespace">
            <summary>XML namespace for primitive types in XAML.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.Config.PublicKey">
            <summary>MStudio .NET 4.5 strong name public key.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.Config.PublicKeyIdentifier">
            <summary>MStudio .NET 4.5 strong name public key identifier.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.Config.MoqPublicKeyIdentifier">
            <summary>Moq strong name public key identifier.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ConversionUtility">
            <exclude/>
            <summary>
            Provides members for converting objects to different types, including string conversions and numeric type changes.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.GetType(System.Object)">
            <exclude/>
            <summary>
            Returns the type of the specified value, or <c>typeof(object)</c> if the value is <see langword="null"/>.
            </summary>
            <param name="value">The value to examine.</param>
            <returns>The type of <paramref name="value"/>, or <c>typeof(object)</c> if <paramref name="value"/> is <see langword="null"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.GetNamedType(System.String)">
            <exclude/>
            <summary>
            Returns the type with the specified name.
            </summary>
            <param name="typeName">The name of the type to get.</param>
            <returns>The <paramref name="typeName"/> type, or <see langword="null"/> if the type could not be found.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.GetListSeparator(System.IFormatProvider)">
            <exclude/>
            <summary>
            Returns a string to use for separating lists of formatted items.
            </summary>
            <param name="formatProvider">The format provider to examine.</param>
            <returns>
            The <see cref="P:System.Globalization.TextInfo.ListSeparator"/> value for <paramref name="formatProvider"/>,
            or the value from the <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> if <paramref name="formatProvider"/> cannot be used.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.RemoveWhitespace(System.String)">
            <exclude/>
            <summary>
            Removes all whitespace from the specified string.
            </summary>
            <param name="input">The string to process.</param>
            <returns>The value of <paramref name="input"/>, excluding all whitespace characters.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.Separate(System.String,System.String,System.String@,System.String@)">
            <exclude/>
            <summary>
            Separates an input string into two parts, before and after a single instance of a separator.
            </summary>
            <remarks>
            The input string is separated into two parts:
            the substring that occurs before the first instance of the <paramref name="separator"/> in the input, and
            the substring that occurs after the first instance of the <paramref name="separator"/> in the input.
            <para>
            If <paramref name="separator"/> occurs more than once in <paramref name="input"/>, then <paramref name="afterSeparator"/> will still contain instances of <paramref name="separator"/>.
            If <paramref name="separator"/> is not found in <paramref name="input"/>, then <paramref name="afterSeparator"/> will be the empty string.
            </para>
            </remarks>
            <param name="input">The string to separate.</param>
            <param name="separator">The string that separates the two parts of the input.</param>
            <param name="beforeSeparator">The part of <paramref name="input"/> that occurs before the first instance of <paramref name="separator"/> is encountered.</param>
            <param name="afterSeparator">The part of <paramref name="input"/> that occurs after the first instance of <paramref name="separator"/> is encountered, or the empty string if <paramref name="separator"/> is not found.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.MakeArray``1(``0,System.Int32)">
            <exclude/>
            <summary>
            Creates a new array initialized to the specified default value.
            </summary>
            <typeparam name="T">The type of array to create.</typeparam>
            <param name="defaultValue">The default value used to initialize the array.</param>
            <param name="length">The length of the array.</param>
            <returns>An array containing <paramref name="length"/> elements initialized to <paramref name="defaultValue"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.ConvertToType``1(System.Object)">
            <exclude/>
            <summary>
            Converts the source object to the specified type.
            </summary>
            <typeparam name="T">The target conversion type.</typeparam>
            <param name="source">The object to convert.</param>
            <returns>The value of <paramref name="source"/> converted to <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.ConvertToType(System.Object,System.Type)">
            <exclude/>
            <summary>
            Converts the source object to the specified type.
            </summary>
            <param name="source">The object to convert.</param>
            <param name="targetType">The target conversion type.</param>
            <returns>The value of <paramref name="source"/> converted to <paramref name="targetType"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.ConvertToType(System.Object,System.Type,NationalInstruments.DataInfrastructure.Descriptors.ConversionResult@)">
            <exclude/>
            <summary>
            Converts the source object to the specified type.
            </summary>
            <remarks>
            If an exception occurs when performing the conversion, it will not be caught.
            </remarks>
            <param name="source">The object to convert.</param>
            <param name="targetType">The target conversion type.</param>
            <param name="conversionResult">When the method returns, indicates whether the conversion resulted in a loss of information.</param>
            <returns>The value of <paramref name="source"/> converted to <paramref name="targetType"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.TryConvertToType``1(System.Object,``0@)">
            <exclude/>
            <summary>
            Converts the source object to the specified type.
            </summary>
            <remarks>
            If an exception occurs when performing the conversion, it will be caught and used to update the returned <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.ConversionResult"/>.
            </remarks>
            <typeparam name="T">The target conversion type.</typeparam>
            <param name="source">The object to convert.</param>
            <param name="result">When the method returns, contains the value of <paramref name="source"/> converted to <typeparamref name="T"/>.</param>
            <returns>Indicates whether the conversion resulted in a loss of information.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ConversionUtility.TryConvertToType(System.Object,System.Type,System.Object@)">
            <exclude/>
            <summary>
            Converts the source object to the specified type.
            </summary>
            <remarks>
            If an exception occurs when performing the conversion, it will be caught and used to update the returned <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.ConversionResult"/>.
            </remarks>
            <param name="source">The object to convert.</param>
            <param name="targetType">The target conversion type.</param>
            <param name="result">When the method returns, contains the value of <paramref name="source"/> converted to <paramref name="targetType"/>.</param>
            <returns>Indicates whether the conversion resulted in a loss of information.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ConversionUtility.AggregateTypeConverter">
            <exclude/><summary>Aggregates all type converters defined on a type.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1">
            <exclude/>
            <summary>
            Creates the labels for major divisions on a scale.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1">
            <exclude/><summary>Base class for presenters that creates the ticks and labels divisions on a scale.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter">
            <exclude/><summary>Base class for presenters that creates the ticks and labels divisions on a scale.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.GetScaleDivisions(NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)">
            <exclude/><summary>Gets the scale divisions from the specified property on the scale.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.GetScaleDivisions(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.IsCompatibleCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.GetDivisionsPanel(NationalInstruments.Controls.Primitives.ScaleHost)">
            <exclude/><summary>Gets the nested panel containing the scale divisions.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.InitializeElements">
            <exclude/><summary>Called to perform a scheduled update.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.ScheduleUpdate(System.String)">
            <exclude/><summary>Schedules an update.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.PerformUpdate">
            <exclude/><summary>Performs an update immediately, if one has been scheduled.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.#ctor(NationalInstruments.Controls.ScaleDivisions,System.Windows.DependencyProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter"/> class with the specified scaleDivisions and sourceProperty.
            </summary>
            <param name="scaleDivisions">
            The scale divisions being presented.
            </param>
            <param name="sourceProperty">
            The scale divisions property on the scale.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.ScaleDivisions">
            <summary>
            Gets the scale divisions being presented.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.SourceProperty">
            <summary>
            Gets the scale divisions property on the scale.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.PendingUpdate">
            <summary>
            Gets or sets the scheduler for division updates.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter.UpdateAction">
            <summary>Represents a scheduled action for performing asynchronous element initialization.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScheduledAction`1">
            <exclude/>
            <summary>Schedules pending operations according to priority</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScheduledAction`1.#ctor(NationalInstruments.Controls.Internal.IDispatchTarget,System.Windows.Threading.DispatcherPriority)">
            <exclude/><summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScheduledAction`1.ChangeUpdateAction(System.Action{`0},System.Int32)">
            <exclude/><summary>Updates the current operation with the highest priority, returning a scheduling action if this is the first operation.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScheduledAction`1.Abort">
            <exclude/><summary>Aborts the pending scheduled operation, if set.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScheduledAction`1.DisplayState">
            <exclude/><summary>Returns a formattable representation of the current state.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScheduledAction`1.CreateState">
            <exclude/><summary>Creates an empty state value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScheduledAction`1.ClearState(`0)">
            <exclude/><summary>Clears the specified state value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScheduledAction`1.LogUpdateAction(System.Nullable{System.Boolean})">
            <exclude/><summary>Logs a change to the scheduled update action, if enabled.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScheduledAction`1.LogCategory">
            <exclude/><summary>The category for log messages, or <see langword="null"/>.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScheduledAction`1.Priority">
            <exclude/><summary>The priority of the current operation.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScheduledAction`1.CurrentOperation">
            <exclude/><summary>The current operation.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScheduledAction`1.State">
            <exclude/><summary>The current state.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.#ctor(NationalInstruments.Controls.ScaleDivisions,System.Windows.DependencyProperty,NationalInstruments.Controls.Primitives.RelativeScalePanelStack,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.GetRangeDataMapper">
            <exclude/><summary>Gets the underlying range data mapper.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.UpdateRenderVisual(System.Collections.Generic.IList{`0})">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.InitializeElements">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.UpdateVisuals(System.Collections.Generic.IList{`0})">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.GetDivision(System.Collections.Generic.IList{`0},System.Int32)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.UpdateVisuals(System.Collections.Generic.IList{`0},System.Int32)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.GetDivisions">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.GetVisibleDivisions(System.Collections.Generic.IEnumerable{`0})">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.UpdateVisual(System.Int32,`0,System.Windows.UIElement@)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.TryUpdateVisual(System.Collections.Generic.IList{System.Windows.UIElement},System.Collections.Generic.IList{`0},System.Int32)">
            <exclude/>
            <summary>
            Returns true if the same visual was re-used to present the specified division;
            otherwise, returns false if the visual changed (requiring layout pass).
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.GetBrushBinding(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.ScaleDivisions,System.Windows.DependencyProperty)">
            <exclude/>
            <summary>Creates a binding for a brush property, falling back to the foreground of the owner when null.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.Elements">
            <exclude/><summary>Gets the list of elements generated by the presenter.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.Divisions">
            <summary>Gets the divisions calculated by this presenter.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.MonitorDependentDivisions">
            <summary>Gets a value indicating whether to re-initialize elements when the dependent divisions change.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.OcclusionMargin">
            <summary>Gets the occlusion margin applied to visible elements.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.VisibleDivisions">
            <summary>Gets the set of visible divisions.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.DataMapper">
            <summary>
            Gets or sets the data mapper for the scale being presented.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.DependentDivisionsListener">
            <summary>
            Gets or sets a listener for the dependent divisions.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleDivisionsPresenter`1.DataMapperChangedListener">
            <summary>
            Gets or sets a weak event listener for the IDataMapper.Changed event.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.MinimumIndex">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.MaximumIndex">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.#ctor(NationalInstruments.Controls.ScaleLabeledDivisions,System.Windows.DependencyProperty)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.#ctor(NationalInstruments.Controls.ScaleLabeledDivisions,System.Windows.DependencyProperty,NationalInstruments.Controls.Primitives.RelativeScalePanelStack)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.InitializeElements">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.GetDivision(System.Collections.Generic.IList{`0},System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.Visualize(NationalInstruments.Controls.Primitives.ValuePresenter,`0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.UpdateVisual(System.Int32,`0,System.Windows.UIElement@)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.IsMinimumEditableProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.IsMinimumEditable'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.IsMinimumEditable'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.IsMaximumEditableProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.IsMaximumEditable'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.IsMaximumEditable'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.ExtremeLabelInfoProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.ExtremeLabelInfo'/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.ExtremeLabelInfo'/> attached property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.LabelPresenterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.LabelPresenter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.LabelPresenter'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.GetExtremeLabelInfo(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.ExtremeLabelInfo"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.ExtremeLabelInfo"/> property value for the element.
            </returns>
            <remarks>
            Gets the generator and position of the extreme label.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.SetExtremeLabelInfo(System.Windows.UIElement,System.Tuple{NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter{`0},NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter{`0}.EditorPosition})">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.ExtremeLabelInfo"/> attached property to a specified element.
            </summary>
            <remarks>
            Sets the generator and position of the extreme label.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Tuple`2"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.LabeledDivisions">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.OcclusionMargin">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.IsMinimumEditable">
            <summary>
            Gets or sets a value that controls whether the minimum label can edit the range of the scale.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.IsMaximumEditable">
            <summary>
            Gets or sets a value that controls whether the maximum label can edit the range of the scale.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.LabelPresenter">
            <summary>
            Gets or sets the presenter used to generate a label visual.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.PresenterArgs">
            <summary>
            Gets the args used to visualize values.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.Editor">
            <summary>
            Gets or sets the control used for interactive range editing.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleLabeledDivisionsPresenter`1.ScaleInvalidatedListener">
            <summary>
            Gets or sets a weak event listener for the IScale.Invalidated event.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ICustomDivisionPresenter">
            <summary>The interface for custom division presenters.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ICustomDivisionPresenter.Division">
            <summary>The custom division.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1">
            <exclude/>
            <summary>Creates the ticks representing the major or minor divisions for a scale.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.#ctor(NationalInstruments.Controls.ScaleLabeledDivisions,System.Windows.DependencyProperty)">
            <exclude/><summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.#ctor(NationalInstruments.Controls.ScaleDivisions,System.Windows.DependencyProperty,NationalInstruments.Controls.Primitives.RelativeScalePanelStack)">
            <exclude/><summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.UpdateRenderVisual(System.Collections.Generic.IList{`0})">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.CreateTickStrip">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.UpdateVisual(System.Int32,`0,System.Windows.UIElement@)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.TickShapeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.TickShape'/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.TickShape'/> attached property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.GetTickShape(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.TickShape"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.TickShape"/> property value for the element.
            </returns>
            <remarks>
            Gets the tick shape used to generate a tick visual.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.SetTickShape(System.Windows.UIElement,NationalInstruments.Controls.TickShape)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.TickShape"/> attached property to a specified element.
            </summary>
            <remarks>
            Sets the tick shape used to generate a tick visual.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.TickShape"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RangeDivisionsPresenter`1.OcclusionMargin">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.CustomDivisionsPresenter">
            <exclude/><summary>Creates the ticks and labels representing the custom divisions for a scale.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CustomDivisionsPresenter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.CustomDivisionsPresenter"/> class.</summary>
            <lastupdated>9/18/2014 11:06:00 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CustomDivisionsPresenter.GetDivisions``1(NationalInstruments.Controls.CustomDivision)">
            <exclude/><summary>Gets a list containing the data value of the specified custom division, or an empty list if the value could not be converted.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CustomDivisionsPresenter.IsCompatibleCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CustomDivisionsPresenter.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CustomDivisionsPresenter.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CustomDivisionsPresenter.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CustomDivisionsPresenter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.CustomDivisionsPresenter.TargetCollectionForTesting">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.CustomDivisionsPresenter.CustomDivisionEqualityComparer">
            <summary>The CustomDivisionEqualityComparer.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DataMapperExtensions">
            <exclude/>
            <summary>Contains utility members for working with data mappers outside of a strongly-typed context.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperExtensions.UnsafeMap(NationalInstruments.Controls.Data.IDataMapper,NationalInstruments.DataInfrastructure.IBuffer)">
            <exclude/>
            <summary>Calls <see cref="M:NationalInstruments.Controls.Data.IDataMapper`1.Map(NationalInstruments.DataInfrastructure.Buffer{`0})"/> by doing a blind cast of the specified buffer to the type of the data mapper.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperExtensions.UnsafeMap(NationalInstruments.Controls.Data.IDataMapper,System.Object)">
            <exclude/>
            <summary>Calls <see cref="M:NationalInstruments.Controls.Data.IDataMapper`1.Map(`0)"/> by doing a blind cast of the specified value to the type of the data mapper.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperExtensions.UnsafeTryInverseMap(NationalInstruments.Controls.Data.IDataMapper,System.Double,System.Object@)">
            <exclude/>
            <summary>Calls <see cref="M:NationalInstruments.Controls.Data.IDataMapper`1.TryInverseMap(System.Double,`0@)"/> on the data mapper with the specified relative value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperExtensions.GetLogarithmBase(NationalInstruments.Controls.Data.IDataMapper)">
            <exclude/>
            <summary>
            Gets the <see cref="T:System.Double"/> equivalent of the <see cref="P:NationalInstruments.Controls.Data.ILogarithmicRangeDataMapper`2.LogarithmBase"/> of a logarithmic data mapper,
            or <see cref="F:System.Double.NaN"/> if the data mapper is not logarithmic.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperExtensions.GetUniqueIndices``1(NationalInstruments.Controls.Data.IDataMapper{``0},System.Collections.Generic.IList{``0}[],System.Collections.Generic.List{System.Int32}[]@)">
            <exclude/>
            <summary>Determiens the indices of the unique data values in <paramref name="data"/>, returning the mapped values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DataMapperExtensions.IDataMapperHelper">
            <summary>Helper interface for calling strongly-typed data mapper methods.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DataMapperExtensions.DataMapperHelper`1">
            <summary>Helper class for calling strongly-typed data mapper methods.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DataMapperProxyBase`1">
            <exclude/>
            <summary>A base implementation for implementing <see cref="T:NationalInstruments.Controls.Primitives.IDataMapperProxy`1"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.IDataMapperProxy`1">
            <exclude/>
            <summary>
            Represents an object that can can act in place of a data mapper.
            </summary>
            <typeparam name="TData">The type of data the implementation can map.</typeparam>
            <remarks>
            Implement this interface if your type can act in place of a data mapper.
            </remarks>
            <lastupdated>6/19/2012 10:06:41 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.IProxy`1">
            <summary>
            Represents an object that can act in place of another object.
            </summary>
            <typeparam name="T">The type of object being proxied.</typeparam>
            <lastupdated>12/14/2012 10:53:23 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IProxy`1.Update(`0)">
            <summary>
            Updates the value of the proxy object.
            </summary>
            <param name="value">The new object to proxy.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
              The proxy does not support updates to <see cref="P:NationalInstruments.Controls.Primitives.IProxy`1.Value"/>.
            </exception>
            <lastupdated>12/14/2012 10:53:44 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IProxy`1.CanUpdate">
            <summary>
            Gets a value indicating whether the proxy can be updated with a new value.
            </summary>
            <value>
            A value indicating whether the proxy can be updated with a new value.
            </value>
            <lastupdated>12/14/2012 10:53:31 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IProxy`1.Value">
            <summary>
            Gets the proxied object.
            </summary>
            <value>
            The proxied object.
            </value>
            <lastupdated>12/14/2012 10:53:37 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IDataMapperProxy`1.OnDataMapperChanged(NationalInstruments.Controls.Data.DataMapperChangedEventArgs)">
            <summary>Raises the <see cref="E:NationalInstruments.Controls.Data.IDataMapper.DataMapperChanged"/> event.</summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IDataMapperProxy`1.DataMapper">
            <summary>
            Gets the proxied <see cref="T:NationalInstruments.Controls.Data.IDataMapper`1"/>.
            </summary>
            <value>
            The proxied <see cref="T:NationalInstruments.Controls.Data.IDataMapper`1"/>.
            </value>
            <lastupdated>6/1/2012 2:32:47 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.Update(NationalInstruments.Controls.Data.IDataMapper{`0})">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.UpdateCore(NationalInstruments.Controls.Data.IDataMapper{`0})">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IProxy`1.Update(`0)"/>
            <summary>Implements the <see cref="M:NationalInstruments.Controls.Primitives.IProxy`1.Update(`0)"/> method.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.NationalInstruments#Controls#Primitives#IProxy{NationalInstruments#Controls#Data#IDataMapper}#Update(NationalInstruments.Controls.Data.IDataMapper)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.OnDataMapperChanged(NationalInstruments.Controls.Data.DataMapperChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.RaiseDataMapperChanged(NationalInstruments.Controls.Data.DataMapperChangedEventArgs)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.Transform(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.Restore(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.Contains(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.Overlaps(NationalInstruments.Controls.Data.BufferCollection{`0})">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.AdjustRange(NationalInstruments.Controls.Data.BufferCollection{`0},System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.Map(NationalInstruments.DataInfrastructure.Buffer{`0})">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.Map(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.InverseMap(NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Unit)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.TryInverseMap(System.Double,`0@)">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.CanUpdate">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.DataMapper">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.Value">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.NationalInstruments#Controls#Primitives#IProxy{NationalInstruments#Controls#Data#IDataMapper}#Value">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.DataType">
            <inheritdoc/>
        </member>
        <member name="E:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.DataMapperChanged">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DataMapperProxyBase`1.Descriptor">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Default`1">
            <exclude/>
            <summary>
            Contains cached instances of values, based on the <typeparamref name="TData"/> type.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.Default`1.EmptyArray">
            <summary>Gets a cached instance of a zero-length array of <typeparamref name="TData"/> values.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Default`1.EmptyList">
            <summary>Gets a cached instance of a zero-length array of <typeparamref name="TData"/> values.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Default`1.Range">
            <summary>Gets the default range used to assign the Range property for a new data mapper.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Default`1.Descriptor">
            <summary>Gets the default descriptor instance from <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.DataTypeDescriptors"/>, cast to the desired type.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Default`1.Comparer">
            <summary>Gets the default descriptor instance from <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.DataTypeDescriptors"/>, cast to the desired type.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Default`1.Formatter">
            <summary>Gets the default descriptor instance from <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.DataTypeDescriptors"/>, cast to the desired type.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Default`1.ComparerObject">
            <summary>Gets the default descriptor instance from <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.DataTypeDescriptors"/>, cast to the desired type.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Default`1.OpComparer">
            <exclude/><summary>Wraps a comparison operation.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks">
            <exclude/>
            <summary>Contains standard methods for dependency property validation and coercion.</summary>
            <remarks>
            All methods must follow the appropriate standard callback delegate signature:
            - bool ValidateValueCallback(object value)
            - object CoerceValueCallback(DependencyObject d, object baseValue)
            <para>
            A generic type argument can be used to pass the expected type of the value, for use by the method.
            </para>
            </remarks>
            ReSharper disable UnusedTypeParameter - matches validation pattern
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsValidEnum``1(System.Object)">
            <summary>Validates the specified <typeparamref name="T"/> enum value is defined by the enum, or as a combination of enum flags.</summary>
            <typeparam name="T">The type of the enum.</typeparam>
            <param name="value">The value to validate.</param>
            <returns><see langword="true"/> if the enum <paramref name="value"/> is defined by <typeparamref name="T"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsValidNullableEnum``1(System.Object)">
            <summary>Validates the specified <typeparamref name="T"/> nullable enum value null or is defined by the enum, or as a combination of enum flags.</summary>
            <typeparam name="T">The type of the enum.</typeparam>
            <param name="value">The value to validate.</param>
            <returns><see langword="true"/> if the enum <paramref name="value"/> is null or defined by <typeparamref name="T"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsNotNull``1(System.Object)">
            <summary>Validates that the value is not <see langword="null"/>.</summary>
            <typeparam name="T">The type of the value, which must be a reference type.</typeparam>
            <param name="value">The value to validate.</param>
            <returns><see langword="true"/> if <paramref name="value"/> is not <see langword="null"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsNotEmptySize(System.Object)">
            <summary>Validates that the <see cref="T:System.Windows.Size"/> value is not empty.</summary>
            <param name="value">The value to validate.</param>
            <returns>
            <see langword="true"/> if the <see cref="P:System.Windows.Size.IsEmpty"/> property on <paramref name="value"/> is <see langword="false"/>;
            otherwise, <see langword="false"/>.
            </returns>
            <seealso cref="P:System.Windows.Size.IsEmpty"/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsNotEmptyRange``1(System.Object)">
            <summary>Validates that the <see cref="T:NationalInstruments.Controls.Range`1"/> value is not empty.</summary>
            <typeparam name="TData">The TData type of the range.</typeparam>
            <param name="value">The value to validate.</param>
            <returns>
            <see langword="true"/> if the <see cref="P:NationalInstruments.Controls.Range`1.IsEmpty"/> property on <paramref name="value"/> is <see langword="false"/>;
            otherwise, <see langword="false"/>.
            </returns>
            <seealso cref="P:NationalInstruments.Controls.Range`1.IsEmpty"/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsNotEmptyOrInfiniteRange``1(System.Object)">
            <summary>Validates that the <see cref="T:NationalInstruments.Controls.Range`1"/> value is not empty or infinite.</summary>
            <typeparam name="TData">The TData type of the range.</typeparam>
            <param name="value">The value to validate.</param>
            <returns>
            <see langword="true"/> if the <see cref="P:NationalInstruments.Controls.Range`1.IsEmpty"/> and <see cref="P:NationalInstruments.Controls.Range`1.IsInfinite"/> properties on <paramref name="value"/> is <see langword="false"/>;
            otherwise, <see langword="false"/>.
            </returns>
            <seealso cref="P:NationalInstruments.Controls.Range`1.IsEmpty"/>
            <seealso cref="P:NationalInstruments.Controls.Range`1.IsInfinite"/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsNotSpecialValue``1(System.Object)">
            <summary>Validates that the numeric value is not a special value (e.g. infinity, NaN).</summary>
            <typeparam name="T">The type of the numeric value.</typeparam>
            <param name="value">The value to validate.</param>
            <returns><see langword="true"/> if <paramref name="value"/> is not a floating-point special number; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsNotInfinite``1(System.Object)">
            <summary>Validates that the numeric value is not infinity.</summary>
            <typeparam name="T">The type of the numeric value.</typeparam>
            <param name="value">The value to validate.</param>
            <returns><see langword="true"/> if <paramref name="value"/> is not a floating-point infinity number; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsNotNegative``1(System.Object)">
            <summary>Validates that the numeric value is greater than or equal to zero.</summary>
            <typeparam name="T">The type of the numeric value.</typeparam>
            <param name="value">The value to validate.</param>
            <returns><see langword="true"/> if <paramref name="value"/> is a number greater than or equal to zero; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsNotNegativeOrInfinite``1(System.Object)">
            <summary>Validates that the numeric value is not negative or infinite.</summary>
            <typeparam name="T">The type of the numeric value.</typeparam>
            <param name="value">The value to validate.</param>
            <returns>
            <see langword="true"/> if <paramref name="value"/> is a number greater than or equal to zero, and is not positive infinity;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsNotNegativeOrSpecialValue``1(System.Object)">
            <summary>Validates that the numeric value is not negative or a special value (e.g. infinity, NaN).</summary>
            <typeparam name="T">The type of the numeric value.</typeparam>
            <param name="value">The value to validate.</param>
            <returns>
            <see langword="true"/> if <paramref name="value"/> is a number greater than or equal to zero, and is not a floating-point special number;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.IsGreaterThanZeroAndNotSpecialValue``1(System.Object)">
            <summary>Validates that the numeric value is greater than zero and not a special value (e.g. infinity, NaN).</summary>
            <typeparam name="T">The type of the numeric value.</typeparam>
            <param name="value">The value to validate.</param>
            <returns>
            <see langword="true"/> if <paramref name="value"/> is a number greater than zero, and is not a floating-point special number;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.CoerceNonNegative``1(System.Windows.DependencyObject,System.Object)">
            <summary>Coerces negative numeric values to zero.</summary>
            <typeparam name="T">The type of the numeric value.</typeparam>
            <param name="element">The dependency object that defines the numeric property.</param>
            <param name="value">The value to coerce.</param>
            <returns>If <paramref name="value"/> is a number greater than or equal to zero, returns the value; otherwise, returns the zero value for <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.CoerceNullToNone``1(System.Windows.DependencyObject,System.Object)">
            <summary>Coerces <see langword="null"/> to the "None" value for the Smart Enum object.</summary>
            <typeparam name="T">The type of the Smart Enum object.</typeparam>
            <param name="element">The dependency object that defines the Smart Enum property.</param>
            <param name="value">The value to coerce.</param>
            <returns>If <paramref name="value"/> is <see langword="null"/>, returns "None"; otherwise, returns <paramref name="value"/>.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.NumericValueResult">
            <summary>Classifies numeric values according to positive/negative and normal/special.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.INumericValueOperations">
            <summary>Represents the operations needed to classify numeric values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.NumericValueOperations`2">
            <summary>Implements <see cref="T:NationalInstruments.Controls.Internal.DependencyPropertyCallbacks.INumericValueOperations"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DependencyPropertyCollectionListener">
            <exclude/>
            <summary>Listens for changes to a collection in a dependency property through a binding.</summary>
            <remarks>If the collection does not implement <see cref="T:NationalInstruments.Controls.Primitives.INotifyCollectionChanging"/>, it will be emulated as full change events whenever the property changes.</remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCollectionListener.#ctor(System.EventHandler{NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs},System.Windows.DependencyProperty)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.DependencyPropertyCollectionListener"/> class.</summary>
            <param name="handler">A handler for the <see cref="E:NationalInstruments.Controls.Primitives.INotifyCollectionChanging.CollectionChanging"/> event.</param>
            <param name="property">The property on the source object to listen to.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyCollectionListener.Listen(System.Windows.DependencyObject)">
            <summary>Listens to changes on any collection saved to the specified property.</summary>
            <param name="source">The object to listen to.</param>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyCollectionListener.OnlyReferenceChanges">
            <summary>Gets or sets a value indicating whether changes to elements in the collection should also be reported.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DependencyPropertyListener">
            <summary>Listens for changes to a dependency property through a binding.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyListener.#ctor(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.DependencyPropertyListener"/> class.</summary>
            <param name="source">The object to listen to.</param>
            <param name="property">The property on the source object to listen to.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyListener.#ctor(System.Windows.DependencyObject,System.String)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.DependencyPropertyListener"/> class.</summary>
            <param name="source">The object to listen to.</param>
            <param name="propertyName">The name of the property on the source object to listen to.</param>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.DependencyPropertyListener.TargetProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.DependencyPropertyListener.Target'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.DependencyPropertyListener.Target'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyListener.#ctor(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.DependencyPropertyListener"/> class with the specified source, property, and propertyName.
            </summary>
            <param name="source">
            The source dependency object to monitor.
            </param>
            <param name="property">
            The dependency property on the source to monitor.
            </param>
            <param name="propertyName">
            The name of the dependency property on the source to monitor.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyListener.OnChanged(NationalInstruments.Controls.Internal.DependencyPropertyListenerChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NationalInstruments.Controls.Internal.DependencyPropertyListener.Changed"/> event.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e"/> is <see langword="null"/>.
            </exception>
            <param name="e">
            An instance of <see cref="T:NationalInstruments.Controls.Internal.DependencyPropertyListenerChangedEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyListener.Source">
            <summary>
            Gets the source dependency object to monitor.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyListener.Property">
            <summary>
            Gets the dependency property on the source to monitor.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyListener.PropertyName">
            <summary>
            Gets the name of the dependency property on the source to monitor.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyListener.OnlyReferenceChanges">
            <summary>
            Gets or sets a value indicating whether only reference changes should cause a <see cref="E:NationalInstruments.Controls.Internal.DependencyPropertyListener.Changed"/> event.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyListener.Target">
            <summary>
            Gets or sets private dependency property target used to listen for changes in the source dependency property.
            </summary>
        </member>
        <member name="E:NationalInstruments.Controls.Internal.DependencyPropertyListener.Changed">
            <summary>
            Occurs when the source dependency property is changed.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DependencyPropertyListenerChangedEventArgs">
            <exclude/><summary>The args used for the <see cref="E:NationalInstruments.Controls.Internal.DependencyPropertyListener.Changed"/> event.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DependencyPropertyListenerChangedEventArgs.#ctor(System.Windows.DependencyObject,System.String,System.Windows.DependencyPropertyChangedEventArgs)">
            <exclude/><summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyListenerChangedEventArgs.Source">
            <exclude/><summary>The source of the property.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyListenerChangedEventArgs.OldValue">
            <exclude/><summary>The old property value.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyListenerChangedEventArgs.NewValue">
            <exclude/><summary>The new property value.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.DependencyPropertyListenerChangedEventArgs.PropertyName">
            <exclude/><summary>The name of the property that changed.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Dispatchable">
            <exclude/>
            <summary>Contains helper methods for working with dispatcher delegates.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.ToDispatchTarget(NationalInstruments.IIndicateDisposed,System.Windows.Threading.Dispatcher)">
            <exclude/><summary>Creates an <see cref="T:NationalInstruments.Controls.Internal.IDispatchTarget"/> from the specified disposable target and dispatcher.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.ToDispatchTarget(System.Windows.FrameworkElement)">
            <exclude/><summary>Creates an <see cref="T:NationalInstruments.Controls.Internal.IDispatchTarget"/> from the specified element target and dispatcher.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.ToDispatchTarget``1(``0,System.Windows.Threading.Dispatcher,System.Func{``0,System.Boolean})">
            <exclude/><summary>Creates an <see cref="T:NationalInstruments.Controls.Internal.IDispatchTarget"/> from the specified target, dispatcher, and access check method.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.ToDispatchTarget(NationalInstruments.Controls.Internal.IDispatchTarget,System.Func{NationalInstruments.Controls.Internal.IDispatchTarget,System.Boolean})">
            <exclude/><summary>Wraps an <see cref="T:NationalInstruments.Controls.Internal.IDispatchTarget"/> with the specified message availability.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.CreateAction(NationalInstruments.Controls.Internal.IDispatchTarget,System.Action,System.Windows.Threading.DispatcherPriority)">
            <exclude/><summary>Creates an Action that is invoked only if the target can receive messages.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.CreateAction``2(NationalInstruments.Controls.Internal.IDispatchTarget,System.Action{``0,``1},System.Windows.Threading.DispatcherPriority)">
            <exclude/><summary>Creates an Action that is invoked only if the target can receive messages.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.CreateEvent``1(NationalInstruments.Controls.Internal.IDispatchTarget,System.EventHandler{``0},System.EventHandler{``0},System.Windows.Threading.DispatcherPriority)">
            <exclude/><summary>Creates an Event that is invoked on the same thread as the given dispatcher, and only if the target can receive messages.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Dispatchable.DispatchTargetAdapter`1">
            <exclude/><summary>Encapsulates a target access check and a dispatcher as an <see cref="T:NationalInstruments.Controls.Internal.IDispatchTarget"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Dispatchable.Action">
            <exclude/><summary>Represents an Action that is invoked only if the target can receive messages.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.Action.Dispatch">
            <exclude/><summary>Schedules the underlying method to the dispatcher.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Dispatchable.Action.Invoke">
            <exclude/><summary>Invokes the underlying method.</summary>
        </member>
        <member name="E:NationalInstruments.Controls.Internal.Dispatchable.Action.InvokeAborted">
            <exclude/><summary>Occurs when a dispatched action is invoked when the target cannot receive messages.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Dispatchable.Action`2">
            <exclude/><summary>Represents an Action that is invoked only if the target can receive messages.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.Action`2.Dispatch(`0,`1)">
            <exclude/><summary>Schedules the underlying method to the dispatcher.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Dispatchable.Action`2.Invoke">
            <exclude/><summary>Invokes the underlying method.</summary>
        </member>
        <member name="E:NationalInstruments.Controls.Internal.Dispatchable.Action`2.InvokeAborted">
            <exclude/><summary>Occurs when a dispatched action is invoked when the target cannot receive messages.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Dispatchable.Event`1">
            <exclude/><summary>Represents an Event that is invoked on the same thread as the given dispatcher, and only if the target can receive messages.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Dispatchable.Event`1.Dispatch(System.Object,`0)">
            <exclude/><summary>Schedules the underlying method to the dispatcher.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Dispatchable.Event`1.Invoke">
            <exclude/><summary>Invokes the underlying method.</summary>
        </member>
        <member name="E:NationalInstruments.Controls.Internal.Dispatchable.Event`1.InvokeAborted">
            <exclude/><summary>Occurs when a dispatched action is invoked when the target cannot receive messages.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DivisionValuesSynchronizer`1">
            <exclude/><summary>Synchronizes the divisions on a scale host with a given collection.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DivisionValuesSynchronizer`1.Major(NationalInstruments.Controls.Primitives.NotifyingCollection{`0})">
            <exclude/><summary>Creates a synchronizer for the major divisions.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DivisionValuesSynchronizer`1.Minor(NationalInstruments.Controls.Primitives.NotifyingCollection{`0})">
            <exclude/><summary>Creates a synchronizer for the minor divisions.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DivisionValuesSynchronizer`1.SetAll(System.Windows.DependencyObject)">
            <exclude/><summary>Creates a synchronizer and sets the collection for each of the attached division properties.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DivisionValuesSynchronizer`1.IsCompatibleCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DivisionValuesSynchronizer`1.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DivisionValuesSynchronizer`1.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DivisionValuesSynchronizer`1.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ExceptionBuilder">
            <exclude/><summary>Defines a type for centralized exception generation.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ExceptionBuilder.Overflow">
            <exclude/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FigureCreator">
            <exclude/>
            <summary>Implementation used by PointShape and TickShape.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FigureCreator.DefaultBoundingBox">
            <summary>Gets the default bounding box used to draw figures.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.Create(NationalInstruments.Controls.Internal.ShapeType,System.Boolean)">
            <exclude/>
            <summary>Creates a new <see cref="T:NationalInstruments.Controls.Internal.FigureCreator"/> instance for the specified shape and fill value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.DrawShape(System.Windows.Media.StreamGeometryContext,System.Windows.Rect)">
            <exclude/>
            <summary>Draws a figure to the specified drawing context.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.FigureCreator.IsFilled">
            <summary>Gets a value indicating whether the figure should be filled.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.FigureCreator.Name">
            <summary>Gets the name of the figure.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.FigureCreator.ShapeType">
            <summary>Gets the type of the figure.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FigureCreator.EllipseImpl">
            <summary>Implementation of the <see cref="F:NationalInstruments.Controls.Internal.ShapeType.Ellipse"/> shape.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.EllipseImpl.DrawShape(System.Windows.Media.StreamGeometryContext,System.Windows.Rect)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FigureCreator.PolyLineShapeImpl">
            <summary>Base implementation for straight-line shapes.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.PolyLineShapeImpl.DrawShape(System.Windows.Media.StreamGeometryContext,System.Windows.Rect)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.PolyLineShapeImpl.GetPoints(System.Windows.Rect)">
            <summary></summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FigureCreator.RectangleImpl">
            <summary>Implementation of the <see cref="F:NationalInstruments.Controls.Internal.ShapeType.Rectangle"/> shape.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.RectangleImpl.GetPoints(System.Windows.Rect)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FigureCreator.DiamondImpl">
            <summary>Implementation of the <see cref="F:NationalInstruments.Controls.Internal.ShapeType.Diamond"/> shape.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.DiamondImpl.GetPoints(System.Windows.Rect)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FigureCreator.OutwardTriangleImpl">
            <summary>Implementation of the <see cref="F:NationalInstruments.Controls.Internal.ShapeType.OutwardTriangle"/> shape.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.OutwardTriangleImpl.GetPoints(System.Windows.Rect)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FigureCreator.InwardTriangleImpl">
            <summary>Implementation of the <see cref="F:NationalInstruments.Controls.Internal.ShapeType.InwardTriangle"/> shape.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.InwardTriangleImpl.GetPoints(System.Windows.Rect)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FigureCreator.CrossImpl">
            <summary>Implementation of the <see cref="F:NationalInstruments.Controls.Internal.ShapeType.Cross"/> shape.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.CrossImpl.DrawShape(System.Windows.Media.StreamGeometryContext,System.Windows.Rect)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FigureCreator.PlusImpl">
            <summary>Implementation of the <see cref="F:NationalInstruments.Controls.Internal.ShapeType.Plus"/> shape.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FigureCreator.PlusImpl.DrawShape(System.Windows.Media.StreamGeometryContext,System.Windows.Rect)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FormatString">
            <summary>Represents a .NET format string or format item.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatString.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.FormatString"/> class with the specified format value.</summary>
            <param name="formatValue">A format value.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatString.IsValidShortFormat(NationalInstruments.Controls.Internal.FormatString,NationalInstruments.Controls.Internal.FormatString,System.Boolean)">
            <summary>Determines whether the specified short format string can be used.</summary>
            <param name="shortFormat">The short format string to test.</param>
            <param name="format">The standard format string.</param>
            <param name="formatResultValid">A value indicating whether the standard format string formatted successfully.</param>
            <returns><see langword="true" /> if <paramref name="shortFormat" /> should be tried.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatString.IsIncorrectlyFormattedZero``1(System.String,``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.String)">
            <summary>Determines whether a non-zero value was incorrectly formatted as zero.</summary>
            <typeparam name="TData">The type of <paramref name="value" />.</typeparam>
            <param name="logCategory">The log category of the caller</param>
            <param name="value">The value to format.</param>
            <param name="args">The formatting arguments.</param>
            <param name="result">The formatted value.</param>
            <returns><see langword="true" /> if <paramref name="value" /> is not zero, but <paramref name="result" /> is zero.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatString.TryFormat``1(System.String,``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.String@)">
            <summary>Tries to format the specified value with the current format string.</summary>
            <typeparam name="TData">The type of <paramref name="value" />.</typeparam>
            <param name="logCategory">The log category of the caller</param>
            <param name="value">The value to format.</param>
            <param name="args">The formatting arguments.</param>
            <param name="result">On return, contains the formatted value.</param>
            <returns><see langword="true" /> if the formatted value is different from the format string.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatString.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatString.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatString.ToString">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FormatString.FormatItemTester">
            <summary>
            Sets <see cref="P:NationalInstruments.Controls.Internal.FormatString.FormatItemTester.HasFormatItem"/> to <see langword="true"/> when formatted with a string containing a "{0}" .NET format item.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FormatterUtility">
            <summary>Contains helper methods for performing standard .NET format and parse operations on data values.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.None">
            <summary>The constant value representing no SI suffix.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.YottaConstant">
            <summary>The constant value representing the Yotta SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.ZettaConstant">
            <summary>The constant value representing the Zetta SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.ExaConstant">
            <summary>The constant value representing the Exa SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.PetaConstant">
            <summary>The constant value representing the Peta SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.TeraConstant">
            <summary>The constant value representing the Yotta SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.GigaConstant">
            <summary>The constant value representing the Giga SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.MegaConstant">
            <summary>The constant value representing the Mega SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.KiloConstant">
            <summary>The constant value representing the Kilo SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.HectoConstant">
            <summary>The constant value representing the Hecto SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.DecaConstant">
            <summary>The constant value representing the Deca SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.DeciConstant">
            <summary>The constant value representing the Deci SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.CentiConstant">
            <summary>The constant value representing the Centi SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.MilliConstant">
            <summary>The constant value representing the Milli SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.MicroConstant">
            <summary>The constant value representing the Micro SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.NanoConstant">
            <summary>The constant value representing the Nano SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.PicoConstant">
            <summary>The constant value representing the Pico SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.FemtoConstant">
            <summary>The constant value representing the Femto SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.AttoConstant">
            <summary>The constant value representing the Atto SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.ZeptoConstant">
            <summary>The constant value representing the Zepto SI notation.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FormatterUtility.YoctoConstant">
            <summary>The constant value representing the Yocto SI notation.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatterUtility.Format``1(System.String,``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,NationalInstruments.Controls.Internal.FormatString,NationalInstruments.Controls.Internal.FormatString)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.ValueFormatter.Format``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)"/>
            <summary>Performs standard .NET formatting on the specified value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatterUtility.Parse``1(System.String,System.Boolean,System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.ValueFormatter.Parse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs)"/>
            <summary>Performs standard .NET parsing on the specified value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatterUtility.TryParse``1(System.String,System.Boolean,System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs,``0@)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.ValueFormatter.TryParse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs,``0@)"/>
            <summary>Performs standard .NET parsing on the specified value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatterUtility.TryParseSISuffix(System.String@,System.Double@)">
            <summary>Extracts the actual numeric portion of a string that contains an SI suffix and the related multiplying factor</summary>
            <param name="input">The input.</param>
            <param name="factor">The SI multiplying factor, or 1 if there is no suffix.</param>
            <returns><see langword="true" /> if a suffix was present.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FormatterUtility.TryGetSIFactor(System.String,System.Double@)">
            <summary>Gets the numeric value for a given constant.</summary>
            <param name="suffix">The string that represents the numeric symbol.</param>
            <param name="factor">The SI multiplying factor, or 1 <paramref name="suffix" /> is not recognized.</param>
            <returns>A double that represents the multiplication factor.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FrameworkExtensions">
            <exclude/>
            <summary>Contains extensions for interaction with framework objects.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FrameworkExtensions.ScrollWheelDeltaForOneLine">
            <summary>Gets the number of ticks for one full scroll of the mouse wheel.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.GetName(System.Windows.DependencyProperty)">
            <exclude/>
            <summary>
            Returns the name of a <see cref="T:System.Windows.DependencyProperty"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.CreateBinding(System.Object,System.Windows.DependencyProperty)">
            <exclude/>
            <summary>
            Creates a new <see cref="T:System.Windows.Data.Binding"/> with the specified source object and targeting the specified <see cref="T:System.Windows.DependencyProperty"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.CreateBinding(System.Object,System.String)">
            <exclude/>
            <summary>
            Creates a new <see cref="T:System.Windows.Data.Binding"/> with the specified source object and targeting the specified
            <see cref="T:System.Windows.DependencyProperty"/> name.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.CreateBinding(System.Object,System.Windows.DependencyProperty,System.Windows.Data.IValueConverter)">
            <exclude/>
            <summary>
            Creates a new <see cref="T:System.Windows.Data.Binding"/> with the specified source object and targeting the specified
            <see cref="T:System.Windows.DependencyProperty"/>, with the specified <see cref="T:System.Windows.Data.IValueConverter"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.CreateBinding(System.Object,System.String,System.Windows.Data.IValueConverter)">
            <exclude/>
            <summary>
            Creates a new <see cref="T:System.Windows.Data.Binding"/> with the specified source object and targeting the specified
            <see cref="T:System.Windows.DependencyProperty"/> name, with the specified <see cref="T:System.Windows.Data.IValueConverter"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
            <exclude/>
            <summary>
            Sets a binding on the specified target object for the specified <see cref="T:System.Windows.DependencyProperty"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <exclude/>
            <summary>
            Clears any binding on the specified target object for the specified <see cref="T:System.Windows.DependencyProperty"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.RegisterClassCommandBindings(System.Type,System.Windows.Input.CommandBinding[])">
            <exclude/>
            <summary>
            Registers a class command binding for a <see cref="T:System.Windows.Controls.Control"/> type.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.GetAncestorsInclusive``1(System.Windows.DependencyObject,System.Predicate{System.Windows.DependencyObject})">
            <exclude/>
            <summary>
            Finds all visual tree ancestor of the specified type <typeparamref name="T"/>.
            </summary>
            <remarks>
            If <paramref name="element"/> is of type <typeparamref name="T"/>, it will be included as well.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.GetAncestor``1(System.Windows.DependencyObject,System.Predicate{System.Windows.DependencyObject})">
            <exclude/>
            <summary>
            Finds the first visual tree ancestor of the specified type <typeparamref name="T"/>,
            or <see langword="null"/> if an ancestor of that type could not be found.
            </summary>
            <remarks>
            If <paramref name="element"/> is of type <typeparamref name="T"/>, it will be returned.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.UpdateEllipseClipGeometry(System.Windows.Controls.Control,System.Windows.Size)">
            <exclude/>
            <summary>Sets the <see cref="P:System.Windows.UIElement.Clip"/> property of a control to an ellipse of the specified size.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.Invert(System.Windows.Controls.Orientation)">
            <summary>Determines the inverse of a given orientation.</summary>
            <param name="orientation">The orientation.</param>
            <returns>The inverse orientation.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.IsHorizontal(System.Windows.Controls.Orientation)">
            <summary>Determines whether an orientation is horizontal.</summary>
            <param name="orientation">The orientation.</param>
            <returns>True if the orientation is horizontal.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.IsHorizontal(System.Nullable{System.Windows.Controls.Orientation})">
            <summary>Determines whether an orientation is horizontal.</summary>
            <param name="orientation">The orientation.</param>
            <returns>True if the orientation is horizontal.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.IsVertical(System.Windows.Controls.Orientation)">
            <summary>Determines whether an orientation is vertical.</summary>
            <param name="orientation">The orientation.</param>
            <returns>True if the orientation is vertical.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.IsVertical(System.Nullable{System.Windows.Controls.Orientation})">
            <summary>Determines whether an orientation is vertical.</summary>
            <param name="orientation">The orientation.</param>
            <returns>True if the orientation is vertical.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.IsHorizontal(NationalInstruments.Controls.Primitives.CartesianEdge)">
            <summary>Determines whether an edge is horizontal.</summary>
            <param name="edge">The edge.</param>
            <returns>True if the edge is horizontal.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.IsNear(NationalInstruments.Controls.Primitives.CartesianEdge)">
            <summary>Determines whether an edge is near.</summary>
            <param name="edge">The edge.</param>
            <returns>True if the edge is near.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.ToEdge(System.Boolean,System.Boolean)">
            <summary>Gets an edge from its orientation and position.</summary>
            <param name="horizontal">The edge orientation.</param>
            <param name="near">The edge position.</param>
            <returns>The Cartesian edge.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.Decompose(NationalInstruments.Controls.Primitives.CartesianEdge,System.Windows.Controls.Orientation@,NationalInstruments.Controls.RelativePosition@)">
            <summary>Gets the orientation and position of an edge.</summary>
            <param name="edge">The edge.</param>
            <param name="orientation">The edge orientation.</param>
            <param name="position">The edge position.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.Decompose(NationalInstruments.Controls.Primitives.CartesianEdge,System.Windows.Controls.Orientation@,NationalInstruments.Controls.RelativePosition@,System.Double@)">
            <summary>Gets the orientation and position of an edge.</summary>
            <param name="edge">The edge.</param>
            <param name="orientation">The edge orientation.</param>
            <param name="position">The edge position.</param>
            <param name="baseAngle">The edge base angle.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.SafeDispose(System.IDisposable)">
            <summary>
            Disposes an <see cref="T:System.IDisposable"/> instance if it is not null.
            </summary>
            <param name="disposable">The disposable instance.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.SafeDispose``1(``0@)">
            <summary>
            Disposes an <see cref="T:System.IDisposable"/> instance if it is not null, then nullifies it so that it will not be disposed more than once.
            </summary>
            <param name="disposable">The disposable instance.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FrameworkExtensions.SequenceEqual``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
            <summary>Because Linq's SequenceEqual is far too slow for lists with different counts.</summary>
            <param name="first">The first list.</param>
            <param name="second">The second list.</param>
            <returns>Whether the lists contain all the same elements.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FreezableExtensions">
            <exclude/>
            <summary>Contains compatibility helper methods for working with freezable types in SL.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FreezableExtensions.SafeFreeze``1(``0)">
            <exclude/>
            <summary>
            In WPF, calls Freeze on the specified Freezable value.
            In  SL, calls Freeze on the specified value if it implements IFreezable.
            Allows <see langword="null"/> values.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.FreezableExtensions.SafeIsFrozen``1(``0)">
            <exclude/>
            <summary>
            In WPF, calls IsFrozen on the specified Freezable value.
            In  SL, calls IsFrozen on the specified value if it implements IFreezable.
            Allows <see langword="null"/> values.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.FreezableExtensions.CloneType">
            <exclude/><summary>Represents the different clone operations that can occur on Freezable values.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FreezableExtensions.CloneType.Clone">
            <exclude/><summary>Indicates a call to Clone.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FreezableExtensions.CloneType.CloneCurrentValue">
            <exclude/><summary>Indicates a call to CloneCurrentValue.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FreezableExtensions.CloneType.GetAsFrozen">
            <exclude/><summary>Indicates a call to GetAsFrozen.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.FreezableExtensions.CloneType.GetCurrentValueAsFrozen">
            <exclude/><summary>Indicates a call to GetCurrentValueAsFrozen.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.GuardExtensions">
            <exclude/>
            <summary>Contains extension methods for argument and value validation.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.ConversionSuccessful``1(NationalInstruments.Restricted.Guard{``0},System.Object,System.Type)">
            <exclude/>
            <summary>Ensures the value was converted correctly.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.GreaterThanZero(NationalInstruments.Restricted.Guard{System.Int32})">
            <exclude/>
            <summary>Ensures the value is greater than zero.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.GreaterThanZero(NationalInstruments.Restricted.Guard{System.Double})">
            <exclude/>
            <summary>Ensures the value is greater than zero.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.NotEmpty(NationalInstruments.Restricted.Guard{System.Windows.Size})">
            <exclude/>
            <summary>Ensures the given size is not empty.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.InsertIndexInRange(NationalInstruments.Restricted.Guard{System.Int32},System.Int32)">
            <exclude/>
            <summary>Ensures the index value is valid to insert an item into a collection with the specified count.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.ParentNotRegistered``1(NationalInstruments.Restricted.Guard{``0},System.String)">
            <exclude/>
            <summary>Ensures a parent has not already been registered.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.ParentIsRegistered``1(NationalInstruments.Restricted.Guard{``0},System.String)">
            <exclude/>
            <summary>Ensures a parent has not already been registered.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.SameParentRegistered``1(NationalInstruments.Restricted.Guard{``0},``0,System.String)">
            <exclude/>
            <summary>Ensures a parent has not already been registered.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.NoNullNewItems``1(``0[])">
            <exclude/>
            <summary>Ensures the given size is not empty.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.BufferTypesAndSizesMatch(NationalInstruments.Restricted.Guard{System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer}},System.Collections.Generic.IList{System.Type}[])">
            <exclude/>
            <summary>Ensures the number, size, and data types of buffers match at least one of the expected data type lists.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.AssertValue``1(System.Nullable{``0},System.String[])">
            <exclude/>
            <summary>
            In Debug, asserts that the nullable variable has a value.
            In Release, performs a direct cast with no runtime checks.
            </summary>
            <typeparam name="T">The type of the nullable variable.</typeparam>
            <param name="value">The value of the variable.</param>
            <param name="info">Additional information to include in the debug message.</param>
            <returns>The non-<see langword="null"/> value of the variable.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.AssertType``1(System.Object,System.String[])">
            <exclude/>
            <summary>
            In Debug, asserts that the variable has the specified type.
            In Release, performs a direct cast with no runtime checks.
            </summary>
            <remarks>
            Since conditionally compiled methods cannot return a value, a helper method is used to perform the debug assert.
            </remarks>
            <typeparam name="T">The type of the variable.</typeparam>
            <param name="value">The value of the variable.</param>
            <param name="info">Additional information to include in the debug message.</param>
            <returns>The non-<see langword="null"/> value of the variable cast to the specified type.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.AssertTypeOrNull``1(System.Object,System.String[])">
            <exclude/>
            <summary>
            In Debug, asserts that the variable has the specified type, or is <see langword="null"/>.
            In Release, performs a direct cast with no runtime checks.
            </summary>
            <remarks>
            Since conditionally compiled methods cannot return a value, a helper method is used to perform the debug check.
            </remarks>
            <typeparam name="T">The type of the variable.</typeparam>
            <param name="value">The value of the variable.</param>
            <param name="info">Additional information to include in the debug message.</param>
            <returns>The value of the variable cast to the specified type.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.GuardExtensions.AssertTypeCore``1(System.Object,System.String[],System.Boolean)">
            <exclude/>
            <summary>
            In Debug, asserts that the variable has the specified type.
            In Release, performs a direct cast with no runtime checks.
            </summary>
            <typeparam name="T">The type of the variable.</typeparam>
            <param name="value">The value of the variable.</param>
            <param name="info">Additional information to include in the debug message.</param>
            <param name="allowNull"><see langword="true"/> to allow <paramref name="value"/> to be <see langword="null"/>; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.IWeakEventListener`1">
            <summary>Represents a listener for a weak event.</summary>
            <typeparam name="TSource">Type type of object raising the event.</typeparam>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IWeakEventListener`1.Add(`0)">
            <exclude/>
            <summary>Registers the weak event to a source.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IWeakEventListener`1.Remove(`0)">
            <exclude/>
            <summary>Unregisters the weak event from a source.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IWeakEventListener`1.Replace(`0,`0)">
            <exclude/>
            <summary>Moves the weak event registration from the old source to the new source.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.LimitedStack`1">
            <exclude/><summary>Represents a stack with a limited capacity.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.LimitedStack`1.#ctor(System.Int32)">
            <exclude/><summary>Initializes a new instance of the class with the specified initial capacity.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.LimitedStack`1.Clear">
            <exclude/><summary>Removes all elements on the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.LimitedStack`1.Peek">
            <exclude/><summary>Gets the last element on the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.LimitedStack`1.TryPop(`0@)">
            <exclude/><summary>Returns the last element on the stack, if it is not empty.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.LimitedStack`1.Push(`0)">
            <exclude/><summary>Adds an element to the stack.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.LimitedStack`1.Capacity">
            <exclude/><summary>Gets or sets the maximum number of elements that can be saved in the stack.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.LimitedStack`1.Count">
            <exclude/><summary>Gets the number of elements in the stack.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Log">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Plural(System.Int32,System.String)">
            <summary>Returns the plural suffix if the specified count requires a plural description.</summary>
            <param name="count">The number of elements.</param>
            <param name="pluralSuffix">The string to use for a plural element count.</param>
            <returns>An empty string if <paramref name="count"/> is one; otherwise, <paramref name="pluralSuffix"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.FormatHashCode(System.Int32,System.String)">
            <summary>Formats a hash code value for log display.</summary>
            <param name="hashCode">The hash code to format.</param>
            <param name="identifier">An additional identifier to include with the hash code.</param>
            <returns>A string containing the combined <paramref name="hashCode"/> and <paramref name="identifier"/> display value.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Format(System.Windows.UIElement)">
            <summary>Formats the element with a display name unique to the instance.</summary>
            <param name="element">The element to format.</param>
            <returns>An object to format the element.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Format(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Formats each type in the specified collection, if the log message is shown.</summary>
            <param name="types">The collection of types to format.</param>
            <returns>An object to format the collection.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Format(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Sorts and formats each value in the specified collection, if the log message is shown.</summary>
            <param name="collection">The collection to integers to sort and format.</param>
            <returns>An object to format the collection.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Format(System.Collections.IEnumerable,System.Func{System.Object,System.String})">
            <summary>Formats each element in the specified collection, if the log message is shown.</summary>
            <param name="collection">The collection to format.</param>
            <param name="elementFormatter">The function to use to format each element in the collection, or <see langword="null"/>.</param>
            <returns>An object to format the collection.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Format``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>Formats each element in the specified collection, if the log message is shown.</summary>
            <typeparam name="T">The type of elements in the collection.</typeparam>
            <param name="collection">The collection to format.</param>
            <param name="elementFormatter">The function to use to format each element in the collection, or <see langword="null"/>.</param>
            <returns>An object to format the collection.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.GetInstanceLogCategory(System.Object,System.String)">
            <summary>Creates a log category string that includes the hash code of the instance.</summary>
            <param name="instance">The object instance to create a log category for.</param>
            <param name="logName">The optional name to use. If not specified or null, the instance's GetType().Name will be used.</param>
            <returns>A log category string.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.MessageWithStackTrace(NationalInstruments.Logging.NILogMessageLevel,System.String,System.String)">
            <summary>A thread-safe method to log a message asynchronously with a full stacktrace.</summary>
            <param name="level">The level at which to log a message.</param>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="message">The  message.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Error(System.Exception)">
            <summary>Logs an Error-level message.</summary>
            <param name="exception">The exception error.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Error(System.String,System.Exception)">
            <summary>Logs an Error-level message.</summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="exception">The exception error.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Verbose(System.String,System.String)">
            <summary>
            Logs a Verbose-level message.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="message">
            The  message.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Verbose``1(System.String,System.String,``0)">
            <summary>
            Logs a Verbose-level message with string formatting.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Verbose``2(System.String,System.String,``0,``1)">
            <summary>
            Logs a Verbose-level message with string formatting.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>, 
            <param name="arg1">Format argument 1 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Verbose``3(System.String,System.String,``0,``1,``2)">
            <summary>
            Logs a Verbose-level message with string formatting.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>, 
            <param name="arg1">Format argument 1 to <paramref name="format"/>.</param>, 
            <param name="arg2">Format argument 2 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Verbose(System.String,System.String,System.Object[])">
            <summary>Logs a Verbose-level message with string formatting.</summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">The format string to used to create the message.</param>
            <param name="args">Format arguments to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Info(System.String,System.String)">
            <summary>
            Logs an Info-level message.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="message">
            The  message.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Info``1(System.String,System.String,``0)">
            <summary>
            Logs an Info-level message with string formatting.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Info``2(System.String,System.String,``0,``1)">
            <summary>
            Logs an Info-level message with string formatting.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>, 
            <param name="arg1">Format argument 1 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Info``3(System.String,System.String,``0,``1,``2)">
            <summary>
            Logs an Info-level message with string formatting.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>, 
            <param name="arg1">Format argument 1 to <paramref name="format"/>.</param>, 
            <param name="arg2">Format argument 2 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Info(System.String,System.String,System.Object[])">
            <summary>Logs an Info-level message with string formatting.</summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">The format string to used to create the message.</param>
            <param name="args">Format arguments to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Warning(System.String,System.String)">
            <summary>
            Logs a Warning-level message.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="message">
            The  message.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Warning``1(System.String,System.String,``0)">
            <summary>
            Logs a Warning-level message with string formatting.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Warning``2(System.String,System.String,``0,``1)">
            <summary>
            Logs a Warning-level message with string formatting.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>, 
            <param name="arg1">Format argument 1 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Warning``3(System.String,System.String,``0,``1,``2)">
            <summary>
            Logs a Warning-level message with string formatting.
            </summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>, 
            <param name="arg1">Format argument 1 to <paramref name="format"/>.</param>, 
            <param name="arg2">Format argument 2 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Warning(System.String,System.String,System.Object[])">
            <summary>Logs a Warning-level message with string formatting.</summary>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">The format string to used to create the message.</param>
            <param name="args">Format arguments to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Message(NationalInstruments.Logging.NILogMessageLevel,System.String,System.String)">
            <summary>A thread-safe method to log a message asynchronously.</summary>
            <param name="level">The level at which to log a message.</param>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="message">
            The  message.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Message``1(NationalInstruments.Logging.NILogMessageLevel,System.String,System.String,``0)">
            <summary>A thread-safe method to log a message asynchronously.</summary>
            <param name="level">The level at which to log a message.</param>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Message``2(NationalInstruments.Logging.NILogMessageLevel,System.String,System.String,``0,``1)">
            <summary>A thread-safe method to log a message asynchronously.</summary>
            <param name="level">The level at which to log a message.</param>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>, 
            <param name="arg1">Format argument 1 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Message``3(NationalInstruments.Logging.NILogMessageLevel,System.String,System.String,``0,``1,``2)">
            <summary>A thread-safe method to log a message asynchronously.</summary>
            <param name="level">The level at which to log a message.</param>
            <param name="category">The message category (for non-public classes this should not be the class name).</param>
            <param name="format">
            The format string used to create the message.
            </param>
            <param name="arg0">Format argument 0 to <paramref name="format"/>.</param>, 
            <param name="arg1">Format argument 1 to <paramref name="format"/>.</param>, 
            <param name="arg2">Format argument 2 to <paramref name="format"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.Message(NationalInstruments.Logging.NILogMessageLevel,System.String,System.String,System.Object[])">
            <summary>A thread-safe method to log a message asynchronously.</summary>
            <param name="level">The level at which to log a message.</param>
            <param name="category">The message category.</param>
            <param name="format">The format string to use to create the message.</param>
            <param name="args">Format arguments to <paramref name="format"/>.</param>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Log.IsVerboseEnabled">
            <summary>Gets a value indicating whether Verbose-level messages are being logged.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Log.IsInfoEnabled">
            <summary>Gets a value indicating whether Info-level messages are being logged.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Log.IsWarningEnabled">
            <summary>Gets a value indicating whether Warning-level messages are being logged.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Log.IsErrorEnabled">
            <summary>Gets a value indicating whether Error-level messages are being logged.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Log.DisplayName">
            <summary>Delays formatting of a UI element until a log message needs to be generated.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.DisplayName.#ctor(System.Windows.UIElement)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.DisplayName.ToString">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Log.EnumerableFormatter`1">
            <summary>Delays formatting of an enumerable collection of values until a log message needs to be generated.</summary>
            <typeparam name="T">The type of elements in the collection.</typeparam>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.EnumerableFormatter`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String})">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Log.EnumerableFormatter`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.MathUtility">
            <exclude/>
            <summary>Contains utility members for working with numeric values.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.MathUtility.DoublePrecisionDecimalDigits">
            <summary>Gets the maximum digits of precision for <see cref="T:System.Double"/> values.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.MathUtility.InfiniteSize">
            <summary>Gets a <see cref="T:System.Windows.Size"/> with a width and height of <see cref="F:System.Double.PositiveInfinity"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.MathUtility.InfiniteThickness">
            <summary>Gets a <see cref="T:System.Windows.Thickness"/> with all "infinite" (<see cref="F:System.Double.PositiveInfinity"/>) values.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.MathUtility.AutoThickness">
            <summary>Gets a <see cref="T:System.Windows.Thickness"/> with all "auto" (<see cref="F:System.Double.NaN"/>) values.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.MathUtility.LabelOcclusionMargin">
            <summary>Gets an occlusion margin <see cref="T:System.Windows.Thickness"/> for range labels.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.MathUtility.TickOcclusionMargin">
            <summary>Gets an occlusion margin <see cref="T:System.Windows.Thickness"/> for range ticks.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.MathUtility.MinimumShapeSize">
            <summary>Gets the smallest size used for calculating intersections with shapes.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.MathUtility.VisibleRelativeRange">
            <summary>Gets a value representing the visible bounds for relative data.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.PositiveMagnitude(System.Double)">
            <exclude/>
            <summary>
            Returns the magnitude of <paramref name="value"/>, if <paramref name="value"/> is positive;
            otherwise, returns zero.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.NegativeMagnitude(System.Double)">
            <exclude/>
            <summary>
            Returns the magnitude of <paramref name="value"/>, if <paramref name="value"/> is negative;
            otherwise, returns zero.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.UseIfLarger(System.Double,System.Double@)">
            <exclude/>
            <summary>
            Assigns <paramref name="value"/> to <paramref name="target"/>, if <paramref name="value"/> is larger.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.UseIfSmaller(System.Int32,System.Int32@)">
            <exclude/>
            <summary>
            Assigns <paramref name="value"/> to <paramref name="target"/>, if <paramref name="value"/> is smaller.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.UseIfSmaller(System.Double,System.Double@)">
            <exclude/>
            <summary>
            Assigns <paramref name="value"/> to <paramref name="target"/>, if <paramref name="value"/> is smaller.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.UseIfLarger(System.Int32,System.Int32@)">
            <exclude/>
            <summary>
            Assigns <paramref name="value"/> to <paramref name="target"/>, if <paramref name="value"/> is larger.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.WithinTolerance(System.Double,System.Double,System.Double)">
            <exclude/>
            <summary>
            Determines if two standard-magnitude <see cref="T:System.Double"/> values are close.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.AreClose(System.Double,System.Double)">
            <exclude/>
            <summary>
            Determines if the two screen values are close.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.AreClose(NationalInstruments.Controls.ArcSweep,NationalInstruments.Controls.ArcSweep)">
            <exclude/>
            <summary>
            Determines if the two arcs are close.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.IsExactly(System.Double,System.Double)">
            <exclude/>
            <summary>
            Determines whether the floating-point value is exactly equal to another floating-point value.
            </summary>
            <remarks>
            Use this method to indicate that a particular condition requires exact numeric equality against a constant value.
            Use <see cref="M:NationalInstruments.Controls.Internal.MathUtility.AreClose(System.Double,System.Double)"/>, or a custom epsilon comparison, to test for approximate equality.
            Use <see cref="M:NationalInstruments.Restricted.CommonExtensions.IsSpecialValue(System.Double)"/>, <see cref="M:System.Double.IsNaN(System.Double)"/>, or <see cref="M:System.Double.IsInfinity(System.Double)"/> to test for non-numeric/special values.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.IsExactly(System.Single,System.Single)">
            <exclude/>
            <summary>
            Determines whether the floating-point value is exactly equal to another floating-point value.
            </summary>
            <remarks>
            Use this method to indicate that a particular condition requires exact numeric equality against a constant value.
            Use <see cref="M:NationalInstruments.Controls.Internal.MathUtility.AreClose(System.Double,System.Double)"/>, or a custom epsilon comparison, to test for approximate equality.
            Use <see cref="M:NationalInstruments.Restricted.CommonExtensions.IsSpecialValue(System.Single)"/>, <see cref="M:System.Single.IsNaN(System.Single)"/>, or <see cref="M:System.Single.IsInfinity(System.Single)"/> to test for non-numeric/special values.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.NotSpecialValueOrDefault(System.Double)">
            <exclude/>
            <summary>
            Returns a finite numeric value, replacing special values with zero.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.NotSpecialValueOrDefault(System.Single)">
            <exclude/>
            <summary>
            Returns a finite numeric value, replacing special values with zero.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.NotSpecialValueOrDefault(System.Windows.Size)">
            <exclude/>
            <summary>
            Returns a size containing only finite numeric values, replacing special values with zero.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.ToRelativeFactor(NationalInstruments.Controls.RelativeAlignment)">
            <exclude/>
            <summary>
            Calculates the relative position along an object to align against.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Invert(NationalInstruments.Controls.RelativeAlignment)">
            <exclude/>
            <summary>
            Calculates the inverse relative alignment.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.IsVisible(System.Windows.Point)">
            <exclude/>
            <summary>
            Determines if the given relative position is visible.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.HasNaN(System.Windows.Point)">
            <exclude/>
            <summary>
            Determines if either X or Y on a point is double.NaN.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.SwapXY(System.Windows.Point)">
            <exclude/>
            <summary>Get a point with the x and y values swapped.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Clamp(System.Int32,System.Int32,System.Int32)">
            <exclude/>
            <summary>
            Returns the given value constrained to the given minimum and maximum.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Clamp(System.Double,System.Double,System.Double)">
            <exclude/>
            <summary>
            Returns the given value constrained to the given minimum and maximum.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Clamp(System.Single,System.Single,System.Single)">
            <exclude/>
            <summary>
            Returns the given value constrained to the given minimum and maximum.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Min``1(NationalInstruments.DataInfrastructure.Descriptors.IOpComparison{``0},``0,``0)">
            <exclude/>
            <summary>
            Returns the smaller of the two specified values.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Max``1(NationalInstruments.DataInfrastructure.Descriptors.IOpComparison{``0},``0,``0)">
            <exclude/>
            <summary>
            Returns the larger of the two specified values.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Min(System.Windows.Size,System.Windows.Size)">
            <exclude/>
            <summary>
            Returns a new <see cref="T:System.Windows.Size"/> containing the largest values in <paramref name="a"/> and <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Max(System.Windows.Size,System.Windows.Size)">
            <exclude/>
            <summary>
            Returns a new <see cref="T:System.Windows.Size"/> containing the largest values in <paramref name="a"/> and <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Ceiling(System.Windows.Size)">
            <exclude/>
            <summary>
            Returns a new <see cref="T:System.Windows.Size"/> containing the <see cref="M:System.Math.Ceiling(System.Double)"/> of the values in <paramref name="size"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Floor(System.Windows.Size)">
            <exclude/>
            <summary>
            Returns a new <see cref="T:System.Windows.Size"/> containing the <see cref="M:System.Math.Floor(System.Double)"/> of the values in <paramref name="size"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Max(System.Windows.Thickness,System.Windows.Thickness)">
            <exclude/>
            <summary>
            Returns a new <see cref="T:System.Windows.Thickness"/> containing the largest values in <paramref name="a"/> and <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Max(System.Windows.Visibility,System.Windows.Visibility)">
            <exclude/>
            <summary>
            Returns the greatest <see cref="T:System.Windows.Visibility"/> between <paramref name="a"/> and <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Min(System.Windows.Visibility,System.Windows.Visibility)">
            <exclude/>
            <summary>
            Returns the least <see cref="T:System.Windows.Visibility"/> between <paramref name="a"/> and <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.IsSuccess(NationalInstruments.DataInfrastructure.Descriptors.ConversionResult)">
            <summary>Determines whether a mathematical operation completed with sufficient accuracy.</summary>
            <param name="result">The result of the mathematical operation.</param>
            <returns>
            <see langword="true"/> if <paramref name="result"/> is <see cref="F:NationalInstruments.DataInfrastructure.Descriptors.ConversionResult.Lossless"/> or <see cref="F:NationalInstruments.DataInfrastructure.Descriptors.ConversionResult.LossOfPrecision"/>;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.HasBooleanTrait(NationalInstruments.DataInfrastructure.TraitSet,System.String)">
            <summary>Determines whether the specified set of traits contains a <see cref="T:NationalInstruments.DataInfrastructure.NamedValueTrait"/> with a <see langword="true"/> Boolean value.</summary>
            <param name="traits">The set of traits to examine.</param>
            <param name="name">The name of the Boolean <see cref="T:NationalInstruments.DataInfrastructure.NamedValueTrait"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="traits"/> contains a <see cref="T:NationalInstruments.DataInfrastructure.NamedValueTrait"/> named <paramref name="name"/> with a Boolean value of <see langword="true"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.IsPowerOfTwo(System.Byte)">
            <summary>
            Determines whether the specified byte value is a power of two.
            </summary>
            <param name="value">The value.</param>
            <returns><see langword="true"/> if <paramref name="value"/> is a power of two greater than one.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.NextHighestPowerOfTwo(System.Double)">
            <summary>
            Returns the next highest power of two. For instance, for 5, it returns 8; for 4 it returns 4.
            </summary>
            <param name="value">The value.</param>
            <returns>The next highest power of 2.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.RoundToSignificantDigits(System.Double,System.Int32,System.Double)">
            <summary>
            Rounds a double value to a given number of significant digits.
            Note that Math.Round() rounds a double value to a given number of decimal places. For example:
            RoundToSignificantDigits(12345.6789,3) ==> 12300.
            Math.Round(12345.6789,3) ==> 12345.679.
            </summary>
            <param name="value">The number to round</param>
            <param name="significantDigits">The number of significant digits to round it to</param>
            <param name="radixBase">The base that determines how significant digits are calculated.</param>
            <returns>The rounded result.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.RoundToSignificantDigits``3(``2,``0,System.Int32,``1)">
            <summary>
            Rounds a value to a given number of significant digits.
            Note that Math.Round() rounds a double value to a given number of decimal places. For example:
            RoundToSignificantDigits(12345.6789,3) ==> 12300.
            Math.Round(12345.6789,3) ==> 12345.679.
            </summary>
            <param name="ops">The operations for the <typeparamref name="TData"/> type.</param>
            <param name="value">The number to round</param>
            <param name="significantDigits">The number of significant digits to round it to</param>
            <param name="radixBase">The base that determines how significant digits are calculated.</param>
            <returns>The rounded result.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.NearestModulus(System.Double,System.Double)">
            <summary>
            Performs the modulus operation, returning whichever of the negative or positive modulus that is closer to zero.
            </summary>
            <param name="value">The value to take the modulus of.</param>
            <param name="factor">The amount to mod the value by.</param>
            <returns>The positive or negative remainder.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.PositiveModulus(System.Double,System.Double)">
            <summary>
            Performs the modulus operation, always returning a positive value.
            </summary>
            <param name="value">The value to take the modulus of.</param>
            <param name="factor">The amount to mod the value by.</param>
            <returns>The positive remainder.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.PositiveModulus``3(``2,``0,``1)">
            <summary>
            Performs the modulus operation, always returning a positive value.
            </summary>
            <param name="ops">The operations for the data type.</param>
            <param name="value">The value to take the modulus of.</param>
            <param name="factor">The amount to mod the value by.</param>
            <returns>The positive remainder.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.TruncatedDivide``3(``2,``0,``1)">
            <summary>
            Performs a truncated division, removing any fractional remainder.
            </summary>
            <param name="ops">The operations for the data type.</param>
            <param name="value">The value to divide.</param>
            <param name="divisor">The amount to divide the value by.</param>
            <returns>The truncated quotient.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.IsContinuous(System.Type)">
            <exclude/>
            <summary>Tests whether the specified data type has an <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.IOpContinuous`1"/> descriptor.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Interpolate(System.Windows.Point,System.Windows.Point,System.Double)">
            <exclude/>
            <summary>
            Returns an interpolated set of points between <paramref name="start"/> and <paramref name="end"/> exclusive,
            using the <see cref="P:System.Windows.Point.X"/> range to determine the number of interpolated values.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.HalveRangeForOverflow``3(``2,NationalInstruments.Controls.Range{``0},NationalInstruments.Controls.Range{``0}@)">
            <summary>
            Determines whether the given range overflows the bounds of its type.
            </summary>
            <remarks>
            A bounded signed type can overflow its bounds if the range is large enough. For instance, a range of
            [Int32.MinValue, Int32.MaxValue] has a span of <c>Int32.MinValue - Int32.MaxValue</c>, which is
            2 * Int32.MaxValue + 1.
            </remarks>
            <typeparam name="TData">The data type.</typeparam>
            <typeparam name="TOffset">The helper type.</typeparam>
            <typeparam name="TDescriptor">The descriptor type.</typeparam>
            <param name="descriptor">The data type descriptor.</param>
            <param name="range">The initial range to check.</param>
            <param name="safeUpperRange">
            If no overflow, the initial range; otherwise, the upper half of the range (adjusted so that its span does not overflow).
            </param>
            <returns>Whether the given range overflows the bounds of its type.</returns>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.MathUtility.ZeroMatrix">
            <summary>Gets a <see cref="T:System.Windows.Media.Matrix"/> with all-zero values.</summary>
            <remarks>When used as the RenderTransform on UI elements, it hides them from view.</remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.CreateRotationMatrix(System.Double)">
            <exclude/>
            <summary>
            Creates a rotation matrix for the specified angle.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.Multiply on Silverlight.
            </summary>
            <param name="matrix1">First matrix.</param>
            <param name="matrix2">Second matrix.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Transform(System.Windows.Media.Matrix,System.Windows.Size)">
            <exclude/>
            <summary>
            Transforms the size by applying the specified matrix.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Transform(System.Windows.Media.Matrix,System.Windows.Rect)">
            <exclude/>
            <summary>
            Transforms the rectangle by applying the specified matrix.
            </summary>
            <param name="matrix">A matrix that specifies the transformation to apply.</param>
            <param name="rect">The rectangle to transform.</param>
            <returns>Transform result.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.Round(System.Windows.Media.Matrix)">
            <summary>
            Rounds the transformational values of the matrix to double's maximum precision.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.GetDigitalSampleConverter(System.Type)">
            <summary>Tries to create a converter from the specified type to <see cref="T:NationalInstruments.DataInfrastructure.DigitalSample"/>.</summary>
            <param name="dataType">The data type to convert from.</param>
            <returns>A converter from <paramref name="dataType"/> to <see cref="T:NationalInstruments.DataInfrastructure.DigitalSample"/>, or <see langword="null"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MathUtility.GetDigitalSampleConverter``1">
            <summary>Tries to create a converter from the specified type to <see cref="T:NationalInstruments.DataInfrastructure.DigitalSample"/>.</summary>
            <typeparam name="TData">The data type to convert from.</typeparam>
            <returns>A converter from <typeparamref name="TData"/> to <see cref="T:NationalInstruments.DataInfrastructure.DigitalSample"/>, or <see langword="null"/>.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.MathUtility.NumericToDigitalSampleConverter`2">
            <summary>Converts a bitwise numeric type to the corresponding <see cref="T:NationalInstruments.DataInfrastructure.DigitalSample"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.MathUtility.NumericToDigitalSampleConverter`2.BitList">
            <summary>Represents the bits in a numeric value as a list.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.MultiEnumerator">
            <exclude/>
            <summary>Allows enumeration over elements in multiple collections.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MultiEnumerator.#ctor(System.Collections.IEnumerator[])">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MultiEnumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.MultiEnumerator.System#Collections#IEnumerator#Reset">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.MultiEnumerator.Current">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.NICursors">
            <summary>Helper class for accessing embedded cursor resources.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.Hand">
            <summary>Access the Hand cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.HandPressed">
            <summary>Access the HandPressed cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.Pan">
            <summary>Access the Pan cursor. It looks like an open hand that is ready to grab something. </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.PanPressed">
            <summary>Access the PanPressed cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.PanHorizontal">
            <summary>Access the PanHorizontal cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.PanHorizontalPressed">
            <summary>Access the PanHorizontalPressed cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.PanVertical">
            <summary>Access the PanVertical cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.PanVerticalPressed">
            <summary>Access the PanVerticalPressed cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.Zoom">
            <summary>Access the Zoom cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.ZoomHorizontal">
            <summary>Access the ZoomHorizontal cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.ZoomVertical">
            <summary>Access the ZoomVertical cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.ZoomIn">
            <summary>Access the ZoomIn cursor.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NICursors.ZoomOut">
            <summary>Access the ZoomOut cursor.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Pair">
            <exclude/>
            <summary>Provides a light-weight mechanism for grouping two values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair.Create``2(``0,``1)">
            <exclude/>
            <summary>Creates a new pair with the specified values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair.CreatePoint(System.Double,System.Double)">
            <exclude/>
            <summary>Creates a new point X/Y value pair with the specified values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair.CreateSize(System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair.CreateThickness(System.Double,System.Nullable{System.Double})">
            <exclude/>
            <summary>Creates a new thickness left/right/top/bottom value tuple with the specified pair of values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair.CreateDictionary``2(``0,``1)">
            <exclude/>
            <summary>Creates a new dictionary key value pair with the specified values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair.Swap``1(``0@,``0@)">
            <exclude/>
            <summary>Swaps the values in the specified variables.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.Pair`2"/> struct with the specified item1 and item2.
            </summary>
            <param name="item1">
            The first item in the pair.
            </param>
            <param name="item2">
            The second item in the pair.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair`2.Equals(NationalInstruments.Controls.Internal.Pair{`0,`1})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            <see langword='true'/> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword='false'/>.
            </returns>
            <param name='other'>
            An object to compare with this object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair`2.op_Equality(NationalInstruments.Controls.Internal.Pair{`0,`1},NationalInstruments.Controls.Internal.Pair{`0,`1})">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Internal.Pair`2"/> objects have the same value.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Internal.Pair`2"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Internal.Pair`2"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair`2.op_Inequality(NationalInstruments.Controls.Internal.Pair{`0,`1},NationalInstruments.Controls.Internal.Pair{`0,`1})">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Internal.Pair`2"/> objects have different values.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Internal.Pair`2"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Internal.Pair`2"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair`2.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="obj">
            The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Pair`2.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Pair`2.Item1">
            <summary>
            Gets the first item in the pair.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Pair`2.Item2">
            <summary>
            Gets the second item in the pair.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.PreserveAttribute">
            <exclude/>
            <summary>Compatibility type for Mono PreserveAttribute.</summary>
            <seealso href="http://docs.xamarin.com/guides/android/advanced_topics/linking"/>
            <seealso href="http://docs.xamarin.com/guides/ios/advanced_topics/api_design"/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.PreserveAttribute.AllMembers">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.PreserveAttribute.Conditional">
            <exclude/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1">
            <exclude/>
            <summary>Creates the labels for major divisions on a scale.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.#ctor(NationalInstruments.Controls.RangeLabeledDivisions,System.Windows.DependencyProperty)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.GetDivisions">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.Visualize(NationalInstruments.Controls.Primitives.ValuePresenter,`0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.ModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.Mode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.Mode'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.LayoutInfoProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.LayoutInfo'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.LayoutInfo'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.MonitorDependentDivisions">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.Mode">
            <summary>
            Gets or sets the mode used to generate divisions.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RangeMajorDivisionsPresenter`1.LayoutInfo">
            <summary>
            Gets or sets the layout info of the host panel.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1">
            <exclude/>
            <summary>Creates the ticks representing the minor divisions for a scale.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.#ctor(NationalInstruments.Controls.RangeDivisions,System.Windows.DependencyProperty)">
            <exclude/><summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.GetDivisions">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.CreateTickStrip">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.UpdateVisual(System.Int32,`0,System.Windows.UIElement@)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.ModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.Mode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.Mode'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RangeMinorDivisionsPresenter`1.Mode">
            <summary>
            Gets or sets the mode used to generate divisions.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.RelativeRect">
            <exclude/>
            <summary>
            A class that behaves the same as <see cref="T:System.Windows.Rect"/> but reverses top and bottom
            such that <see cref="P:NationalInstruments.Controls.Internal.RelativeRect.Top"/> is larger than <see cref="P:NationalInstruments.Controls.Internal.RelativeRect.Bottom"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RelativeRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RelativeRect.Contains(System.Windows.Point)">
            <exclude/><summary>Determines whether the specified point falls within the relative rectangle.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RelativeRect.ContainsX(System.Double)">
            <exclude/><summary>Determines whether the specified horizontal value falls within the relative rectangle.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RelativeRect.ContainsY(System.Double)">
            <exclude/><summary>Determines whether the specified vertical value falls within the relative rectangle.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RelativeRect.Left">
            <exclude/><summary>Gets the left side of the relative rectangle.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RelativeRect.Right">
            <exclude/><summary>Gets the right side of the relative rectangle.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RelativeRect.Bottom">
            <exclude/><summary>Gets the bottom side of the relative rectangle (flipped from Rect).</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RelativeRect.Top">
            <exclude/><summary>Gets the top side of the relative rectangle (flipped from Rect).</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.RemovingItemsList">
            <exclude/>
            <summary>Represents a subset of items in another list that are being removed.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.#ctor(System.Collections.IList)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.SetRange(System.Int32,System.Int32)">
            <summary>
            Sets the range of visible items in the source list.
            </summary>
            <param name="index">The starting index in the source list to reference.</param>
            <param name="count">The number of items in the source list to reference.</param>
            <returns>An object that can be disposed to return the collection to an inaccessible state.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.CopyTo(System.Array,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.CopyTo(System.Object[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.Contains(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.IndexOf(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#Generic#ICollection{System#Object}#Add(System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#Generic#ICollection{System#Object}#Clear">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#Generic#ICollection{System#Object}#Remove(System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#IList#Add(System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#IList#Clear">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#IList#Remove(System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#IList#RemoveAt(System.Int32)">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RemovingItemsList.Count">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RemovingItemsList.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#IList#IsFixedSize">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#ICollection#IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RemovingItemsList.System#Collections#ICollection#SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.RemovingItemsList.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleBaselinePresenter">
            <exclude/>
            <summary>Manages the visual representation for <see cref="P:NationalInstruments.Controls.Primitives.Scale.BaselineStroke"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleBaselinePresenter.IsCompatibleCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleBaselinePresenter.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleBaselinePresenter.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleBaselinePresenter.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleCartesianPanelPresenter">
            <exclude/>
            <summary>Ensures the host child is initialized to a <see cref="T:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleCartesianPanelPresenter.#ctor(System.Windows.DependencyProperty,System.Windows.DependencyProperty)">
            <exclude/>
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.ScaleCartesianPanelPresenter"/> class,
            configuring the <see cref="T:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel"/> panel with the specified attached properties.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleCartesianPanelPresenter.IsCompatibleCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleCartesianPanelPresenter.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleCartesianPanelPresenter.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleCartesianPanelPresenter.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleCartesianPanelPresenter.CreateScalePanel(NationalInstruments.Controls.Primitives.ScaleHost,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Boolean)">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleCartesianPanelPresenter.ClipToBounds">
            <exclude/><summary>Gets or sets a value indicating whether to set <see cref="P:System.Windows.UIElement.ClipToBounds"/> on the generated panel.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleLabelPresenter">
            <exclude/><summary>Manages the visual representation for <see cref="P:NationalInstruments.Controls.Primitives.IScale.Label"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabelPresenter.IsCompatibleCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabelPresenter.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabelPresenter.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleLabelPresenter.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleLabelPresenter.EmptyStringToNullConverter">
            <exclude/><summary>Converts empty string values to <see langword="null"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScaleRadialPanelPresenter">
            <exclude/>
            <summary>Ensures the host child is initialized to a <see cref="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleRadialPanelPresenter.#ctor(System.Windows.DependencyProperty)">
            <exclude/>
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.ScaleRadialPanelPresenter"/> class,
            configuring the <see cref="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel"/> panel with the specified attached properties.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleRadialPanelPresenter.IsCompatibleCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleRadialPanelPresenter.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleRadialPanelPresenter.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleRadialPanelPresenter.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScaleRadialPanelPresenter.CreateScalePanel(NationalInstruments.Controls.Primitives.ScaleHost,System.Windows.DependencyProperty,System.Boolean)">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScaleRadialPanelPresenter.ClipToBounds">
            <exclude/><summary>Gets or sets a value indicating whether to set <see cref="P:System.Windows.UIElement.ClipToBounds"/> on the generated panel.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScopedDictionaryEntry">
            <summary>Represents a dictionary entry that can be set within a <c>using</c> scope.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScopedDictionaryEntry.Add(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object)">
            <exclude/><summary>Adds the specified value to the dictionary.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScopedDictionaryEntry.Dispose">
            <exclude/><summary>Removes the added value from the dictionary.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScopedFlag">
            <summary>
            Represents a boolean flag that can be set within a <c>using</c> scope.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScopedVariable`1">
            <summary>Represents a variable that can be set within a <c>using</c> scope.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScopedVariable`1.#ctor(System.String,`0)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.ScopedVariable`1"/> class.</summary>
            <param name="name">The friendly name of the variable.</param>
            <param name="defaultValue">The default value of the variable.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScopedVariable`1.SetValue(`0)">
            <summary>Sets the value of the variable and returns an object that can be used to reset the variable to its default value.</summary>
            <param name="newValue">The new variable value.</param>
            <returns>An object that can be used to reset the variable to its default value.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScopedVariable`1.TrySetValue(`0)">
            <summary>
            Sets the value of the variable and returns an object that can be used to reset the variable to its default value, if the scoped
            value has not already been set.
            </summary>
            <param name="newValue">The new variable value.</param>
            <returns>
            An object that can be used to reset the variable to its default value, or <see langword="null"/> if the value has already been set.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScopedVariable`1.ToString">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScopedVariable`1.Name">
            <summary>Gets the friendly name of the variable.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScopedVariable`1.DefaultValue">
            <summary>Gets the default value of the variable.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScopedVariable`1.Value">
            <summary>Gets the current value of the variable.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ScopedVariable`1.IsSet">
            <summary>
            Gets a value indicating whether <see cref="P:NationalInstruments.Controls.Internal.ScopedVariable`1.Value"/> has been set to something other than <see cref="P:NationalInstruments.Controls.Internal.ScopedVariable`1.DefaultValue"/>.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ScopedVariable`1.ResetValue">
            <summary>Helper to reset the value of the scoped variable after the caller exits the <see cref="M:NationalInstruments.Controls.Internal.ScopedVariable`1.SetValue(`0)"/> scope.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScopedFlag.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.ScopedFlag"/> class.
            </summary>
            <param name="name">The friendly name of the flag being set.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ScopedFlag.SetFlag">
            <summary>
            Sets the flag and returns an object that can be used to reset the flag.
            </summary>
            <returns>An object that can be used to reset the flag.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ShapeType">
            <exclude/><summary>Identifies the built-in shape type implementations.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ShapeType.UserDefined">
            <exclude/><summary>Indicates a user-defined shape.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ShapeType.Diamond">
            <exclude/><summary>Indicates a Diamond shape.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ShapeType.Ellipse">
            <exclude/><summary>Indicates a Ellipse shape.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ShapeType.InwardTriangle">
            <exclude/><summary>Indicates a InwardTriangle shape.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ShapeType.OutwardTriangle">
            <exclude/><summary>Indicates a OutwardTriangle shape.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ShapeType.Rectangle">
            <exclude/><summary>Indicates a Rectangle shape.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ShapeType.Cross">
            <exclude/><summary>Indicates a Cross shape.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ShapeType.Plus">
            <exclude/><summary>Indicates a Plus shape.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.SingleItemCache`2">
            <summary>
            Caches the construction of a single item from a source object. A new item is only constructed when the source object changes.
            </summary>
            <typeparam name="TSource">The type of the source object used to create the item.</typeparam>
            <typeparam name="TItem">The type of the cached item.</typeparam>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.SingleItemCache`2.#ctor(System.Func{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.SingleItemCache`2"/> class with the specified item creator.
            </summary>
            <param name="createItem">The method to use to create an item from a source object.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.SingleItemCache`2.GetItem(`0)">
            <summary>
            Retrieves the item from the cache.
            </summary>
            <param name="source">The object used to construct the item.</param>
            <returns>The cached item, or a new item if <paramref name="source"/> is different .</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.TextBoxAdorner">
            <summary>
            This class puts a textbox into an adorner layer, centering it on the adorned element.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TextBoxAdorner.#ctor(System.Windows.FrameworkElement,System.Windows.Controls.TextBox)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TextBoxAdorner.GetVisualChild(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TextBoxAdorner.MeasureOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TextBoxAdorner.ArrangeOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.TextBoxAdorner.VisualChildrenCount">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Throttle">
            <summary>Contains methods for throttling how frequently an event handler will receive an event.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Throttle.MouseEvent(System.EventHandler{System.Windows.Input.MouseEventArgs})">
            <summary>Throttles the number of events that a <see cref="T:System.Windows.Input.MouseEventHandler"/> will receive to the screen refresh rate.</summary>
            <param name="eventHandler">The event handler to throttle.</param>
            <returns>An event handler that will call <paramref name="eventHandler"/> at most once per screen frame.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Throttle.Event``1(System.EventHandler{``0})">
            <summary>Throttles the number of events that an event handler will receive to the screen refresh rate.</summary>
            <typeparam name="TEventArgs">The type of event handler args.</typeparam>
            <param name="eventHandler">The event handler to throttle.</param>
            <returns>An event handler that will call <paramref name="eventHandler"/> at most once per screen frame.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Throttle.ToReferenceEvent``1(System.EventHandler{``0},System.Func{System.EventHandler{System.EventArgs},System.IDisposable})">
            <summary>[Advanced] Throttles the number of events that an event handler will receive to an arbitrary reference event.</summary>
            <typeparam name="TEventArgs">The type of event handler args.</typeparam>
            <param name="eventHandler">The event handler to throttle.</param>
            <param name="referenceEvent">The reference event that must occur before <paramref name="eventHandler"/> will be called.</param>
            <returns>An event handler that will call <paramref name="eventHandler"/> at most once per reference event.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Throttle.TimerReferenceEvent">
            <summary>
            This class is meant to associate an event handler with the tick event of a DispatcherTimer to use for throttling the MouseMove event
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Throttle.TimerReferenceEvent.DisposeHelper">
            <summary>
            Helper class to encapsulate the "dispose" behavior for the timer (i.e. calling 'Stop' on the timer)
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.Triple">
            <exclude/>
            <summary>Provides a light-weight mechanism for grouping three values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Triple.Create``3(``0,``1,``2)">
            <exclude/>
            <summary>Creates a new triple with the specified values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Triple`3.#ctor(`0,`1,`2)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.Triple`3"/> struct with the specified item1, item2, and item3.
            </summary>
            <param name="item1">
            The first item.
            </param>
            <param name="item2">
            The second item.
            </param>
            <param name="item3">
            The third item.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Triple`3.Equals(NationalInstruments.Controls.Internal.Triple{`0,`1,`2})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            <see langword='true'/> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword='false'/>.
            </returns>
            <param name='other'>
            An object to compare with this object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Triple`3.op_Equality(NationalInstruments.Controls.Internal.Triple{`0,`1,`2},NationalInstruments.Controls.Internal.Triple{`0,`1,`2})">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Internal.Triple`3"/> objects have the same value.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Internal.Triple`3"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Internal.Triple`3"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Triple`3.op_Inequality(NationalInstruments.Controls.Internal.Triple{`0,`1,`2},NationalInstruments.Controls.Internal.Triple{`0,`1,`2})">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Internal.Triple`3"/> objects have different values.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Internal.Triple`3"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Internal.Triple`3"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Triple`3.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="obj">
            The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.Triple`3.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Triple`3.Item1">
            <summary>
            Gets the first item.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Triple`3.Item2">
            <summary>
            Gets the second item.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.Triple`3.Item3">
            <summary>
            Gets the third item.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.UsesWeakReferencesAttribute">
            <summary>Indicates a class uses weak references to listed to events on an object.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ValuePresenterHelper">
            <exclude/><summary>Contains helper methods for working with value presenters and formatters.</summary>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ValuePresenterHelper.DefaultValueFormatter">
            <exclude/><summary>Gets the default formatter used to display values in a numeric text box.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.GetDefaultPresenter(System.Type)">
            <exclude/><summary>Gets the default presenter for the specified data type.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.GetEditValueFormatter(System.Type)">
            <exclude/><summary>Gets the default formatter for editing values of the specified data type.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ValuePresenterHelper.PreviousValuesProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.ValuePresenterHelper.PreviousValues'/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.ValuePresenterHelper.PreviousValues'/> attached property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.ValuePresenterHelper.DefaultPresenterTypeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Internal.ValuePresenterHelper.DefaultPresenterType'/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Internal.ValuePresenterHelper.DefaultPresenterType'/> attached property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.GetPreviousValues(System.Windows.Controls.TextBlock)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Internal.ValuePresenterHelper.PreviousValues"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Internal.ValuePresenterHelper.PreviousValues"/> property value for the element.
            </returns>
            <remarks>
            Gets the values previously assigned to the visual.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.SetPreviousValues(System.Windows.Controls.TextBlock,NationalInstruments.Controls.Internal.ValuePresenterHelper.PreviousPropertyValues)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Internal.ValuePresenterHelper.PreviousValues"/> attached property to a specified element.
            </summary>
            <remarks>
            Sets the values previously assigned to the visual.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Internal.ValuePresenterHelper.PreviousPropertyValues"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.GetDefaultPresenterType(NationalInstruments.Controls.Primitives.ValuePresenter)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Internal.ValuePresenterHelper.DefaultPresenterType"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Internal.ValuePresenterHelper.DefaultPresenterType"/> property value for the element.
            </returns>
            <remarks>
            Gets gets the type the default presenter was created for, or <see langword="null"/> if it is not a default presenter.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.SetDefaultPresenterType(NationalInstruments.Controls.Primitives.ValuePresenter,System.Type)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Internal.ValuePresenterHelper.DefaultPresenterType"/> attached property to a specified element.
            </summary>
            <remarks>
            Sets gets the type the default presenter was created for, or <see langword="null"/> if it is not a default presenter.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Type"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.Visualize(System.String,System.Windows.UIElement,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.FontFamily,System.Nullable{System.Double},System.Nullable{System.Windows.FontStretch},System.Nullable{System.Windows.FontStyle},System.Nullable{System.Windows.FontWeight},System.Action{System.Windows.Controls.TextBlock,System.String})">
            <exclude/><summary>Implements the <see cref="M:NationalInstruments.Controls.Primitives.ValueFormatter.VisualizeCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)"/> method.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.TryVisualizeWithSourceDataStart``1(NationalInstruments.Controls.Primitives.ValuePresenter,``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <exclude/><summary>If available, Uses the source data start to convert and offset the value before calling Visualize.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.TryFormatWithSourceDataStart``1(NationalInstruments.Controls.Primitives.ValueFormatter,``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <exclude/><summary>If available, Uses the source data start to convert and offset the value before calling Format.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ValuePresenterHelper.TryParseWithSourceDataStart``1(NationalInstruments.Controls.Primitives.ValueFormatter,System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs,``0@)">
            <exclude/><summary>If available, Uses the source data start to convert and offset the value after calling TryParse.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ValuePresenterHelper.PreviousPropertyValues">
            <exclude/><summary>Holds the previous values assigned to a visual, to avoid repeated dependency property assignments.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ValuePresenterHelper.WrapperCache`1">
            <exclude/><summary>Caches type-specific wrapper instances.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ValuePresenterHelper.IOffsetWrapper`1">
            <exclude/><summary>Represents a wrapper that applies the converted offset value to the start value of the source data.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ValuePresenterHelper.OffsetWrapper`4">
            <exclude/><summary>Offset wrapper implementation, which applies the converted offset value to the start value of the source data.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent">
            <exclude/>
            <summary>Contains members for registering weak events.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.BindToSource``1(NationalInstruments.Controls.Internal.IWeakEventListener{``0},``0)">
            <summary>
            Binds a weak event listener to a single source, which will unregister the weak event when disposed.
            </summary>
            <typeparam name="TSource">The type of object raising the event.</typeparam>
            <param name="listener">A weak event listener.</param>
            <param name="source">The object raising the event.</param>
            <returns>An object that can be used to unregister the the weak event listener from the source.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.CreateListener``2(NationalInstruments.Controls.Internal.WeakEvent.IWeakEventManager{``0},System.EventHandler{``1})">
            <exclude/>
            <summary>Creates a weak event listener for the given manager and event handler.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.CreateStaticListener``1(NationalInstruments.Controls.Internal.WeakEvent.IWeakEventManager{System.Object},System.EventHandler{``0},System.Object)">
            <exclude/>
            <summary>Creates a weak event listener for a static event for the given manager and event handler.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.CreateScaleInvalidatedListener(System.EventHandler{System.EventArgs})">
            <summary>
            Adds a weak event listener to the <see cref="E:NationalInstruments.Controls.Primitives.IScale.Invalidated"/> event.
            </summary>
            <param name="handler">The handler called when the event is raised.</param>
            <returns>
            An object representing the weak event registration, which can be used to register and unregister the event.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.CreateDataMapperChangedListener(System.EventHandler{NationalInstruments.Controls.Data.DataMapperChangedEventArgs})">
            <summary>
            Adds a weak event listener to the <see cref="E:NationalInstruments.Controls.Data.IDataMapper.DataMapperChanged"/> event.
            </summary>
            <param name="handler">The handler called when the event is raised.</param>
            <returns>
            An object representing the weak event registration, which can be used to register and unregister the event.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.CreateCollectionChangedListener(System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
            <summary>
            Adds a weak event listener to the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> event.
            </summary>
            <param name="handler">The handler called when the event is raised.</param>
            <returns>
            An object representing the weak event registration, which can be used to register and unregister the event.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.CreateCollectionChangingListener(System.EventHandler{NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs})">
            <summary>
            Adds a weak event listener to the <see cref="E:NationalInstruments.Controls.Primitives.INotifyCollectionChanging.CollectionChanging"/> event.
            </summary>
            <param name="handler">The handler called when the event is raised.</param>
            <returns>
            An object representing the weak event registration, which can be used to register and unregister the event.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.CreateDispatcherTimerTickListener(System.EventHandler{System.EventArgs})">
            <summary>
            Adds a weak event listener to the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick"/> event.
            </summary>
            <param name="handler">The handler called when the event is raised.</param>
            <returns>
            An object representing the weak event registration, which can be used to register and unregister the event.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.CreateCompositionTargetRenderingListener(System.EventHandler{System.EventArgs})">
            <summary>
            Adds a weak event listener to the <see cref="E:System.Windows.Media.CompositionTarget.Rendering"/> event.
            </summary>
            <param name="handler">The handler called when the event is raised.</param>
            <returns>
            An object representing the weak event registration, which can be used to unregister the event.
            </returns>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent.IWeakEventManager`1">
            <summary>Represents a nested <see cref="T:System.Windows.WeakEventManager"/> implementation.</summary>
            <typeparam name="TSource">The type of the object raising the event.</typeparam>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.IWeakEventManager`1.AddListener(`0,System.Windows.IWeakEventListener)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.WeakEvent.IWeakEventManager`1.RemoveListener(`0,System.Windows.IWeakEventListener)">
            <exclude/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent.WeakEventListener`2">
            <summary>Represents a weak event registration.</summary>
            <remarks>Forwards the weak events to the target listener, and provides a method to unregister the weak event.</remarks>
            <typeparam name="TSource">The type of the object raising the event.</typeparam>
            <typeparam name="TEventArgs">The type of the event args.</typeparam>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent.BoundWeakEventListener`1">
            <summary>Wraps a weak event listener for a static event.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent.ScaleInvalidatedEventManager">
            <summary>Weak event manager for the <see cref="E:NationalInstruments.Controls.Primitives.IScale.Invalidated"/> event.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent.DataMapperChangedEventManager">
            <summary>Weak event manager for the <see cref="E:NationalInstruments.Controls.Data.IDataMapper.DataMapperChanged"/> event.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent.CollectionChangedEventManager">
            <summary>Weak event manager for the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> event.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent.CollectionChangingEventManager">
            <summary>Weak event manager for the <see cref="E:NationalInstruments.Controls.Primitives.INotifyCollectionChanging.CollectionChanging"/> event.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent.DispatcherTimerTickEventManager">
            <summary>Weak event manager for the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick"/> event.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.WeakEvent.CompositionTargetRenderingEventManager">
            <summary>Weak event manager for the <see cref="E:System.Windows.Media.CompositionTarget.Rendering"/> event.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.Internal.CachedFrameworkElement.AttachedData">
            <summary>
            Data associated with the element
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache">
            <exclude/>
            <summary>
            Represents a cache of <see cref="T:System.Windows.FrameworkElement"/>.
            Cached elements should never be placed inside a visual tree.
            </summary>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache.#ctor(System.Int32)">
            <summary>
            Initializes the <see cref="T:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache"/> with the given parameters.
            </summary>
            <param name="capacity">The maximum number of elements that the cache can hold.</param>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache.GetElement(NationalInstruments.Controls.Primitives.Tables.IVisualLoader,System.Boolean@)">
            <summary>
            Uses the <see cref="P:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.TemplateKey"/> to identify a element in the cache.
            If a matching element is found in the cache, it is passed to <see cref="M:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.LoadFrameworkElement(System.Windows.FrameworkElement)"/> (if no matching element is found, null is passed).
            If <see cref="M:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.LoadFrameworkElement(System.Windows.FrameworkElement)"/> created a new element, it is added to the cache.
            Old elements are removed from the cache to keep <see cref="P:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache.CurrentCount"/> below the capacity.
            </summary>
            <param name="visualLoader">Used to load visuals.  Loaded visuals are stored in the cache.</param>
            <param name="cacheHit">Will be set to true iff the visual loader created a new element.</param>
            <returns>The <see cref="T:System.Windows.FrameworkElement"/> from the <see cref="M:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.LoadFrameworkElement(System.Windows.FrameworkElement)"/> call.</returns>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache.GetElement(NationalInstruments.Controls.Primitives.Tables.IVisualLoader,System.Object@,System.Boolean@)">
            <summary>
            Uses the <see cref="P:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.TemplateKey"/> to identify a element in the cache.
            If a matching element is found in the cache, it is passed to <see cref="M:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.LoadFrameworkElement(System.Windows.FrameworkElement)"/> (if no matching element is found, null is passed).
            If <see cref="M:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.LoadFrameworkElement(System.Windows.FrameworkElement)"/> created a new element, it is added to the cache.
            Old elements are removed from the cache to keep <see cref="P:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache.CurrentCount"/> below the capacity.
            </summary>
            <param name="visualLoader">Used to load visuals.  Loaded visuals are stored in the cache.</param>
            <param name="attachedData">Data that has been accociated with the cached element.</param>
            <param name="cacheHit">Will be set to true iff the visual loader created a new element.</param>
            <returns>The <see cref="T:System.Windows.FrameworkElement"/> from the <see cref="M:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.LoadFrameworkElement(System.Windows.FrameworkElement)"/> call.</returns>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache.AttachData(NationalInstruments.Controls.Primitives.Tables.IVisualLoader,System.Object,System.Boolean@)">
            <summary>
            Associates arbitrary data with an element in the cache, identified by the <see cref="P:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.TemplateKey"/>.
            This attached data can be retrieved along with the cached element using GetElement.
            If no element is found in the cache, one is created.
            </summary>
            <param name="visualLoader">Used to load visuals.  Loaded visuals are stored in the cache.</param>
            <param name="data">Data to attach to an element in the cache.</param>
            <param name="cacheHit">Will be set to true iff the visual loader created a new element.</param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache.CurrentCount">
            <summary>Gets the number of elements currently in the cache.</summary>
            <value>The number of elements currently in the cache.</value>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.FrameworkElementCache.VisualTreePanel">
            <summary>Gets or sets <see cref="T:System.Windows.Controls.Panel"/> that will contain <see cref="T:System.Windows.FrameworkElement"/> objects created by the cache.</summary><value>A <see cref="T:System.Windows.Controls.Panel"/> that will contain <see cref="T:System.Windows.FrameworkElement"/> objects created by the cache.</value><remarks>
Set this to be a panel in the visual tree, and the buffered controls will also be in the visual tree (without effecting arrange/measure).
This can be useful for things such as having the controls obtain styles.
</remarks><lastupdated>09 Nov 2012 3:21:48 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer">
            <exclude/>
            <summary>
            Represents <see cref="T:System.Windows.FrameworkElement"/> rendering and caching system. Rendered controls are obtain via image data.
            </summary>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes the <see cref="T:NationalInstruments.Controls.Primitives.Tables.ImageCache"/> with the given parameters.
            </summary>
            <param name="elementCacheCapacity">How many unique elements the virtualizer will store for re-use.</param>
            <param name="imageCacheCapacity">How much image data (in pixels) the virtualizer will remember.</param>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.GetImage(NationalInstruments.Controls.Primitives.Tables.IVisualLoader,System.Int32,System.Int32,System.Windows.Controls.Panel,System.Boolean)">
            <summary>
            Renders an array of pixel image data of length elementWidth * elementHeight, or null if there were problems making the image.
            Arrays of pixel data and controls created from the visualLoader are re-used where possible.
            </summary>
            <param name="visualLoader">Used to create a visual that will be rendered to the image.</param>
            <param name="elementWidthInPixels">The Width that will be set on the created visual before rendering.</param>
            <param name="elementHeightInPixels">The height that will be set on the created visual before rendering.</param>
            <param name="visualTreePanel">
            A panel that is in the visual tree.  Loaded FrameworkElements will be placed in the Children of this panel (and collapsed) in order to provide styles as they are rendered.
            </param>
            <param name="forceSize">A value indicating whether the width and height of the visualized element should be set explicitly.</param>
            <returns>An array for storing pixel image data.</returns>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.GetImage(NationalInstruments.Controls.Primitives.Tables.IVisualLoader,System.Int32,System.Int32,System.Windows.Controls.Panel,System.Boolean,System.Boolean@)">
            <summary>
            Renders an array of pixel image data of length elementWidth * elementHeight, or null if there were problems making the image.
            Arrays of pixel data and controls created from the visualLoader are re-used where possible.
            </summary>
            <param name="visualLoader">Used to create a visual that will be rendered to the image.</param>
            <param name="elementWidthInPixels">The Width that will be set on the created visual before rendering.</param>
            <param name="elementHeightInPixels">The height that will be set on the created visual before rendering.</param>
            <param name="visualTreePanel">
            A panel that is in the visual tree.  Loaded FrameworkElements will be placed in the Children of this panel (and collapsed) in order to provide styles as they are rendered.
            </param>
            <param name="forceSize">A value indicating whether the width and height of the visualized element should be set explicitly.</param>
            <param name="isCacheHit">A value indicating whether or not the image data came from the cache.</param>
            <returns>An array for storing pixel image data.</returns>
            <lastupdated>10/10/2014 4:09:56 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.GradualGetImage(NationalInstruments.Controls.Primitives.Tables.IVisualLoader,System.Int32,System.Int32,System.Windows.Controls.Panel,System.Boolean)">
            <summary>
            Use this method when visualLoader could produce a TabularView in its visual tree.
            This is done so an image can be progressively built up, instead of all at once (getting an image of a TabularView could take a while).
            The last element of the enumerable will be the image data; all other elements will be null.
            </summary>
            <param name="visualLoader">Used to create a visual that will be rendered to the image.</param>
            <param name="elementWidthInPixels">The Width that will be set on the created visual before rendering.</param>
            <param name="elementHeightInPixels">The height that will be set on the created visual before rendering.</param>
            <param name="visualTreePanel">
            A panel that is in the visual tree.  Loaded FrameworkElements will be placed in the Children of this panel (and collapsed) in order to provide styles as they are rendered.
            </param>
            <param name="forceSize">A value indicating whether the width and height of the visualized element should be set explicitly.</param>
            <returns>An int[] of image data as the last element in the enumerable; null for all previous elements.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.GradualGetImageCore(NationalInstruments.Controls.Primitives.Tables.IVisualLoader,System.Int32,System.Int32,System.Windows.Controls.Panel,System.Boolean)">
            <summary>
            Use this method when visualLoader could produce a TabularView in its visual tree.
            This is done so an image can be progressively built up, instead of all at once (getting an image of a TabularView could take a while).
            The last element of the enumerable will be the image data; all other elements will be null.
            </summary>
            <param name="visualLoader">Used to create a visual that will be rendered to the image.</param>
            <param name="elementWidthInPixels">The Width that will be set on the created visual before rendering.</param>
            <param name="elementHeightInPixels">The height that will be set on the created visual before rendering.</param>
            <param name="visualTreePanel">
            A panel that is in the visual tree.  Loaded FrameworkElements will be placed in the Children of this panel (and collapsed) in order to provide styles as they are rendered.
            </param>
            <param name="forceSize">A value indicating whether the width and height of the visualized element should be set explicitly.</param>
            <returns>
            An Pair{int[], bool} of image data as the last element in the enumerable; null for all previous elements.
            The boolean represents whether or not the image data came from the cache.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.RenderVisual(NationalInstruments.Controls.Primitives.Tables.IVisualLoader,System.Double,System.Double,System.Double,System.Double,NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget,System.Windows.Controls.Panel)">
            <summary>
            Renders the provided visual to the render target.  An integer is yielded to indicate that more work is required.
            This can happen when the visual has a TabularView in its visual tree.
            </summary>
            <param name="template">Used to load a visual to render.</param>
            <param name="x">The x location to render the visual on the render target.</param>
            <param name="y">The y location to render the visual on the render target.</param>
            <param name="width">The logical width to set on the loaded visual.</param>
            <param name="height">The logical height to set on the loaded visual.</param>
            <param name="renderTarget">The target to render the visual to.</param>
            <param name="visualTreePanel">
            A panel that is in the visual tree.  Loaded FrameworkElements will be placed in the Children of this panel (and collapsed) in order to provide styles as they are rendered.
            </param>
            <returns>An enumerable for each bit of more rendering work required</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.GetDesiredSize(NationalInstruments.Controls.Primitives.Tables.IVisualLoader)">
            <summary>
            Caches and measures the element generated by a visual loader.
            </summary>
            <param name="visualLoader">Used to create a visual that will be cached and measured.</param>
            <returns>The desired size of the element created by <paramref name="visualLoader"/>.</returns>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.GetDpiScaleX">
            <summary>
            The x factor from device independent coordinates to pixel coordinates.
            </summary>
            <returns>(system dpiX) / 96</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.GetDpiScaleY">
            <summary>
            The y factor from device independent coordinates to pixel coordinates.
            </summary>
            <returns>(system dpiY) / 96</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.ConvertToPixelWidth(System.Double)">
            <summary>
            Converts logical coordinates to pixel coordinates using the current DPI settings of the window.
            </summary>
            <param name="logicalWidth">The logical width of a visual.</param>
            <returns>The number of pixels needed to support the logical width with the current DPI settings.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.ConvertToPixelHeight(System.Double)">
            <summary>
            Converts logical coordinates to pixel coordinates using the current DPI settings of the window.
            </summary>
            <param name="logicalHeight">The logical height of a visual.</param>
            <returns>The number of pixels needed to support the logical height with the current DPI settings.</returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.FrameworkElementVirtualizer.ImageCacheCapacityInPixels">
            <summary>
            The maximum amount of data the image cache will hold (in pixels).
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Tables.ImageCache">
            <exclude/>
            <summary>
            Represents a cache of image data.
            </summary>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ImageCache.#ctor(System.Int32)">
            <summary>
            Initializes the <see cref="T:NationalInstruments.Controls.Primitives.Tables.ImageCache"/> with the given parameters.
            </summary>
            <param name="capacity">
            How many pixels of image data that the cache will store.
            Images in the cache will be replaced to keep the memory used by the cache below this number.
            </param>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ImageCache.GetImage(System.Object,System.Int32,System.Int32,System.Int32[]@)">
            <summary>
            Uses the given key, along with the given width and height to identify an image in the cache.
            If no image with this identifier is found, one is created.
            </summary>
            <param name="key">The 'Equals' and 'GetHashCode' methods of the key are used (along with the image width and height) to identify an image in the cache.</param>
            <param name="imageWidth">The width of the requested image in pixels</param>
            <param name="imageHeight">The height of the requested image in pixels</param>
            <param name="imageData">An array of pixel data, of length imageWidth * imageHeight</param>
            <returns><see langword="true"/> if the image was already in the cache; otherwise, <see langword="false"/> if it had to be created.</returns>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.ImageCache.CurrentSize">
            <summary>
            Gets how much space the cache is taking up.
            </summary>
            <value>How much space the cache is taking up, in pixels.</value>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.ImageCache.CacheCapacityInPixels">
            <summary>
            The maximum amount of data the cache will hold (in pixels).
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget">
            <exclude/>
            <summary>
            Represents a target for basic rendering operations.
            </summary>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.BeginDraw">
            <summary>
            Called before any drawing operations.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Cannot be called if drawing has already begun, and hasn't ended yet.
            </exception>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.EndDraw">
            <summary>
            Called when drawing is complete.  Flushes all draw calls to the render target.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Cannot be called if BeginDraw hasn't been called.
            </exception>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.Clear">
            <summary>
            Clears the render target and sets all pixels to transparent black.
            </summary>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.DrawLine(System.Windows.Point,System.Windows.Point,System.Windows.Media.Pen)">
            <summary>
            Draws a line between the specified points using the <see cref="T:System.Windows.Media.Pen"/>.
            </summary>
            <param name="point0">The start point of the line.</param>
            <param name="point1">The end point of the line.</param>
            <param name="pen">The pen with which to stroke the line.</param>
            <exception cref="T:System.InvalidOperationException">
            Can only be called between BeginDraw and EndDraw calls.
            </exception>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.DrawRect(System.Windows.Rect,System.Windows.Media.Pen,System.Windows.Media.Brush)">
            <summary>
            Draws a rectangle with the specified <see cref="T:System.Windows.Media.Brush"/> and <see cref="T:System.Windows.Media.Pen"/>.
            The pen and the brush can be null.
            </summary>
            <param name="rect">The rectangle to draw</param>
            <param name="pen">The pen with which to stroke the rectangle. This is optional, and can be null. If the pen is null, no stroke is drawn.</param>
            <param name="brush">The brush with which to fill the rectangle. This is optional, and can be null. If the brush is null, no fill is drawn.</param>
            <exception cref="T:System.InvalidOperationException">
            Can only be called between BeginDraw and EndDraw calls.
            </exception>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.DrawImage(System.Array,System.Windows.Point,System.Int32,System.Int32)">
            <summary>
            Draws an image with the top left corner the specified position.
            Overlapping images are not guaranteed to preserve transparency.
            </summary>
            <param name="imageData">The array of image pixel data to be drawn.</param>
            <param name="screenPosition">The destination of the top left corner of the image.</param>
            <param name="imageWidth">The width of the provided image.</param>
            <param name="imageHeight">The height of the provided image.</param>
            <exception cref="T:System.InvalidOperationException">
            Can only be called between BeginDraw and EndDraw calls.
            </exception>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
            <summary>
            Copies the bitmap pixel data within the specified rectangle into an array
            of pixels that has the specified stride starting at the specified offset.
            </summary>
            <param name="sourceRect">The source rectangle to copy. An <see cref="P:System.Windows.Int32Rect.Empty"/> value specifies the entire bitmap.</param>
            <param name="pixels">The destination array.</param>
            <param name="stride">The stride of the bitmap.</param>
            <param name="offset">The pixel location where copying begins.</param>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.DrawVisual(System.Windows.Media.Visual)">
            <summary>
            Renders the <see cref="T:System.Windows.Media.Visual"/> object.
            </summary>
            <param name="visual">The visual to be rendered.</param>
            <exception cref="T:System.InvalidOperationException">
            Can only be called between BeginDraw and EndDraw calls.
            </exception>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.DrawStarted">
            <summary>
            True if we are in between a BeginDraw and EndDraw.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.Width">
            <summary>
            Gets the width of the render target in device-independent units (1/96th inch per unit).
            </summary>
            <value>
            A <see cref="T:System.Double"/> that specifies the width of the render target.
            </value>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.Height">
            <summary>
            Gets the height of the render target in device-independent units (1/96th inch per unit).
            </summary>
            <value>
            A <see cref="T:System.Double"/> that specifies the height of the render target.
            </value>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Tables.IVisualLoader">
            <exclude/>
            <summary>
            Represents an object that can create visuals.
            </summary>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.LoadFrameworkElement(System.Windows.FrameworkElement)">
            <summary>
            Creates a new <see cref="T:System.Windows.FrameworkElement"/> if the provided element is <see langword="null"/>.
            Sets properties on the returned element; properties that are unique to 'this' instance are identified by the ValueKey, while the returned element and properties
            set on the element that are the same over all instances of implementing class are identified by the TemplateKey.
            </summary>
            <param name="existingElement">A <see cref="T:System.Windows.FrameworkElement"/> to reuse. Can be <see langword="null"/>.</param>
            <returns>A <see cref="T:System.Windows.FrameworkElement"/> initialized according to <see cref="P:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.ValueKey"/> and <see cref="P:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.TemplateKey"/>.</returns>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.ValueKey">
            <summary>
            Gets the key that will be used to identify the value of the visual loader.
            </summary>
            <value>
            And object used as the key in a dictionary.
            This should identify any visual properties that are changed on the loaded framework element, that may differ between instances of the implementer.
            </value>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.IVisualLoader.TemplateKey">
            <summary>
            Gets the key that will be used to identify the template of the visual loader.
            </summary>
            <value>
            And object used as the key in a dictionary.
            This should identify the loaded framework element in its default state, before and visual properties are changed that may differ between instances of the implementer.
            </value>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper">
            <exclude/>
            <summary>
            Provides a windows implementation of <see cref="T:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget"/> by wrapping a <see cref="T:System.Windows.Media.Imaging.RenderTargetBitmap"/>.
            </summary>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.#ctor(System.Windows.Media.Imaging.RenderTargetBitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper"/> class that uses the specified bitmap to perform drawing to.
            </summary>
            <param name="bitmap">The <see cref="T:System.Windows.Media.Imaging.RenderTargetBitmap"/> that will be wrapped.</param>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper"/> class that uses the specified width and height.
            </summary>
            <param name="logicalWidth">The width of the <see cref="T:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper"/></param>
            <param name="logicalHeight">The height of the <see cref="T:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper"/></param>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.BeginDraw">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.BeginDraw"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.EndDraw">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.EndDraw"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.DrawLine(System.Windows.Point,System.Windows.Point,System.Windows.Media.Pen)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.DrawLine(System.Windows.Point,System.Windows.Point,System.Windows.Media.Pen)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.DrawRect(System.Windows.Rect,System.Windows.Media.Pen,System.Windows.Media.Brush)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.DrawRect(System.Windows.Rect,System.Windows.Media.Pen,System.Windows.Media.Brush)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.DrawVisual(System.Windows.Media.Visual)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.DrawVisual(System.Windows.Media.Visual)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.DrawImage(System.Array,System.Windows.Point,System.Int32,System.Int32)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.DrawImage(System.Array,System.Windows.Point,System.Int32,System.Int32)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.Clear">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.Clear"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.GetImageSource">
            <summary>
            Gets the underlying render target as an <see cref="T:System.Windows.Media.ImageSource"/>.
            Visual changes such as draw calls that are made to this <see cref="T:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper"/> will also appear on the <see cref="T:System.Windows.Media.ImageSource"/>.
            </summary>
            <returns>The underlying render target as an <see cref="T:System.Windows.Media.ImageSource"/>.</returns>
            <lastupdated>11/2/2012 9:40:00 AM</lastupdated>
            <updatedby>Kevin</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.Width">
            <inheritdoc cref="P:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.Width"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.Height">
            <inheritdoc cref="P:NationalInstruments.Controls.Primitives.Tables.ITabularRenderTarget.Height"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.PixelWidth">
            <summary>
            Gets the width of the bitmap in pixels.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.PixelHeight">
            <summary>
            Gets the height of the bitmap in pixels.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Tables.RenderTargetBitmapWrapper.DrawStarted">
            <inheritdoc />
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.AspectRatioContainer">
            <summary>
            A container that draws its contained element with a specific width-divided-by-height ratio.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.AspectRatioContainer.MeasureOverride(System.Windows.Size)">
            <inheritdoc/>
            <lastupdated>11/16/2011 4:02:38 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.AspectRatioContainer.ArrangeOverride(System.Windows.Size)">
            <inheritdoc/>
            <lastupdated>11/16/2011 4:02:33 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.AspectRatioContainer.AspectRatioProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.AspectRatioContainer.AspectRatio'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.AspectRatioContainer.AspectRatio'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.AspectRatioContainer.RelativePaddingProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.AspectRatioContainer.RelativePadding'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.AspectRatioContainer.RelativePadding'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.AspectRatioContainer.AspectRatio">
            <exclude/><summary>Gets or sets the aspect ratio for the container.</summary><value>The aspect ratio for the container.</value><lastupdated>6/1/2012 10:26:07 AM</lastupdated><updatedby>Meyer</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.AspectRatioContainer.RelativePadding">
            <exclude/><summary>Gets or sets the amount of padding to apply around the children of the container.</summary><value>The amount of padding to apply around the children of the container, relative to the size of the container.</value><lastupdated>6/1/2012 10:26:07 AM</lastupdated><updatedby>Meyer</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Baseline">
            <exclude/><summary>Renders baseline for a scale.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Drawable">
            <exclude/><summary>Base class for drawn elements.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Drawable.OnRenderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <exclude/><summary>Property change handler to invalidate visual.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Drawable.OnMeasurePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <exclude/><summary>Property change handler to invalidate measure.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Drawable.OnVisualParentChanged(System.Windows.DependencyObject)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Baseline.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.Baseline"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Baseline.MeasureOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Baseline.OnRender(System.Windows.Media.DrawingContext)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Baseline.CreateArc(System.Windows.Rect,System.Double,System.Double)">
            <summary>Create an Arc geometry of an ellipse or circle</summary>
            <param name="rect">Box to hold the whole ellipse described by the arc</param>
            <param name="startDegrees">Start angle of the arc degrees within the ellipse. 0 degrees is a line to the right.</param>
            <param name="sweepDegrees">Sweep angle, +ve = Counterclockwise, -ve = Clockwise</param>
            <returns>Geometry object</returns>
            <see href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/ea83436b-e6d8-4014-8c9c-1e5e241c6f53/drawarc-an-extension-method-to-drawingcontext?forum=wpf"/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Baseline.StrokeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.Stroke'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.Stroke'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Baseline.StrokeThicknessProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.StrokeThickness'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.StrokeThickness'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Baseline.StrokeEndLineCapProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.StrokeEndLineCap'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.StrokeEndLineCap'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Baseline.StrokeStartLineCapProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.StrokeStartLineCap'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.StrokeStartLineCap'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Baseline.RelativeOffsetProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.RelativeOffset'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.RelativeOffset'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Baseline.RelativeLengthProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.RelativeLength'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.RelativeLength'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Baseline.ArcSweepProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.ArcSweep'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.ArcSweep'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Baseline.LayoutInfoProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.LayoutInfo'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Baseline.LayoutInfo'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Baseline.Stroke">
            <summary>Gets or sets the brush used to render the baseline.</summary><value>The brush used to render the baseline. The default value is <see langword="null"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Baseline.StrokeThickness">
            <summary>Gets or sets the size of rendered baseline.</summary><value>The size of rendered baseline. The default value is <see langword="null"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Baseline.StrokeEndLineCap">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/Baseline.xml" path="/doc/member[@name=&quot;StrokeEndLineCap&quot;]/*"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Baseline.StrokeStartLineCap">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/Baseline.xml" path="/doc/member[@name=&quot;StrokeStartLineCap&quot;]/*"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Baseline.RelativeOffset">
            <summary>Gets or sets the relative offset of the baseline.</summary><value>The relative offset of the baseline. The default value is 0.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Baseline.RelativeLength">
            <summary>Gets or sets the relative length of the baseline.</summary><value>The relative length of the baseline. The default value is 1.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Baseline.ArcSweep">
            <summary>
            Gets or sets the arc sweep of the host panel.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Baseline.LayoutInfo">
            <summary>
            Gets or sets the layout info of the host panel.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.CartesianEdge">
            <summary>
            Defines the different locations where a child element can be placed in a <see cref="T:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel"/>.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CartesianEdge.None">
            <summary>Indicates the child element is placed in the center area of the host panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CartesianEdge.HorizontalNear">
            <summary>Indicates the child element is stacked along the near horizontal edge of the host panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CartesianEdge.HorizontalFar">
            <summary>Indicates the child element is stacked along the far horizontal edge of the host panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CartesianEdge.VerticalNear">
            <summary>Indicates the child element is stacked along the near vertical edge of the host panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CartesianEdge.VerticalFar">
            <summary>Indicates the child element is stacked along the far vertical edge of the host panel.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer">
            <exclude/>
            <summary>
            Synchronizes the contents of a source <see cref="T:System.ComponentModel.ICollectionView"/> with a target <see cref="T:System.Collections.IList"/>.
            </summary>
            <remarks>
            This class can be used to flatten the contents of several separate collections (contained in <see cref="T:System.Windows.Data.CollectionContainer"/> items 
            in the <see cref="P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceCollection"/>), and in effect assign it to a target collection. The <see cref="P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceCollection"/> can either 
            be assigned directly, or a <see cref="P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceFactory"/> can be used to generate the <see cref="T:System.ComponentModel.ICollectionView"/>.
            <para>
            Synchronization is one-way, from the source <see cref="T:System.ComponentModel.ICollectionView"/> to the target <see cref="T:System.Collections.IList"/>.
            Changes to a target collection that are not performed by the owning <see cref="T:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer"/> will result in undefined behavior.
            </para>
            </remarks>
            <seealso cref="T:System.ComponentModel.ICollectionView"/>
            <seealso cref="T:System.ComponentModel.ICollectionViewFactory"/>
            <lastupdated>5/4/2012 8:52:36 AM</lastupdated>
            <updatedby>LabVIEW</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer"/> class.</summary>
            <lastupdated>3/18/2015 5:58:49 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceFactoryProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceFactory'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceFactory'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceCollectionProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceCollection'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceCollection'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.TargetCollectionProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.TargetCollection'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.TargetCollection'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.ItemConverterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.ItemConverter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.ItemConverter'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceFactory">
            <exclude/><summary>Gets or sets the source for the collection of items to synchronize.</summary><value>The source for the collection of items to synchronize. The default value is default(ICollectionViewFactory).</value><lastupdated>6/1/2012 10:26:07 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceCollection">
            <exclude/><summary>Gets or sets the collection of items to synchronize.</summary><value>The collection of items to synchronize. The default value is default(ICollectionView).</value><lastupdated>6/1/2012 10:26:00 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.TargetCollection">
            <exclude/><summary>Gets or sets the destination for items in the source collection.</summary><value>The destination for items in the source collection. The default value is default(IList).</value><lastupdated>6/1/2012 10:27:16 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.ItemConverter">
            <exclude/><summary>Gets or sets a conversion function to apply to each element before it is passed to the target.</summary><value>A conversion function to apply to each element before it is passed to the target. The default value is default(Func{object, object}).</value><lastupdated>6/1/2012 10:25:55 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.CollectionViewSynchronizer.SourceViewListener">
            <summary>
            Gets or sets a weak event listener for the CollectionChanged event.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor">
            <summary>
            Contains operations for working with the components of continuous numeric types.
            </summary>
            <threadsafety safety="safe"/>
            <lastupdated>2014-04-15 3:15:55 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.TryDecomposeContinuousValue``1(``0,System.Boolean@,System.Numerics.BigInteger@,NationalInstruments.Controls.RadixBase@,System.Int32@,System.Boolean@)">
            <summary>
            Decomposes a continuous value of the form <c>(isNegative ? -1 : +1) * significand * radixBase^exponent</c> into its component elements.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="value">The value to decompose.</param>
            <param name="isNegative">When the method returns <see langword="true"/>, the sign of <paramref name="value"/>.</param>
            <param name="significand">When the method returns <see langword="true"/>, the significand (significand) of <paramref name="value"/>.</param>
            <param name="radixBase">When the method returns <see langword="true"/>, the base of <paramref name="value"/>.</param>
            <param name="exponent">When the method returns <see langword="true"/>, the exponent of <paramref name="value"/>.</param>
            <param name="isBoundaryValue">
            When the method returns <see langword="true"/>, indicates whether <paramref name="value"/> is on a boundary
            between values that can be represented with higher and lower precision by the <typeparamref name="TData"/> data type.
            </param>
            <returns>
            <see langword="true"/> if <paramref name="value"/> could be decomposed into sign, <paramref name="significand"/>, and <paramref name="exponent"/> components.
            </returns>
            <threadsafety safety="safe"/>
            <lastupdated>2014-04-15 3:15:55 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.GetComposeParameterRequirements``1(NationalInstruments.Controls.RadixBase@,System.Int32@)">
            <summary>Gets information on the parameters required to call <see cref="M:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.TryComposeContinuousValue``1(System.Boolean,System.Numerics.BigInteger,NationalInstruments.Controls.RadixBase,System.Int32,``0@)"/>.</summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="radixBase">The base required to call <see cref="M:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.TryComposeContinuousValue``1(System.Boolean,System.Numerics.BigInteger,NationalInstruments.Controls.RadixBase,System.Int32,``0@)"/>.</param>
            <param name="minimumSignificandAccuracy">The minimum number of <paramref name="radixBase"/> digits in the significand argument to <see cref="M:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.TryComposeContinuousValue``1(System.Boolean,System.Numerics.BigInteger,NationalInstruments.Controls.RadixBase,System.Int32,``0@)"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.TryComposeContinuousValue``1(System.Boolean,System.Numerics.BigInteger,NationalInstruments.Controls.RadixBase,System.Int32,``0@)">
            <summary>
            Composes a continuous value of the form <c>(isNegative ? -1 : +1) * significand * radixBase^exponent</c> from its component elements.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="isNegative">The sign of <paramref name="value"/>.</param>
            <param name="significand">The significand (significand) of <paramref name="value"/>.</param>
            <param name="radixBase">The base of <paramref name="value"/>.</param>
            <param name="exponent">The exponent of <paramref name="value"/>.</param>
            <param name="value">When the method returns <see langword="true"/>, the composed value.</param>
            <returns>
            A value indicating whether <paramref name="value"/> could be composed from sign, <paramref name="significand"/>, and <paramref name="exponent"/> components.
            </returns>
            <threadsafety safety="safe"/>
            <lastupdated>2014-07-07 2:51:04 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.ToString">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.Default">
            <summary>Gets the default compositor for continuous system types.</summary>
            <value>The default compositor.</value>
            <threadsafety safety="safe"/>
            <lastupdated>2014-04-15 3:15:55 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ControlCommands">
            <summary>
            Contains the commands used by value controls.
            </summary>
            <remarks>
            The commands are exposed from <see cref="T:NationalInstruments.Controls.Primitives.ControlCommands"/> instead of
            the target control in order to allow access outside of a strongly-typed scope, such as in a control template.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>4/17/2012 5:24:19 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ControlCommands.KeyboardInteractionIdentifier">
            <summary>
            The command parameter used to identify commands that should be treated as keyboard interactions, such as those raised through key bindings.
            </summary>
            <lastupdated>4/17/2012 5:24:52 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ControlCommands.OpenPopupRoutedCommand">
            <exclude/><summary>Used by time stamp controls for popup keyboard shortcut.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ControlCommands.AllNumericControlCommands">
            <exclude/><summary>Gets a collection containing all of the base commands exposed by numeric controls.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ControlCommands.DefaultIncrementGesture">
            <exclude/><summary>Gets the default keyboard gesture used for the increment command.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ControlCommands.DefaultDecrementGesture">
            <exclude/><summary>Gets the default keyboard gesture used for the decrement command.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ControlCommands.DefaultOpenPopupGesture">
            <exclude/><summary>Gets the default keyboard gesture used for the open popup command.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ControlCommands.IncrementCommand">
            <summary>
            Gets a command that increases the value of the target control.
            </summary>
            <value>
            The increment routed command.
            </value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ControlCommands.DecrementCommand">
            <summary>
            Gets a command that decreases the value of the target control.
            </summary>
            <value>
            The decrement routed command.
            </value>
            <lastupdated>6/8/2012 2:55:55 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ControlConfiguration">
            <summary>
            Contains advanced configuration options for controls and control parts.
            </summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>2014-08-01 4:22:30 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ControlConfiguration.UseSeparateVisuals(NationalInstruments.Controls.ScaleDivisions,System.Windows.Media.Brush)">
            <summary>
            Gets a value indicating whether the visuals for a scale divisions object should be generated as separate elements.
            </summary>
            <param name="divisions">The divisions to test.</param>
            <param name="visualBrush">The brush on <paramref name="divisions"/> used to display the tick or label elements.</param>
            <returns>
            The value of <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferRenderedVisuals" />,
            if it has been set on <paramref name="divisions"/>, or a value indicating whether <paramref name="visualBrush"/> can
            be used to render visuals as if they were individual UI elements.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ControlConfiguration.TryGetSourceDataStart(NationalInstruments.Controls.Primitives.ValuePresenter,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Object@)">
            <summary>
            Gets the start of the source data, if it is available and the presenter and context are configured to provide the value.
            </summary>
            <param name="presenter">The presenter used to visualize a data value.</param>
            <param name="args">The arguments used to visualize a data value.</param>
            <param name="sourceDataStart">
            When this method returns, contains the start of the source data reported by <paramref name="args"/>,
            or <see langword="null"/> if the current data type should be used.
            </param>
            <returns><see langword="true"/> if <paramref name="sourceDataStart"/> should be used.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="args"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ControlConfiguration.UseSeparateVisuals(System.Nullable{System.Boolean},System.Windows.Media.Brush)">
            <exclude/><summary>Implements the <see cref="M:NationalInstruments.Controls.Primitives.ControlConfiguration.UseSeparateVisuals(NationalInstruments.Controls.ScaleDivisions,System.Windows.Media.Brush)"/> method.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ControlConfiguration.TryGetSourceDataStart(System.Object)">
            <exclude/><summary>Gets the source data start from the specified context, if it implements <see cref="T:NationalInstruments.Controls.Primitives.ISourceDataProvider"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSeparateVisualsProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSeparateVisuals"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSeparateVisuals"/> attached property.
            </returns>
            <attachedmember name="PreferSeparateVisuals">
      <summary>Gets or sets a value indicating whether the presented visuals should be generated as separate UI elements.</summary>
      <value>
        A value indicating whether the presented visuals should be generated as separate UI elements.
        The default value is <see langword="null"/>, indicating the presenter will determine how visuals are shown.
      </value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSourceDataValuesProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSourceDataValues"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSourceDataValues"/> attached property.
            </returns>
            <attachedmember name="PreferSourceDataValues">
      <summary>Gets or sets a value indicating whether the presented data values should use the source data type or the scale data type.</summary>
      <value>
        A value indicating whether the presented data values should use the source data type or the scale data type.
        The default value is <see langword="null"/>, indicating the context will determine the type used to of present visuals.
      </value>
    </attachedmember>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ControlConfiguration.GetPreferSeparateVisuals(NationalInstruments.Controls.ScaleDivisions)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSeparateVisuals"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSeparateVisuals"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ControlConfiguration.SetPreferSeparateVisuals(NationalInstruments.Controls.ScaleDivisions,System.Nullable{System.Boolean})">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSeparateVisuals"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Nullable`1"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ControlConfiguration.GetPreferSourceDataValues(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSourceDataValues"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSourceDataValues"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ControlConfiguration.SetPreferSourceDataValues(System.Windows.DependencyObject,System.Nullable{System.Boolean})">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.ControlConfiguration.PreferSourceDataValues"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Nullable`1"/> value.
            </param>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.CustomDivisionsCollection">
            <summary>
            Represents a collection of <see cref="T:NationalInstruments.Controls.CustomDivision"/> objects.
            </summary>
            <remarks>
            Use the <see cref="P:NationalInstruments.Controls.Primitives.RangeScale.CustomDivisions"/> collection on <see cref="T:NationalInstruments.Controls.Primitives.RangeScale"/> to determine the custom divisions used by the scale.
            </remarks>
            <threadsafety safety="unsafe"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CustomDivisionsCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.CustomDivisionsCollection"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.CustomDivisionsCollection.ChangeItemsCore(System.Int32,System.Int32,NationalInstruments.Controls.CustomDivision[])">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.GroupContext">
            <summary>Provides context for presenting a group of values.</summary>
            <remarks>
            Use <see cref="T:NationalInstruments.Controls.Primitives.GroupContext"/> as the <see cref="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Context" crefType="PartiallyQualified"/> when visualizing values with a
            <see cref="T:NationalInstruments.Controls.ValueFormatterGroup"/> to provide individual context data to each formatted value.
            </remarks>
            <lastupdated>2014-11-14 1:01:04 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.GroupContext.#ctor(System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.GroupContext"/> class with the specified context values.
            </summary>
            <param name="defaultContext">The default context, when no value context is specified.</param>
            <param name="valueContexts">The context to use for each formatted value, or <see langword="null"/> to use the default context.</param>
            <lastupdated>2014-11-14 1:01:04 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.GroupContext.GetValueContext(System.Object,System.Int32)">
            <summary>Gets the formatting context for the value at the specified position.</summary>
            <param name="context">The <see cref="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Context" crefType="PartiallyQualified"/> value.</param>
            <param name="valueIndex">The index position of the value being formatted.</param>
            <returns>The value context at <paramref name="valueIndex"/>, if <paramref name="context"/> is a <see cref="T:NationalInstruments.Controls.Primitives.GroupContext"/>; or <paramref name="context"/>.</returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.GroupContext.DefaultContext">
            <summary>Gets the context from the parent control, or <see langword="null"/> if none was provided.</summary>
            <value>An object that represents any relevant context. The default is <see langword="null" />.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.IRange">
            <summary>
            Represents a closed range of data values.
            </summary>
            <remarks>
            Provides access to basic members on <see cref="T:NationalInstruments.Controls.Range`1"/> outside of a strongly-typed context.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IRange.GetMinimum">
            <summary>
            Retrieves a boxed copy of the <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> value of the range.
            </summary>
            <value>
            A boxed copy of the <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/> value of the range.
            </value>
            <returns>
            An object representing the minimum value of the range.
            </returns>
            <lastupdated>6/1/2012 2:39:31 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IRange.GetMaximum">
            <summary>
            Retrieves a boxed copy of the <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/> value of the range.
            </summary>
            <value>
            A boxed copy of the <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/> value of the range.
            </value>
            <returns>
            An object representing the maximum value of the range.
            </returns>
            <lastupdated>6/1/2012 2:39:25 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IRange.DataType">
            <summary>
            Gets the data type of the range.
            </summary>
            <value>
            The data type of the range.
            </value>
            <lastupdated>6/1/2012 2:36:41 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IRange.IsEmpty">
            <summary>
            Gets a value indicating whether the range is empty.
            </summary>
            <value>
            <see langword="true"/> if the range is empty; otherwise <see langword="false"/>.
            </value>
            <lastupdated>6/1/2012 2:37:06 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IRange.IsInfinite">
            <summary>
            Gets a value indicating whether <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> or <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/> is infinite.
            </summary>
            <value>
            <see langword="true"/> if either <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> or <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>
            is infinite; otherwise <see langword="false"/>.
            </value>
            <lastupdated>6/1/2012 2:38:11 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.IScale">
            <summary>Represents a scale in a control.</summary>
            <lastupdated>6/1/2012 2:40:24 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IScale.OnInvalidated(System.EventArgs)">
            <summary>Raises the <see cref="E:NationalInstruments.Controls.Primitives.Scale.Invalidated"/> event.</summary>
            <param name="e">An instance of <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="e"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IScale.GetDataMapper(System.Object)">
            <summary>Gets a data mapper for the scale based on the specified context.</summary>
            <param name="context">An object containing context information about the parent control.</param>
            <returns>An <see cref="T:NationalInstruments.Controls.Data.IDataMapper"/> that can be used for mapping data values.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IScale.CreateDefaultPresenter(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>Creates a default presenter for the scale.</summary>
            <param name="host">The host where the presenter will be used.</param>
            <returns>An <see cref="T:NationalInstruments.Controls.Primitives.IScalePresenter"/> that can display a visual representation for the scale.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="host"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IScale.Label">
            <summary>Gets or sets a label to describe the scale.</summary>
            <value>An <see cref="T:System.Object"/> that represents the value of the label of the scale.</value>
            <lastupdated>6/1/2012 2:41:02 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IScale.LabelTemplate">
            <summary>Gets or sets the data template used to display the scale label.</summary>
            <value>
            The <see cref="T:System.Windows.DataTemplate"/> used to display the scale <see cref="P:NationalInstruments.Controls.Primitives.IScale.Label"/>.
            </value>
            <lastupdated>6/1/2012 2:44:06 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IScale.Visibility">
            <summary>Gets or sets a value indicating whether the scale is shown.</summary>
            <value>A <see cref="T:System.Windows.Visibility"/> value indicating whether the scale is shown.</value>
            <lastupdated>6/1/2012 2:44:48 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.IScale.Invalidated">
            <summary>Occurs when the appearance or data configuration of the scale has changed.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ISourceDataProvider">
            <summary>Provides information about the original data source.</summary>
            <remarks>
            Use a source data type provider as the context for a value presenter to display the original source value, instead of a converted value.
            </remarks>
            <seealso cref="M:NationalInstruments.Controls.Primitives.ControlConfiguration.TryGetSourceDataStart(NationalInstruments.Controls.Primitives.ValuePresenter,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Object@)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ISourceDataProvider.TryGetSourceDataStart">
            <summary>Gets the start of a source data sequence, if available.</summary>
            <returns>The start of the source data, or <see langword="null"/> if the source data start is unavailable.</returns>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.IValueFormatter">
            <summary>Represents a value formatter.</summary>
            <remarks>Implementers represent a value formatter, a type capable of formatting values as strings.</remarks>
            <lastupdated>6/1/2012 2:46:07 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.IValueFormatter.Format``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <summary>Formats a data value into a string.</summary>
            <param name="value">The value to be formatted.</param>
            <param name="args">The arguments.</param>
            <typeparam name="TData">The type of the data value.</typeparam>
            <returns>A string representing the data value.</returns>
            <lastupdated>11/16/2011 4:41:03 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs">
            <summary>
            Provides data for the <see cref="E:NationalInstruments.Controls.Primitives.INotifyCollectionChanging.CollectionChanging"/> event.
            </summary>
            <lastupdated>6/1/2012 10:27:33 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs.#ctor(System.Collections.IList,System.Collections.IList,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs" crefType="Unqualified"/> class.
            </summary>
            <param name="newItems">The list of items added to the collection, or <see langword="null"/> if no items were added.</param>
            <param name="oldItems">The list of items removed from the collection, or <see langword="null"/> if no items were removed.</param>
            <param name="startingIndex">The index where the change occurred.</param>
            <exception cref="T:System.ArgumentException">
              Both <paramref name="newItems"/> and <paramref name="oldItems"/> are <see langword="null"/> or empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startingIndex"/> is less than zero.
            </exception>
            <lastupdated>6/1/2012 10:36:05 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs.Create(System.Collections.IList,System.Collections.IList,System.Int32,System.Func{System.Action}@)">
            <summary>
            Creates a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs"/> class,
            providing a method to access the change complete callbacks registered with the args.
            </summary>
            <param name="newItems">The list of items added to the collection, or <see langword="null"/> if no items were added.</param>
            <param name="oldItems">The list of items removed from the collection, or <see langword="null"/> if no items were removed.</param>
            <param name="startingIndex">The index where the change occurred.</param>
            <param name="retrieveChangeCompleteCallbacks">
            When this method returns, contains a method to retrieve the change complete callbacks registered with the args.
            </param>
            <returns>A new instance of the <see cref="T:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs"/> class.</returns>
            <lastupdated>6/1/2012 10:29:43 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs.AddChangeCompleteCallback(System.Action)">
            <summary>
            Adds a callback to invoke after the collection change has completed.
            </summary>
            <param name="callback">A change completion callback.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="callback"/> is <see langword="null"/>.
            </exception>
            <lastupdated>6/1/2012 10:29:20 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs.AddChangeCompleteCallback(System.Action,System.Boolean)">
            <summary>
            Adds a callback to invoke after the collection change has completed.
            </summary>
            <param name="callback">A change completion callback.</param>
            <param name="lowPriority">A value indicating whether the callback should occur after other callbacks.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="callback"/> is <see langword="null"/>.
            </exception>
            <lastupdated>6/1/2012 10:29:36 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs.ToString">
            <inheritdoc/>
            <lastupdated>6/1/2012 10:36:17 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs.NewItems">
            <summary>Gets the list of items added to the collection.</summary>
            <value>The list of items added to the collection, or an empty list if no items were added.</value>
            <lastupdated>6/1/2012 10:29:02 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs.OldItems">
            <summary>Gets the list of items removed from the collection.</summary>
            <value>The list of items removed from the collection, or an empty list if no items were removed.</value>
            <remarks>
            The list returned by old items may not be accessible after the <see cref="E:NationalInstruments.Controls.Primitives.INotifyCollectionChanging.CollectionChanging"/> event completes.
            </remarks>
            <lastupdated>6/1/2012 10:29:08 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs.StartingIndex">
            <summary>Gets the index where the change occurred.</summary>
            <value>The index where the change occurred.</value>
            <lastupdated>6/1/2012 10:29:15 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ObjectCollection">
            <summary>
            A <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1"/> of <see cref="T:System.Object"/>.
            </summary>
            <remarks>
            Represents a collection of objects.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/1/2012 10:44:55 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Proxy">
            <exclude/>
            <summary>
            Contains members for working with proxy objects.
            </summary>
            <lastupdated>5/4/2012 8:53:20 AM</lastupdated>
            <updatedby>LabVIEW</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Proxy.Unwrap``1(``0)">
            <exclude/>
            <summary>
            Unwraps a proxy object.
            </summary>
            <typeparam name="T">The type of object being proxied.</typeparam>
            <param name="item">The object to unwrap.</param>
            <returns>The <see cref="P:NationalInstruments.Controls.Primitives.IProxy`1.Value"/> of the proxy, or <paramref name="item"/> if it is not a proxy.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item"/> is <see langword="null"/>.
            </exception>
            <lastupdated>6/1/2012 10:54:33 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Proxy.UnwrapTo``1(System.Object)">
            <exclude/>
            <summary>
            Unwraps a proxy object to the specified type.
            </summary>
            <typeparam name="T">The type of object being proxied.</typeparam>
            <param name="item">The object to unwrap.</param>
            <returns>The <see cref="P:NationalInstruments.Controls.Primitives.IProxy`1.Value"/> of the proxy, or <paramref name="item"/> if it is not a proxy, cast to <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
              The unwrapped item is not of type <typeparamref name="T"/>.
            </exception>
            <lastupdated>6/1/2012 10:54:36 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Proxy.TryUnwrapTo``1(System.Object,``0@)">
            <exclude/>
            <summary>
            Tries to unwrap a proxy object to the specified type.
            </summary>
            <typeparam name="T">The type of object being proxied.</typeparam>
            <param name="item">The object to unwrap.</param>
            <param name="result">
            When this method returns, contains the <see cref="P:NationalInstruments.Controls.Primitives.IProxy`1.Value"/> of the proxy or the item itself, cast to <typeparamref name="T"/>,
            or <see langword="null"/> if the operation failed.
            </param>
            <returns><see langword="true"/> if a non-<see langword="null"/> value was unwrapped; otherwise, <see langword="false"/>.</returns>
            <lastupdated>6/1/2012 10:51:25 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Proxy.Update``1(``0,``0)">
            <exclude/>
            <summary>
            Updates a proxy object.
            </summary>
            <typeparam name="T">The type of object being proxied.</typeparam>
            <param name="proxy">The proxy to update.</param>
            <param name="value">The object to proxy.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="proxy"/> is <see langword="null"/>.
              <para>-or-</para>
            <para><paramref name="value"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="proxy"/> does not implement <see cref="T:NationalInstruments.Controls.Primitives.IProxy`1"/>.
            </exception>
            <lastupdated>6/1/2012 10:54:40 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Proxy.Create``1(NationalInstruments.Controls.Data.IDataMapper{``0})">
            <exclude/>
            <summary>
            Creates a proxy for the given data mapper.
            </summary>
            <typeparam name="TData">The data type of the data mapper.</typeparam>
            <param name="value">The data mapper to proxy.</param>
            <returns>A proxy for <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <lastupdated>6/1/2012 10:51:20 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Proxy.DataMapperProxy`1">
            <exclude/><summary>The proxy implementation for data mappers.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Proxy.DataMapperProxy`1.UpdateCore(NationalInstruments.Controls.Data.IDataMapper{`0})">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Proxy.DataMapperProxy`1.CanUpdate">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Proxy.DataMapperProxy`1.DataMapper">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RadialEdge">
            <summary>
            Defines the different locations where a child element can be placed in a <see cref="T:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel"/>.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialEdge.None">
            <summary>Indicates the child element is placed in the center area of the host panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialEdge.Inside">
            <summary>Indicates the child element is stacked along the inside of the host panel edge.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialEdge.Outside">
            <summary>Indicates the child element is stacked along the outside of the host panel edge.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RadialLayoutMode">
            <summary>
            Defines how a child element is placed in a <see cref="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel"/>.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialLayoutMode.Default">
            <summary>Indicates the child element is positioned along the contour of the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialLayoutMode.Flat">
            <summary>Indicates the child element is positioned over the entire area covered by the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialLayoutMode.Nested">
            <summary>Indicates the child element is nested in a panel that will provide it with the full area bounds.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RangeScale">
            <summary>
            Provides an abstract base class for all scales that use a range.
            </summary>
            <remarks>
            Scales that use a <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/>
            should derive from this class.
            </remarks>
            <example>
            The following example demonstrates configuring a RangeScale with a Slider control. It uses a NumericScale, which derives from RangeScale.
            <code lang="XAML">
            &lt;ni:SliderDouble Height="200" Width="200" Range="0,12" Value="6"&gt;
                &lt;ni:SliderDouble.Scale&gt;
                    &lt;ni:NumericScale ScaleKind="LogarithmBase10"&gt;
                        &lt;ni:NumericScale.MajorDivisions&gt;
                            &lt;ni:RangeLabeledDivisions TickBrush="Black" TickSize="1, 5" /&gt;
                        &lt;/ni:NumericScale.MajorDivisions&gt;
                        &lt;ni:NumericScale.MinorDivisions&gt;
                            &lt;ni:RangeDivisions TickBrush="Red" TickSize="1, 2.5" /&gt;
                        &lt;/ni:NumericScale.MinorDivisions&gt;
                    &lt;/ni:NumericScale&gt;
                &lt;/ni:SliderDouble.Scale&gt;
            &lt;/ni:SliderDouble&gt;
            </code>
            </example>
            <lastupdated>6/1/2012 11:07:06 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Scale">
            <summary>
            Base class for all scales.
            </summary>
            <remarks>
            Implementers of <see cref="T:NationalInstruments.Controls.Primitives.Scale"/> are responsible
            for generating UI elements that display a scale.
            </remarks>
            <example>
            The following example demonstrates configuring a scale with a Tank control. It uses a NumericScale, which derives from Scale.
            <code lang="XAML">
            &lt;ni:TankDouble Height="130" Width="130" Range="0,20" Value="5"&gt;
                &lt;ni:TankDouble.Scale&gt;
                    &lt;ni:NumericScale Visibility="Visible" Label="Water Level" LabelOrientation="Natural" LabelVisibility="Visible" BaselineStroke="Blue" BaselineStrokeThickness="1.5" /&gt;
                &lt;/ni:TankDouble.Scale&gt;
            &lt;/ni:TankDouble&gt;
            </code>
            </example>
            <lastupdated>6/1/2012 11:35:45 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Scale.GetDataMapper(System.Object)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScale.GetDataMapper(System.Object)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Scale.NationalInstruments#Controls#Primitives#IScale#CreateDefaultPresenter(NationalInstruments.Controls.Primitives.ScaleHost)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScale.CreateDefaultPresenter(NationalInstruments.Controls.Primitives.ScaleHost)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Scale.CreateDefaultPresenter(NationalInstruments.Controls.Primitives.ScaleHost)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScale.CreateDefaultPresenter(NationalInstruments.Controls.Primitives.ScaleHost)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Scale.NationalInstruments#Controls#Primitives#IScale#OnInvalidated(System.EventArgs)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScale.OnInvalidated(System.EventArgs)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Scale.ToString">
            <inheritdoc/>
            <lastupdated>5/22/2012 2:19:04 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Scale.VisibilityProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Scale.Visibility'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Scale.Visibility'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Scale.LabelProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Scale.Label'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Scale.Label'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Scale.LabelTemplateProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Scale.LabelTemplate'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Scale.LabelTemplate'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Scale.LabelOrientationProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Scale.LabelOrientation'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Scale.LabelOrientation'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Scale.LabelVisibilityProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Scale.LabelVisibility'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Scale.LabelVisibility'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Scale.BaselineStrokeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Scale.BaselineStroke'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Scale.BaselineStroke'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Scale.BaselineStrokeThicknessProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Scale.BaselineStrokeThickness'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Scale.BaselineStrokeThickness'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Scale.OnInvalidated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NationalInstruments.Controls.Primitives.Scale.Invalidated"/> event.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e"/> is <see langword="null"/>.
            </exception>
            <param name="e">
            An instance of <see cref="T:System.EventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Scale.Visibility">
            <summary>Gets or sets the visibility of the scale.</summary><value>The visibility of the scale. The default value is <see cref="F:System.Windows.Visibility.Visible"/>.</value><lastupdated>6/1/2012 11:33:37 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Scale.Label">
            <summary>Gets or sets a label to describe the scale.</summary><value>A label to describe the scale. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 11:31:11 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Scale.LabelTemplate">
            <summary>Gets or sets the data template used to display the scale label.</summary><value>The data template used to display the scale label. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 11:32:01 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Scale.LabelOrientation">
            <summary>Gets or sets the relative orientation of the label.</summary><value>The relative orientation of the label. The default value is <see cref="P:NationalInstruments.Controls.RelativeOrientation.Natural"/>.</value><lastupdated>6/1/2012 11:31:47 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Scale.LabelVisibility">
            <summary>Gets or sets a value indicating whether the scale label is shown.</summary><value>A value indicating whether the scale label is shown. The default value is <see cref="F:System.Windows.Visibility.Visible"/>.</value><lastupdated>6/1/2012 11:33:18 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Scale.BaselineStroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to draw the scale baseline.</summary><value>The <see cref="T:System.Windows.Media.Brush"/> used to draw the scale baseline. The default value is Brushes.Black.</value><lastupdated>6/1/2012 11:30:50 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Scale.BaselineStrokeThickness">
            <summary>Gets or sets the size of the scale baseline.</summary><value>The size of the scale baseline. The default value is 1.0.</value>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.Scale.Invalidated">
            <summary>Occurs when the scale needs to be presented again.</summary><remarks>
Handle this event when you want to do something when the scale needs to be presented again.
</remarks><lastupdated>6/1/2012 11:34:12 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RangeScale.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RangeScale"/> class.</summary>
            <lastupdated>9/18/2014 11:06:05 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RangeScale.CreateDefaultCartesianPresenter(System.Windows.DependencyProperty,System.Windows.DependencyProperty)">
            <summary>Creates a default Cartesian scale presenter based on the specified edge position properties.</summary>
            <param name="orientationProperty">The attached property set by the owner control on the scale host to indicate <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.Orientation"/>.</param>
            <param name="positionProperty">The attached property set by the owner control on the scale host to indicate <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.Position"/>.</param>
            <returns>A default Cartesian presenter for the scale instance.</returns>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="orientationProperty"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="positionProperty"/> is <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RangeScale.CreateDefaultRadialPresenter(System.Windows.DependencyProperty)">
            <summary>Creates a default Radial scale presenter based on the specified edge position properties.</summary>
            <param name="positionProperty">The attached property set by the owner control on the scale host to indicate <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.Position"/>.</param>
            <returns>A default Radial presenter for the scale instance.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="positionProperty"/> is <see langword="null"/>.</exception>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RangeScale.CustomDivisionsProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RangeScale.CustomDivisions'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RangeScale.CustomDivisions'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RangeScale.MajorDivisionsProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RangeScale.MajorDivisions'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RangeScale.MajorDivisions'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RangeScale.MinorDivisionsProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RangeScale.MinorDivisions'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RangeScale.MinorDivisions'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RangeScale.CustomDivisions">
            <summary>Gets the collection of custom divisions for the scale.</summary><value>The collection of custom divisions for the scale.</value><lastupdated>6/1/2012 11:09:22 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RangeScale.MajorDivisions">
            <summary>Gets or sets the major divisions for the scale.</summary><value>The major divisions for the scale. The default value is a new <see cref="T:NationalInstruments.Controls.RangeLabeledDivisions"/>.</value><lastupdated>6/1/2012 11:09:22 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RangeScale.MinorDivisions">
            <summary>Gets or sets the minor divisions for the scale.</summary><value>The minor divisions for the scale. The default value is a new <see cref="T:NationalInstruments.Controls.RangeDivisions"/>.</value><lastupdated>6/1/2012 11:10:36 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ReadOnlyNotifyingCollection`1">
            <summary>
            A read-only version of the <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1"/>.
            </summary>
            <typeparam name="T">
            The type of elements in the list.
            </typeparam>
            <remarks>
            <see cref="T:NationalInstruments.Controls.Primitives.ReadOnlyNotifyingCollection`1"/>
            implements a read-only version of <see cref="T:NationalInstruments.Controls.Primitives.NotifyingCollection`1"/>.
            </remarks>
            <lastupdated>6/1/2012 11:26:35 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ReadOnlyNotifyingCollection`1.#ctor(NationalInstruments.Controls.Primitives.NotifyingCollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ReadOnlyNotifyingCollection`1"/> class.
            </summary>
            <param name="collection">The collection to wrap.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is <see langword="null"/>.</exception>
            <lastupdated>2012-08-29 2:39:59 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ReadOnlyNotifyingCollection`1.ToString">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ReadOnlyNotifyingCollection`1.Tag">
            <summary>
            Gets an arbitrary object value that can be used to store custom information about this collection.
            </summary>
            <value>
            The <see cref="P:NationalInstruments.Controls.Primitives.NotifyingCollection`1.Tag"/> value from the underlying collection.
            </value>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.ReadOnlyNotifyingCollection`1.CollectionChanging">
            <inheritdoc/>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.ReadOnlyNotifyingCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
            <exclude/>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.ReadOnlyNotifyingCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <exclude/>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel">
            <summary>
            Positions child elements using relative position and size parameters using Cartesian layout.
            </summary>
            <lastupdated>2014-06-06 9:28:11 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeHostPanel">
            <summary>Positions child elements using relative position and size parameters.</summary>
            <lastupdated>2014-06-06 9:28:11 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativePanel">
            <summary>Base class for panels that position child elements using relative position and size parameters.</summary>
            <lastupdated>2014-06-06 9:28:11 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RelativePanel"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.MeasureOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.ArrangeOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetLayoutClip(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetPanelBounds(System.Windows.Size,System.Object)">
            <summary>Gets the logical bounds of the panel.</summary>
            <param name="panelSize">The size of the panel.</param>
            <param name="layoutState">The last result from <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)"/>.</param>
            <returns>The logical bounds of the panel.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.CalculateDesiredSize(System.Windows.Size,System.Object)">
            <summary>Calculates the desired size of the panel.</summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <param name="layoutState">The last result from <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)"/>.</param>
            <returns>
            The desired size of the panel.
            The default implementation returns the largest width and height over all child elements.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.MeasureChild(System.Windows.UIElement,System.Windows.Size)">
            <summary>Calls <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)"/> on the specified child.</summary>
            <param name="child">The child to arrange.</param>
            <param name="availableSize">The size passed to <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.ArrangeChild(System.Windows.UIElement,System.Windows.Size,System.Object)">
            <summary>Calls <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)"/> on the specified child.</summary>
            <remarks>Applies the relative width and height property values set on the child using <paramref name="panelSize"/>.</remarks>
            <param name="child">The child to arrange.</param>
            <param name="panelSize">The size of the panel.</param>
            <param name="layoutState">The last result from <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetRelatedLayoutChildren(System.Windows.UIElement)">
            <summary>Gets any children whose layout is related to the specified element.</summary>
            <param name="child">A child in the panel, or <see langword="null"/> when a layout pass is complete.</param>
            <returns>All children related to the specified element. The default implementation returns <see langword="null"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.ScheduleLayout(System.Windows.UIElement,System.Boolean)">
            <summary>Schedules a layout pass for the specified child, using the existing layout state.</summary>
            <param name="child">The child requiring layout, or <see langword="null"/> to perform layout on all children.</param>
            <param name="arrange">A value indicating whether the child should be arranged before performing layout.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.ResetLayoutState">
            <summary>Schedules a layout pass, recalculating the layout state.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.TryGetLayoutState">
            <summary>Gets the current layout state, if it has been calculated.</summary>
            <returns>
            The last result from <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)"/>, or
            <see langword="null"/> if <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)"/> has not been called since the last reset.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)">
            <summary>Performs any required calculations before a layout pass.</summary>
            <remarks>
            <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)"/> is called before <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PerformLayout(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Size,System.Object)"/>, after all children have been measured.
            The returned layout state is passed to layout methods like <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.CalculateDesiredSize(System.Windows.Size,System.Object)"/> and <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PerformLayout(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Size,System.Object)"/>.
            Use <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.ResetLayoutState"/> to force a new layout calculation after a major change to the panel.
            </remarks>
            <param name="previousState">The last result from <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)"/>.</param>
            <returns>The prepared layout state.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.PerformLayout(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Size,System.Object)">
            <summary>Positions the specified child elements.</summary>
            <param name="children">The <see cref="T:System.Windows.UIElement"/> children requiring layout.</param>
            <param name="panelSize">The size of the panel.</param>
            <param name="layoutState">The last result from <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.UpdateTransform(System.Windows.UIElement,System.Windows.Media.Matrix)">
            <summary>Updates the matrix transform on the specified child.</summary>
            <remarks>
            This method will overwrite any existing values in the <see cref="P:System.Windows.UIElement.RenderTransform"/>
            and <see cref="P:System.Windows.UIElement.RenderTransformOrigin"/> properties with the target values.
            </remarks>
            <param name="child">The child to position.</param>
            <param name="matrix">The position matrix.</param>
            <returns><see langword="true"/> if a new render transform as assigned.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.OnLayoutPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>Called when an attached property effecting the layout of a child in the panel changes.</summary>
            <param name="d">The child element.</param>
            <param name="e">The dependency property change event args.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.OnLayoutPropertyChanged(System.Windows.UIElement,System.Windows.DependencyPropertyChangedEventArgs,System.Object)">
            <summary>Called when a layout property on a child has changed.</summary>
            <param name="child">The child with the modified property.</param>
            <param name="e">The dependency property change event args.</param>
            <param name="layoutState">The last result from <see cref="M:NationalInstruments.Controls.Primitives.RelativePanel.PrepareLayout(System.Object)"/>.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.LogPropertyChange(System.Windows.UIElement,System.Windows.DependencyPropertyChangedEventArgs)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetPanelChild``1(System.Windows.DependencyObject,System.Windows.UIElement@,``0@)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetPrimaryPosition(System.Windows.UIElement,System.Boolean)">
            <exclude/><summary>Gets the adjusted horizontal position and alignment of the specified child.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.OnAttachedLayoutStatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetChildArrangeSize(System.Windows.UIElement,System.Windows.Size)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetChildArrangeSize(System.Windows.UIElement,System.Windows.Size,System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.ArrangeChildCore(System.Windows.UIElement,System.Windows.Size,System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetMargin(System.Windows.UIElement)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetEdgeOrientedSize(NationalInstruments.Controls.Primitives.CartesianEdge,System.Windows.Size)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.Inflate(System.Windows.Size,System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.ApplyMargin(NationalInstruments.Controls.Primitives.CartesianEdge,System.Windows.Thickness,System.Windows.Size,System.Boolean)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.MarginHack(System.Windows.Thickness,System.Double)">
            <exclude>TODO: US41573</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetStandardMatrix(System.Windows.UIElement,System.Double,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.InvalidateDebugBounds">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativePanel.RelativeWidthProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeWidth"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeWidth"/> attached property.
            </returns>
            <attachedmember name="RelativeWidth">
      <summary>Gets or sets the width of the element, relative to the panel.</summary>
      <value>The width of the element, relative to the panel. The default value is <see cref="F:System.Double.NaN"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHeightProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHeight"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHeight"/> attached property.
            </returns>
            <attachedmember name="RelativeHeight">
      <summary>Gets or sets the height of the element, relative to the panel.</summary>
      <value>The height of the element, relative to the panel. The default value is <see cref="F:System.Double.NaN"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalPositionProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalPosition"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalPosition"/> attached property.
            </returns>
            <attachedmember name="RelativeHorizontalPosition">
      <summary>Gets or sets the horizontal position of the element, relative to the panel.</summary>
      <value>The horizontal position of the element, relative to the panel. The default value is zero.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalPositionProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalPosition"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalPosition"/> attached property.
            </returns>
            <attachedmember name="RelativeVerticalPosition">
      <summary>Gets or sets the vertical position of the element, relative to the panel.</summary>
      <value>The vertical position of the element, relative to the panel. The default value is zero.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalAlignment"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalAlignment"/> attached property.
            </returns>
            <attachedmember name="RelativeHorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the element, relative to <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalPosition"/>.</summary>
      <value>The horizontal alignment of the element, relative to RelativeHorizontalPosition. The default value is <see cref="F:NationalInstruments.Controls.RelativeAlignment.Near"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalAlignment"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalAlignment"/> attached property.
            </returns>
            <attachedmember name="RelativeVerticalAlignment">
      <summary>Gets or sets the vertical alignment of the element, relative to <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalPosition"/>.</summary>
      <value>The vertical alignment of the element, relative to RelativeVerticalPosition. The default value is <see cref="F:NationalInstruments.Controls.RelativeAlignment.Near"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativePanel.RelativeOrientationProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeOrientation"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeOrientation"/> attached property.
            </returns>
            <attachedmember name="RelativeOrientation">
      <summary>Gets or sets the rotation of the element, relative to the panel.</summary>
      <value>The rotation of the element, relative to the panel. The default value is <see cref="P:NationalInstruments.Controls.RelativeOrientation.Perpendicular"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativePanel.LayoutOnArrangeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativePanel.LayoutOnArrange'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativePanel.LayoutOnArrange'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.OnLayoutChanging(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NationalInstruments.Controls.Primitives.RelativePanel.LayoutChanging"/> event.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e"/> is <see langword="null"/>.
            </exception>
            <param name="e">
            An instance of <see cref="T:System.EventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetRelativeWidth(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeWidth"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeWidth"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.SetRelativeWidth(System.Windows.UIElement,System.Double)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeWidth"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Double"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetRelativeHeight(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHeight"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHeight"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.SetRelativeHeight(System.Windows.UIElement,System.Double)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHeight"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Double"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetRelativeHorizontalPosition(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalPosition"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalPosition"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.SetRelativeHorizontalPosition(System.Windows.UIElement,System.Double)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalPosition"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Double"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetRelativeVerticalPosition(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalPosition"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalPosition"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.SetRelativeVerticalPosition(System.Windows.UIElement,System.Double)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalPosition"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Double"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetRelativeHorizontalAlignment(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalAlignment"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalAlignment"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.SetRelativeHorizontalAlignment(System.Windows.UIElement,NationalInstruments.Controls.RelativeAlignment)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeHorizontalAlignment"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.RelativeAlignment"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetRelativeVerticalAlignment(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalAlignment"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalAlignment"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.SetRelativeVerticalAlignment(System.Windows.UIElement,NationalInstruments.Controls.RelativeAlignment)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeVerticalAlignment"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.RelativeAlignment"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.GetRelativeOrientation(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeOrientation"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeOrientation"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.SetRelativeOrientation(System.Windows.UIElement,NationalInstruments.Controls.RelativeOrientation)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativePanel.RelativeOrientation"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.RelativeOrientation"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativePanel.LogCategory">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativePanel.LayoutOnArrange">
            <summary>Gets or sets a value indicating whether to always perform layout immediately during an arrange pass.</summary><value>
      <para>When <see langword="true"/>, a call to <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)"/> will cause all child elements to be positioned.</para>
      <para>When <see langword="false"/>, a call to <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)"/> will only position child elements when <see cref="P:System.Windows.UIElement.IsVisible"/> is <see langword="true"/>.</para>
      <para>The default value is <see langword="true"/>.</para>
    </value>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.RelativePanel.LayoutChanging">
            <summary>Occurs when the panel begins a new layout pass.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativePanel.ReverseChildrenCollection">
            <summary>Wraps a panel's children collection and returns the elements in reverse order, so that later elements occlude earlier ones..</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativePanel.InvalidationSet">
            <summary>Holds on to the set of child elements that need to be repositioned due to attached property changes.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.InvalidationSet.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.InvalidationSet.Invalidate(System.Windows.UIElement,System.Boolean)">
            <summary>Marks the specified child as invalid.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.InvalidationSet.Invalidate(System.Collections.Generic.ICollection{System.Windows.UIElement},System.Boolean)">
            <summary>Marks the specified related children as invalid.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.InvalidationSet.InvalidateAll">
            <summary>Marks all children in the parent panel as invalid.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.InvalidationSet.GetInvalidatedChildren(NationalInstruments.Controls.Primitives.RelativePanel.ReverseChildrenCollection@,NationalInstruments.Controls.Primitives.RelativePanel.ReverseChildrenCollection@)">
            <summary>Gets the set of children that have been invalidated.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanel.InvalidationSet.Clear">
            <summary>Clears all invalidated children from the set.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativePanel.InvalidationSet.Count">
            <summary>Gets the number of invalidated children.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativePanel.LayoutUpdateAction">
            <summary>Represents a scheduled action for performing asynchronous layout.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeHostPanel.GetMinimumSize(System.Windows.UIElement)">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeHostPanel.MaximumStackSizeProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.MaximumStackSize"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.MaximumStackSize"/> attached property.
            </returns>
            <attachedmember name="MaximumStackSize">
      <summary>Gets or sets the size of the largest stack in a scale panel.</summary>
      <value>The size of the largest stack in a <see cref="T:NationalInstruments.Controls.Primitives.RelativeScalePanel"/>, or <see cref="F:System.Double.NaN"/> to use <see cref="P:System.Windows.UIElement.DesiredSize"/>. The default value is <see cref="F:System.Double.NaN"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeHostPanel.NearOverhangProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.NearOverhang"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.NearOverhang"/> attached property.
            </returns>
            <attachedmember name="NearOverhang">
      <summary>Gets or sets the near overhang of a scale panel.</summary>
      <value>The near overhang of a scale panel. The default value is zero.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeHostPanel.FarOverhangProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.FarOverhang"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.FarOverhang"/> attached property.
            </returns>
            <attachedmember name="FarOverhang">
      <summary>Gets or sets the far overhang of a scale panel.</summary>
      <value>The far overhang of a scale panel. The default value is zero.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeHostPanel.LayoutWhenHiddenProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.LayoutWhenHidden"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.LayoutWhenHidden"/> attached property.
            </returns>
            <attachedmember name="LayoutWhenHidden">
      <summary>Gets or sets a value indicating whether to force a layout pass on a panel when it is hidden.</summary>
      <value>A value indicating whether to force a layout pass on a panel when <see cref="P:System.Windows.UIElement.IsVisible"/> is <see langword="false"/>. The default value is <see langword="false"/>.</value>
    </attachedmember>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeHostPanel.GetMaximumStackSize(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.MaximumStackSize"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.MaximumStackSize"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeHostPanel.SetMaximumStackSize(System.Windows.UIElement,System.Double)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.MaximumStackSize"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Double"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeHostPanel.GetNearOverhang(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.NearOverhang"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.NearOverhang"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeHostPanel.SetNearOverhang(System.Windows.UIElement,System.Double)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.NearOverhang"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Double"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeHostPanel.GetFarOverhang(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.FarOverhang"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.FarOverhang"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeHostPanel.SetFarOverhang(System.Windows.UIElement,System.Double)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.FarOverhang"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Double"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeHostPanel.GetLayoutWhenHidden(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.LayoutWhenHidden"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.LayoutWhenHidden"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeHostPanel.SetLayoutWhenHidden(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeHostPanel.LayoutWhenHidden"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Boolean"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.PrepareLayout(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.CalculateDesiredSize(System.Windows.Size,System.Object)">
            <inheritdoc/>
            <returns>Returns the size of the largest width and height over all edge elements.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.ArrangeChild(System.Windows.UIElement,System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.PerformLayout(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.EdgeProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.Edge"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.Edge"/> attached property.
            </returns>
            <attachedmember name="Edge">
      <summary>Gets or sets the location where a child element can be placed.</summary>
      <value>The location where a child element can be placed. The default value is <see cref="F:NationalInstruments.Controls.Primitives.CartesianEdge.None"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.IsInvertedProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.IsInverted'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.IsInverted'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.EdgePaddingProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.EdgePadding'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.EdgePadding'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.EdgeSizeOverrideProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.EdgeSizeOverride'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.EdgeSizeOverride'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.DesiredEdgeSizeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.DesiredEdgeSize'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.DesiredEdgeSize'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.DefaultSizeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.DefaultSize'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.DefaultSize'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.ResizeToleranceProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.ResizeTolerance'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.ResizeTolerance'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.GetEdge(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.Edge"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.Edge"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.SetEdge(System.Windows.UIElement,NationalInstruments.Controls.Primitives.CartesianEdge)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.Edge"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Primitives.CartesianEdge"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.IsInverted">
            <summary>Gets or sets a value indicating whether to invert the position of elements along the panel.</summary><value>A value indicating whether to invert the position of elements along the panel. The default value is <see langword="false"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.EdgePadding">
            <summary>Gets or sets additional padding added to overhanging edge elements.</summary><value>Additional padding added to overhanging edge elements. The default value is a <see cref="T:System.Windows.Thickness"/> of zero.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.EdgeSizeOverride">
            <summary>Gets or sets an override for the size of each edge.</summary><value>An override for the size of each edge. The default value is a <see cref="T:System.Windows.Thickness"/> of <see. cref="F:System.Double.NaN"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.DesiredEdgeSize">
            <summary>Gets the desired size of each edge.</summary><value>The desired size of each edge. The default value is a <see cref="T:System.Windows.Thickness"/> of zero.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.DefaultSize">
            <summary>Gets the default size returned by the control when measured with infinite size.</summary><value>The default size returned by the control when measured with infinite size. The default value is <see cref="P:System.Windows.Size.Empty"/>, to calculate desired size based on children.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.ResizeTolerance">
            <summary>Gets the amount an edge is allowed to decrease in size before the allocated size is reduced.</summary><value>The amount an edge is allowed to decrease in size before the allocated size is reduced. The default value is zero, to make the allocated edge size match the desired size.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.LayoutInfo">
            <summary>Contains the layout information for all edge and interior children in the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.LayoutInfo.EdgeSizeOverride">
            <exclude/><summary>Gets the edge size override set on the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel.LayoutInfo.IsInverted">
            <exclude/><summary>Gets a value indicating whether to invert children in the panel.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel">
            <summary>Positions child elements using relative position and size parameters using stacking and Cartesian layout.</summary>
            <lastupdated>2014-06-06 9:28:11 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeScalePanel">
            <summary>Positions child elements using relative position and size parameters using stacking layout.</summary>
            <lastupdated>2014-06-06 9:28:11 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.GetLogicalSize(System.Windows.UIElement,NationalInstruments.Controls.RelativeOrientation)">
            <summary>
            Gets the size of an element transformed within the bounds of the relative panel.
            </summary>
            <param name="child">The child element, or <see langword="null"/> to get the oriented size of the panel.</param>
            <param name="orientationOverride">An override for the orientation of the child element, or <see langword="null"/> to use the child's assigned orientation.</param>
            <returns>The logical size of <paramref name="child"/>, or the logical size of the relative panel if <paramref name="child"/> is <see langword="null"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.GetReferenceBounds(System.Windows.UIElement,System.Windows.Size,System.Double,NationalInstruments.Controls.RelativeAlignment)">
            <summary>
            Gets the reference bounds of a child element at the specified position along the panel, relative to the specified reference element.
            </summary>
            <param name="referenceElement">A <see cref="T:System.Windows.UIElement"/> containing the other relative panel layout properties.</param>
            <param name="size">The size of the bounds.</param>
            <param name="relativeHorizontalPosition">The position of the bounds.</param>
            <param name="relativeHorizontalAlignment">The alignment of the bounds.</param>
            <returns>A reference bounds with the specified size and relative position, relative to <paramref name="referenceElement"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.GetAncestor(System.Int32)">
            <exclude/>
            <summary>Gets the ancestor at the specified level.</summary>
            <param name="ancestorLevel">The <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.AttachedLayoutInformationTarget"/> value.</param>
            <returns>The ancestor at <paramref name="ancestorLevel"/>, or <see langword="null"/> if the target does not exist.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.OnLayoutInfoChanged(NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo,NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo)">
            <summary>
            Called when the attached <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.LayoutInfo"/> changes on the panel.
            </summary>
            <param name="oldValue">The old layout info.</param>
            <param name="newValue">The new layout info.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.GetRelatedLayoutChildren(System.Windows.UIElement)">
            <inheritdoc/>
            <returns>Returns children with an occlusion margin in the panel.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.IsSet(System.Windows.Thickness)">
            <exclude/><summary>Determines whether a child is has an occlusion margin.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.IsHidden(System.Windows.Thickness)">
            <exclude/><summary>Determines whether a child is hidden by the given occlusion margin.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.IsOccluded``1(NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionInfo,System.Windows.UIElement,System.Windows.Media.Matrix,``0,System.Func{System.Windows.Media.Matrix,System.Windows.Rect,``0,System.Collections.Generic.IEnumerable{NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBounds}})">
            <exclude/><summary>Determines whether a child covering the specified near and far positions is occluded by an existing visible element.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.IsOverhangingPosition(System.Double)">
            <exclude/><summary>Determines whether an element at the specified relative position will hang over the edge of the panel.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.RequiresReset(System.Windows.UIElement,System.Windows.DependencyPropertyChangedEventArgs)">
            <exclude/><summary>Determines whether the specified property change will effect the size and layout of the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanel.StackProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Stack"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Stack"/> attached property.
            </returns>
            <attachedmember name="Stack">
      <summary>Gets or sets the identifier of the stack the element belongs in.</summary>
      <value>The identifier of the stack the element belongs in. Groups of elements in the same stack are placed on top of each other. Negative values stack from far to near, while non-negative values stack from near to far. The default value is <see cref="F:NationalInstruments.Controls.Primitives.RelativeScalePanelStack.Default" crefType="PartiallyQualified"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanel.GroupProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Group"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Group"/> attached property.
            </returns>
            <attachedmember name="Group">
      <summary>Gets or sets the identifier of the group the element belongs in.</summary>
      <value>The identifier of the group the element belongs in. Groups of elements in the same stack are placed on top of each other. The default value is <see cref="F:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup.Default" crefType="PartiallyQualified"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionMarginProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionMargin"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionMargin"/> attached property.
            </returns>
            <attachedmember name="OcclusionMargin">
      <summary>Gets or sets the occlusion margin for an element.</summary>
      <value>
        The occlusion margin for an element. When the occlusion margin is set, elements in the same group that overlap will cause the lower element to be hidden.
        The default value is a <see cref="T:System.Windows.Thickness"/> containing <see cref="F:System.Double.NaN"/> values, disabling occlusion.
      </value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanel.AttachedLayoutInformationTargetProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeScalePanel.AttachedLayoutInformationTarget'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeScalePanel.AttachedLayoutInformationTarget'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanel.LayoutInfoProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.LayoutInfo"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.LayoutInfo"/> attached property.
            </returns>
            <attachedmember name="LayoutInfo">
      <summary>Gets or sets an override for the final bounds where the panel should place elements.</summary>
      <value>
An override for the final bounds where the panel should place elements, or <see cref="F:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo.Empty" crefType="PartiallyQualified"/> to use <see cref="P:System.Windows.UIElement.RenderSize"/>.
The default value is <see cref="F:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo.Empty" crefType="PartiallyQualified"/>.
</value>
    </attachedmember>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.OnAttachedLayoutInformationTargetChanged(System.Int32,System.Int32)">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.AttachedLayoutInformationTarget"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.AttachedLayoutInformationTarget"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.AttachedLayoutInformationTarget"/> property.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.GetStack(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Stack"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Stack"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.SetStack(System.Windows.UIElement,NationalInstruments.Controls.Primitives.RelativeScalePanelStack)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Stack"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Primitives.RelativeScalePanelStack"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.GetGroup(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Group"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Group"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.SetGroup(System.Windows.UIElement,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Group"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.GetOcclusionMargin(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionMargin"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionMargin"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.SetOcclusionMargin(System.Windows.UIElement,System.Windows.Thickness)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionMargin"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Windows.Thickness"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.GetLayoutInfo(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.LayoutInfo"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.LayoutInfo"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.SetLayoutInfo(System.Windows.UIElement,NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.LayoutInfo"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.AttachedLayoutInformationTarget">
            <summary>Gets or sets the index of the parent where attached layout information is applied.</summary><value>The index of the parent where attached layout information is applied. The default value is <c>-1</c>.</value><remarks>Attached layout information is read by <see cref="T:NationalInstruments.Controls.Primitives.RelativeHostPanel"/> on its child elements.</remarks>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBounds">
            <exclude/><summary>Represents the area covered by an element in the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBounds.Near">
            <exclude/><summary>The position of the near side.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBounds.Far">
            <exclude/><summary>The position of the far side.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBounds.#ctor(System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBoundsOverlapComparer">
            <exclude/><summary>Returns zero for overlapping bounds, or non-zero if the bounds are completely above or below.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBoundsOverlapComparer.Instance">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBoundsOverlapComparer.Compare(NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBounds,NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBounds)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionInfo">
            <exclude/><summary>Maintains occlusion information for a layout pass.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionInfo.#ctor">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionInfo.SetOverlappingGroups(NationalInstruments.Controls.Primitives.RelativeScalePanelStack,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup,System.Collections.Generic.IEnumerable{NationalInstruments.Controls.Internal.Pair{NationalInstruments.Controls.Primitives.RelativeScalePanelStack,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup}})">
            <exclude/><summary>Sets the groups overlapping the current layout group.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionInfo.TryGetOcclusionList(System.Int32,System.Collections.Generic.List{NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionBounds}@)">
            <exclude/><summary>Gets the occlusion list for the specified group, or <see langword="null"/> if the element has no occludable elements.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.OcclusionInfo.Count">
            <exclude/><summary>Gets the number of overlapping groups.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.OnAttachedLayoutInformationTargetChanged(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.PrepareLayout(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GetPanelBounds(System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.CalculateDesiredSize(System.Windows.Size,System.Object)">
            <inheritdoc/>
            <returns>Returns the size of the largest width and height over all stacked element groups.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.ArrangeChild(System.Windows.UIElement,System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GetLogicalSize(System.Windows.UIElement,NationalInstruments.Controls.RelativeOrientation)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.PerformLayout(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GetReferenceBounds(System.Windows.UIElement,System.Windows.Size,System.Double,NationalInstruments.Controls.RelativeAlignment)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.OnLayoutPropertyChanged(System.Windows.UIElement,System.Windows.DependencyPropertyChangedEventArgs,System.Object)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.OrientationProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.Orientation'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.Orientation'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.PositionProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.Position'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.Position'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IsInvertedProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IsInverted'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IsInverted'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IncludeOverhangInSizeProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IncludeOverhangInSize"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IncludeOverhangInSize"/> attached property.
            </returns>
            <attachedmember name="IncludeOverhangInSize">
      <summary>Gets or sets a value indicating whether the near and far overhang is included in the size of the scale panel.</summary>
      <value>
        A value indicating whether the near and far overhang is included in the size of the scale panel
        when it is placed in a <see cref="T:NationalInstruments.Controls.Primitives.ScaleHost"/> outside of a <see cref="T:NationalInstruments.Controls.Primitives.RelativeCartesianHostPanel"/>.
        The default value is <see langword="true"/>.
      </value>
    </attachedmember>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GetIncludeOverhangInSize(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IncludeOverhangInSize"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IncludeOverhangInSize"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.SetIncludeOverhangInSize(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IncludeOverhangInSize"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Boolean"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.Orientation">
            <summary>Gets or sets the orientation of the panel.</summary><value>The orientation of the panel. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.Position">
            <summary>Gets or sets the position of the panel.</summary><value>The position of the panel. The default value is <see cref="F:NationalInstruments.Controls.RelativePosition.Near"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.IsInverted">
            <summary>Gets or sets a value indicating whether to invert the position of elements along the panel.</summary><value>A value indicating whether to invert the position of elements along the panel. The default value is <see langword="false"/>.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo">
            <summary>Contains the layout information for a group of elements in a stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.#ctor(NationalInstruments.Controls.Primitives.RelativeScalePanelGroup)">
            <exclude/><summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.UpdateOffset(System.Double)">
            <exclude/><summary>Updates the value of <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.Offset"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.UpdateSize(System.Double)">
            <exclude/><summary>Updates the value of <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.Size"/> with the larger of the current and specified sizes.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.UpdateOverlap(NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo,NationalInstruments.Controls.Primitives.RelativeScalePanelStack)">
            <exclude/><summary>Updates <see cref="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.OverlappingGroups"/> if the groups overlap.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.GetTransform(System.Windows.UIElement,System.Windows.Rect,NationalInstruments.Controls.Primitives.CartesianEdge,System.Boolean,System.Nullable{System.Double})">
            <exclude/><summary>Gets the transform for an element in a stack.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.Id">
            <exclude/><summary>Gets the group identifier.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.Offset">
            <exclude/><summary>Gets the offset of the group from the start of the stack.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.Size">
            <exclude/><summary>Gets the primary size of the group.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.GroupInfo.OverlappingGroups">
            <exclude/><summary>Gets the group identifier.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.StackInfo">
            <summary>Contains the layout information for a stack of grouped elements.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.StackInfo.#ctor(NationalInstruments.Controls.Primitives.RelativeScalePanelStack)">
            <exclude/><summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.StackInfo"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.StackInfo.GetSize">
            <exclude/><summary>Gets the total size of all groups in the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.StackInfo.UpdateOverlap(System.Collections.Generic.ICollection{NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.StackInfo})">
            <exclude/><summary>Updates groups in the current stack that overlap other stack groups.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.StackInfo.GetGroup(NationalInstruments.Controls.Primitives.RelativeScalePanelGroup)">
            <exclude/><summary>Gets the group with the specified ID.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.StackInfo.AddChildToGroup(NationalInstruments.Controls.Primitives.RelativeScalePanelGroup,System.Double)">
            <exclude/><summary>Adds a child to the specified group.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.StackInfo.Id">
            <exclude/><summary>Gets the stack identifier.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo">
            <summary>Contains the layout information for all stacks of grouped elements in the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.Edge">
            <exclude/><summary>Gets the orientation of the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.EdgeBaseAngle">
            <exclude/><summary>Gets the orientation of the panel in degrees.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.IsInverted">
            <exclude/><summary>Gets a value indicating whether to invert children in the panel.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.#ctor(System.Windows.Controls.Orientation,NationalInstruments.Controls.RelativePosition,System.Boolean)">
            <exclude/><summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.Complete">
            <exclude/><summary>Finalizes layout calculations across all stack groups.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.GetPanelBounds(System.Windows.Size,System.Boolean)">
            <exclude/><summary>Gets the desired bounds of the panel.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.GetGroup(NationalInstruments.Controls.Primitives.RelativeScalePanelStack,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup)">
            <exclude/><summary>Gets the group with the specified ID in the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.AddChildToGroup(NationalInstruments.Controls.Primitives.RelativeScalePanelStack,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup,System.Double)">
            <exclude/><summary>Adds a child to the specified group.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.UpdateOverhang(System.Double,System.Double,System.Double)">
            <exclude/><summary>Updates the appropriate overhang value for the child at the specified position.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.UpdateOverhang(System.Double,System.Double)">
            <exclude/><summary>Updates the overhang values for the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.GetGroupBounds(System.Windows.Rect,NationalInstruments.Controls.Primitives.RelativeScalePanelStack,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup,System.Windows.Thickness,System.Windows.Point)">
            <exclude/><summary>Updates the overhang values for the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.FromBounds(System.Windows.Rect)">
            <exclude/><summary>Gets a region panel layout info with the specified bounds.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.NearOverhang">
            <exclude/><summary>Gets the largest overhang on the near side of the panel.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.FarOverhang">
            <exclude/><summary>Gets the largest overhang on the far side of the panel.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.LargestChildSize">
            <exclude/><summary>Gets the secondary size of the largest child in the panel.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeCartesianScalePanel.LayoutInfo.LargestStackSize">
            <exclude/><summary>Gets the size of the largest stack in the panel.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo">
            <summary>Holds information for elements using relative layout in a <see cref="T:NationalInstruments.Controls.Primitives.RelativePanel"/>.</summary>
            <lastupdated>2014-09-10 2:55:16 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo.Empty">
            <summary>Gets a value representing an empty layout info.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo.#ctor(System.Windows.Rect,System.Object)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo"/> class with the specified layout information.</summary><param name="bounds">The bounds of an element using relative layout.</param><param name="state">Additional layout state associated with an element using relative layout.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo.#ctor(System.Windows.Rect)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo"/> class with the specified layout information.</summary><param name="bounds">The bounds of an element using relative layout.</param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo.Bounds">
            <summary>Gets or sets the bounds of an element using relative layout.</summary><value>The bounds of an element using relative layout in a <see cref="T:NationalInstruments.Controls.Primitives.RelativePanel"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo.State">
            <summary>Gets or sets additional layout state associated with an element using relative layout.</summary><value>Additional layout state associated with an element using relative layout in a <see cref="T:NationalInstruments.Controls.Primitives.RelativePanel"/>.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel">
            <summary>
            Positions child elements using relative position and size parameters using radial layout.
            </summary>
            <lastupdated>2014-06-06 9:28:11 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.PrepareLayout(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.CalculateDesiredSize(System.Windows.Size,System.Object)">
            <inheritdoc/>
            <returns>Returns the size of the largest width and height over all edge elements.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.MeasureChild(System.Windows.UIElement,System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.ArrangeChild(System.Windows.UIElement,System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.PerformLayout(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.EdgeProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.Edge"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.Edge"/> attached property.
            </returns>
            <attachedmember name="Edge">
      <summary>Gets or sets the location where a child element can be placed.</summary>
      <value>The location where a child element can be placed. The default value is <see cref="F:NationalInstruments.Controls.Primitives.RadialEdge.None"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.EdgeSizeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.EdgeSize'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.EdgeSize'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.DefaultDiameterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.DefaultDiameter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.DefaultDiameter'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.ArcSweepProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.ArcSweep'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.ArcSweep'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.GetEdge(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.Edge"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.Edge"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.SetEdge(System.Windows.UIElement,NationalInstruments.Controls.Primitives.RadialEdge)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.Edge"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Primitives.RadialEdge"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.ContourOrientation">
            <exclude/><summary>Gets the special-case layout identifier for zoom interaction visual on polar graph.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.EdgeSize">
            <summary>Gets the height of the outside edge.</summary><value>The height of the outside edge. The default value is 0.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.DefaultDiameter">
            <summary>Gets the default size returned by the control when measured with infinite size.</summary><value>The default size returned by the control when measured with infinite size. The default value is <see cref="F:System.Double.NaN"/>, to calculate desired size based on children.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.ArcSweep">
            <summary>Gets or sets the radial arc in which layout occurs.</summary><value>The radial arc in which layout occurs. The default value is a full counter-clockwise circle.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.ContourOrientationImpl">
            <summary>Special-case layout identifier for zoom interaction visual on polar graph.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RelativeOrientation">
            <summary>
            Represents an orientation that is relative to a baseline orientation.
            </summary>
            <remarks>
            Use implementations of the <see cref="T:NationalInstruments.Controls.RelativeOrientation"/>
            class to specify how an element should be positioned relative to some baseline.
            </remarks>
            <threadsafety safety="safe"/>
            <lastupdated>5/30/2012 1:10:31 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RelativeOrientation.CreateOffset(System.Double)">
            <summary>Provides a value indicating offset orientation behavior.</summary>
            <remarks>
            Wherever the object is positioned around the target, a fixed offset from the perpendicular
            is used. An offset of zero behaves the same as <see cref="P:NationalInstruments.Controls.RelativeOrientation.Perpendicular"/>.
            </remarks>
            <param name="offsetAngle">The angle to maintain with respect to the tangent of the orbit around the target.</param>
            <returns>A value indicating the offset behavior for the given angle.</returns>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelOrientation"/> property to an offset mode of 45 degrees.
            <code lang="XAML">
            &lt;ni:ScaleLabeledDivisions LabelOrientation="Offset: 45" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:33:38 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RelativeOrientation.CreateConstant(System.Double)">
            <summary>Provides a value indicating constant orientation behavior.</summary>
            <remarks>
            Wherever the object is positioned around the target, a fixed constant is used. An offset of zero
            behaves the same as <see cref="P:NationalInstruments.Controls.RelativeOrientation.None"/>.
            </remarks>
            <param name="angle">The angle to maintain.</param>
            <returns>A value indicating the constant behavior for the given angle.</returns>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelOrientation"/> property to a constant mode of 45 degrees.
            <code lang="XAML">
            &lt;ni:ScaleLabeledDivisions LabelOrientation="Constant: 45" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:33:38 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RelativeOrientation.GetRotationAngle(System.Double)">
            <summary>
            Provides the angle to which the object is oriented.
            </summary>
            <remarks>
            The standard orientation of an object is how the object appears with no rotation applied.
            </remarks>
            <param name="baseAngle">The angle required to rotate from the standard orientation to get to the position on the target.</param>
            <returns>The angle to which the object is oriented.</returns>
            <lastupdated>5/3/2012 10:51:46 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RelativeOrientation.None">
            <summary>Gets a value indicating that no orientation is applied to the target.</summary>
            <value>A value indicating no modified orientation behavior.</value>
            <remarks>
            The object maintains its standard orientation, regardless of its position around the target.
            </remarks>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelOrientation"/> property to <see cref="P:NationalInstruments.Controls.RelativeOrientation.None"/>.
            <code lang="XAML">
            &lt;ni:ScaleLabeledDivisions LabelOrientation="None" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:33:12 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RelativeOrientation.Natural">
            <summary>Gets a value indicating the natural orientation behavior for Cartesian layout.</summary>
            <value>A value indicating natural orientation behavior.</value>
            <remarks>
            When the object is above or below the target, the object is in its standard orientation.
            On the left side of the target, the object rotates 90 degrees counterclockwise.
            On the right side of the target, the object rotates 90 degrees clockwise.
            </remarks>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelOrientation"/> property to <see cref="P:NationalInstruments.Controls.RelativeOrientation.Natural"/>.
            <code lang="XAML">
            &lt;ni:ScaleLabeledDivisions LabelOrientation="Natural" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:33:05 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RelativeOrientation.Perpendicular">
            <summary>Gets a value indicating perpendicular orientation behavior.</summary>
            <value>A value indicating perpendicular orientation behavior.</value>
            <remarks>
            Wherever the object is positioned around the target, a perpendicular orientation
            is used to keep the object's base tangent to the target at that position.
            </remarks>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelOrientation"/> property to <see cref="P:NationalInstruments.Controls.RelativeOrientation.Perpendicular"/>.
            <code lang="XAML">
            &lt;ni:ScaleLabeledDivisions LabelOrientation="Perpendicular" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:33:26 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RelativeOrientation.UnderlyingType">
            <inheritdoc cref="P:NationalInstruments.EnumObject.UnderlyingType"/>
        </member>
        <member name="T:NationalInstruments.Controls.RelativeOrientation.NoneImpl">
            <summary>Implementation of the None relative orientation.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RelativeOrientation.NaturalImpl">
            <summary>Implementation of the Natural relative orientation.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RelativeOrientation.PerpendicularImpl">
            <summary>Implementation of the Perpendicular relative orientation.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RelativeOrientation.OffsetImpl">
            <summary>Implementation of the Offset relative orientation.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RelativeOrientation.ConstantImpl">
            <summary>Implementation of the Constant relative orientation.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.LayoutInfo">
            <summary>Contains the layout information for all edge and interior children in the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.LayoutInfo.ArcSweep">
            <exclude/><summary>Gets the arc covered by the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialHostPanel.LayoutInfo.RelativeBounds">
            <exclude/><summary>Gets the relative bounds of the arc covered by the panel.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel">
            <summary>Positions child elements using relative position and size parameters using stacking and radial layout.</summary>
            <lastupdated>2014-06-06 9:28:11 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.OnAttachedLayoutInformationTargetChanged(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.PrepareLayout(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GetPanelBounds(System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.CalculateDesiredSize(System.Windows.Size,System.Object)">
            <inheritdoc/>
            <returns>Returns the size of the largest width and height over all stacked element groups.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.MeasureChild(System.Windows.UIElement,System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.ArrangeChild(System.Windows.UIElement,System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GetLogicalSize(System.Windows.UIElement,NationalInstruments.Controls.RelativeOrientation)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.PerformLayout(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Size,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GetReferenceBounds(System.Windows.UIElement,System.Windows.Size,System.Double,NationalInstruments.Controls.RelativeAlignment)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.OnLayoutPropertyChanged(System.Windows.UIElement,System.Windows.DependencyPropertyChangedEventArgs,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.OnLayoutInfoChanged(NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo,NationalInstruments.Controls.Primitives.RelativePanelLayoutInfo)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.PositionProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.Position'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.Position'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.IsInvertedProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.IsInverted'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.IsInverted'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.ArcSweepProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.ArcSweep"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.ArcSweep"/> attached property.
            </returns>
            <attachedmember name="ArcSweep">
      <summary>Gets or sets the radial arc in which layout occurs.</summary>
      <value>The radial arc in which layout occurs. The default value is a full counter-clockwise circle.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutModeProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutMode"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutMode"/> attached property.
            </returns>
            <attachedmember name="LayoutMode">
      <summary>Gets or sets the layout mode used to arrange a child in the panel.</summary>
      <value>The layout mode used to arrange a child in the panel. The default value is <see cref="F:NationalInstruments.Controls.Primitives.RadialLayoutMode.Default"/>.</value>
    </attachedmember>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GetArcSweep(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.ArcSweep"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.ArcSweep"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.SetArcSweep(System.Windows.UIElement,NationalInstruments.Controls.ArcSweep)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.ArcSweep"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.ArcSweep"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GetLayoutMode(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutMode"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutMode"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.SetLayoutMode(System.Windows.UIElement,NationalInstruments.Controls.Primitives.RadialLayoutMode)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutMode"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Primitives.RadialLayoutMode"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.Position">
            <summary>Gets or sets the position of the panel.</summary><value>The position of the panel. The default value is <see cref="F:NationalInstruments.Controls.RelativePosition.Far"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.IsInverted">
            <summary>Gets or sets a value indicating whether to invert the position of elements along the panel.</summary><value>A value indicating whether to invert the position of elements along the panel. The default value is <see langword="false"/>.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo">
            <summary>Contains the layout information for a group of elements in a stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.#ctor(NationalInstruments.Controls.Primitives.RelativeScalePanelGroup)">
            <exclude/><summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.UpdateOffset(System.Double)">
            <exclude/><summary>Updates the value of <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.Offset"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.UpdateSize(System.Double)">
            <exclude/><summary>Updates the value of <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.Size"/> with the larger of the current and specified sizes.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.UpdateOverlap(NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo,NationalInstruments.Controls.Primitives.RelativeScalePanelStack)">
            <exclude/><summary>Updates <see cref="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.OverlappingGroups"/> if the groups overlap.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.GetTransform(System.Windows.UIElement,System.Windows.Rect,NationalInstruments.Controls.ArcSweep,NationalInstruments.Controls.Primitives.RadialEdge,System.Boolean,System.Nullable{System.Double})">
            <exclude/><summary>Gets the transform for an element in a stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.GetTransform(System.Windows.Size,NationalInstruments.Controls.Internal.Pair{System.Double,NationalInstruments.Controls.RelativeAlignment},NationalInstruments.Controls.Internal.Pair{System.Double,NationalInstruments.Controls.RelativeAlignment},NationalInstruments.Controls.RelativeOrientation,System.Windows.UIElement,System.Windows.Rect,NationalInstruments.Controls.ArcSweep,NationalInstruments.Controls.Primitives.RadialEdge,System.Nullable{System.Double})">
            <exclude/><summary>Gets the transform for an element in a stack.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.Id">
            <exclude/><summary>Gets the group identifier.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.Offset">
            <exclude/><summary>Gets the offset of the group from the start of the stack.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.Size">
            <exclude/><summary>Gets the primary size of the group.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.GroupInfo.OverlappingGroups">
            <exclude/><summary>Gets the group identifier.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.StackInfo">
            <summary>Contains the layout information for a stack of grouped elements.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.StackInfo.#ctor(NationalInstruments.Controls.Primitives.RelativeScalePanelStack)">
            <exclude/><summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.StackInfo"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.StackInfo.GetSize">
            <exclude/><summary>Gets the total size of all groups in the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.StackInfo.UpdateOverlap(System.Collections.Generic.ICollection{NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.StackInfo})">
            <exclude/><summary>Updates groups in the current stack that overlap other stack groups.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.StackInfo.GetGroup(NationalInstruments.Controls.Primitives.RelativeScalePanelGroup)">
            <exclude/><summary>Gets the group with the specified ID.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.StackInfo.AddChildToGroup(NationalInstruments.Controls.Primitives.RelativeScalePanelGroup,System.Double)">
            <exclude/><summary>Adds a child to the specified group.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.StackInfo.Id">
            <exclude/><summary>Gets the stack identifier.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo">
            <summary>Contains the layout information for all stacks of grouped elements in the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.ArcSweep">
            <exclude/><summary>Gets the arc covered by the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.Edge">
            <exclude/><summary>Gets the orientation of the panel.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.IsInverted">
            <exclude/><summary>Gets a value indicating whether to invert children in the panel.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.#ctor(NationalInstruments.Controls.ArcSweep,NationalInstruments.Controls.RelativePosition,System.Boolean)">
            <exclude/><summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.Complete">
            <exclude/><summary>Finalizes layout calculations across all stack groups.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.GetPanelBounds(System.Windows.Size)">
            <exclude/><summary>Gets the desired bounds of the panel.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.GetGroup(NationalInstruments.Controls.Primitives.RelativeScalePanelStack,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup)">
            <exclude/><summary>Gets the group with the specified ID in the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.AddChildToGroup(NationalInstruments.Controls.Primitives.RelativeScalePanelStack,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup,System.Double)">
            <exclude/><summary>Adds a child to the specified group.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.UpdateOverhang(System.Double,System.Double,System.Double)">
            <exclude/><summary>Updates the appropriate overhang value for the child at the specified position.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.UpdateOverhang(System.Double,System.Double)">
            <exclude/><summary>Updates the overhang values for the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.GetGroupBounds(System.Windows.Rect,NationalInstruments.Controls.Primitives.RelativeScalePanelStack,NationalInstruments.Controls.Primitives.RelativeScalePanelGroup,System.Boolean)">
            <exclude/><summary>Updates the overhang values for the stack.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.FromBounds(System.Windows.Rect)">
            <exclude/><summary>Gets a region panel layout info with the specified bounds.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.NearOverhang">
            <exclude/><summary>Gets the largest overhang on the near side of the panel.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.FarOverhang">
            <exclude/><summary>Gets the largest overhang on the far side of the panel.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.LargestChildSize">
            <exclude/><summary>Gets the secondary size of the largest child in the panel.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RelativeRadialScalePanel.LayoutInfo.LargestStackSize">
            <exclude/><summary>Gets the size of the largest stack in the panel.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup">
            <summary>Identifies the group an element belongs in.</summary>
            <seealso cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Group"/>
            <lastupdated>2014-06-19 3:32:06 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup.Default">
            <summary>Indicates the element belongs in the default group.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup.Baseline">
            <summary>Indicates the element belongs in the group for the scale baseline.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup.Divisions">
            <summary>Indicates the element belongs in the group for the scale divisions.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup.DivisionTicks">
            <summary>Indicates the element belongs in the group for the ticks of the scale divisions.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup.DivisionLabels">
            <summary>Indicates the element belongs in the group for the labels of the scale divisions.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup.Label">
            <summary>Indicates the element belongs in the group for the scale label.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelGroup.End">
            <summary>Indicates the element belongs in the last group.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RelativeScalePanelStack">
            <summary>Identifies the stack an element belongs in.</summary>
            <seealso cref="P:NationalInstruments.Controls.Primitives.RelativeScalePanel.Stack"/>
            <lastupdated>2014-06-19 3:32:06 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelStack.Default">
            <summary>Indicates the element belongs in the default stack.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelStack.MinorDivisions">
            <summary>Indicates the element belongs in the stack for the scale <seealso cref="P:NationalInstruments.Controls.Primitives.RangeScale.MinorDivisions"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelStack.MajorDivisions">
            <summary>Indicates the element belongs in the stack for the scale <seealso cref="P:NationalInstruments.Controls.Primitives.RangeScale.MajorDivisions"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RelativeScalePanelStack.CustomDivisions">
            <summary>Indicates the element belongs in the stack for the scale <seealso cref="P:NationalInstruments.Controls.Primitives.RangeScale.CustomDivisions"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ScaleHost">
            <summary>Hosts the visual representation for a scale.</summary>
            <remarks>
            <see cref="T:NationalInstruments.Controls.Primitives.ScaleHost"/> is responsible for hosting the UI elements that make up the visual
            representation of a scale.
            </remarks>
            <lastupdated>6/1/2012 11:38:44 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ScaleHost.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ScaleHost"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ScaleHost.#ctor(System.Windows.Controls.Control)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ScaleHost"/> class with the specified owner.</summary>
            <param name="owner">The owner of the scale.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ScaleHost.GetLayoutClip(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ScaleHost.OwnerProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ScaleHost.Owner'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ScaleHost.Owner'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ScaleHost.ScaleProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ScaleHost.Scale'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ScaleHost.Scale'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ScaleHost.PresenterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ScaleHost.Presenter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ScaleHost.Presenter'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ScaleHost.Owner">
            <summary>Gets or sets the owner of the scale.</summary><value>The owner of the scale. The default value is <see langword="null"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ScaleHost.Scale">
            <summary>Gets or sets the scale to visualize.</summary><value>The scale to visualize. The default value is <see langword="null"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ScaleHost.Presenter">
            <summary>Gets or sets the visual presenter for the scale.</summary><value>The visual presenter for the scale. The default value is <see langword="null"/>.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.SingleValuePresenter">
            <summary>
            Displays a single value via a <see cref="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.ValuePresenter"/>.
            </summary>
            <remarks>
            Use <see cref="T:NationalInstruments.Controls.Primitives.SingleValuePresenter"/> to present a
            single value. The <see cref="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.ValuePresenter"/>
            will be used to present <see cref="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Value"/>.
            </remarks>
            <lastupdated>6/1/2012 1:56:50 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.SingleValuePresenter.Refresh">
            <summary>Updates the display value.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.SingleValuePresenter.ValuePresenterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.ValuePresenter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.ValuePresenter'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.SingleValuePresenter.ContextProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Context'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Context'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.SingleValuePresenter.ValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Value'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Value'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.SingleValuePresenter.HorizontalContentAlignmentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.HorizontalContentAlignment'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.HorizontalContentAlignment'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.SingleValuePresenter.VerticalContentAlignmentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.VerticalContentAlignment'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.SingleValuePresenter.VerticalContentAlignment'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.ValuePresenter">
            <summary>Gets or sets the presenter used to display <see cref="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Value"/>.</summary><value>The presenter used to display <see cref="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Value"/>. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 1:52:00 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Context">
            <summary>Gets or sets the context used to present <see cref="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Value"/>.</summary><value>The context used to display <see cref="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Value"/>. The default value is <see langword="null"/>.</value><lastupdated>2014-11-14 1:24:52 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.Value">
            <summary>Gets or sets the value to present.</summary><value>The value to present. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 1:51:31 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.HorizontalContentAlignment">
            <inheritdoc cref="P:System.Windows.Controls.Control.HorizontalContentAlignment"/><value>One of the <see cref="T:System.Windows.HorizontalAlignment"/> values. The default is <see cref="F:System.Windows.HorizontalAlignment.Left"/>.</value><lastupdated>6/6/2012 3:16:36 PM</lastupdated><updatedby>Lisa</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.SingleValuePresenter.VerticalContentAlignment">
            <inheritdoc cref="P:System.Windows.Controls.Control.VerticalContentAlignment"/><value>One of the <see cref="T:System.Windows.VerticalAlignment"/> values. The default is <see cref="F:System.Windows.VerticalAlignment.Top"/>.</value><lastupdated>6/6/2012 3:18:30 PM</lastupdated><updatedby>Lisa</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.Spinner">
            <exclude/>
            <summary>
            Represents a pair of increase and decrease buttons used to modify a value.
            </summary>
            <remarks>
            To achieve "fill to height" sizing behavior, include the <see cref="T:NationalInstruments.Controls.Primitives.Spinner"/> in a control template after
            any "naturally measuring" elements, such as text controls.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/7/2012 8:35:47 AM</lastupdated>
            <updatedby>LabVIEW</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Spinner.MeasureOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.Spinner.ArrangeOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Spinner.AspectRatioProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.AspectRatio'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.AspectRatio'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Spinner.IncreaseCommandProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.IncreaseCommand'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.IncreaseCommand'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Spinner.DecreaseCommandProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.DecreaseCommand'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.DecreaseCommand'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Spinner.IncreaseCommandParameterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.IncreaseCommandParameter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.IncreaseCommandParameter'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Spinner.DecreaseCommandParameterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.DecreaseCommandParameter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.DecreaseCommandParameter'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Spinner.IncreaseContentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.IncreaseContent'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.IncreaseContent'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Spinner.DecreaseContentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.DecreaseContent'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.DecreaseContent'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Spinner.ContentTemplateProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.ContentTemplate'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.ContentTemplate'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.Spinner.ButtonStyleProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.ButtonStyle'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.Spinner.ButtonStyle'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Spinner.AspectRatio">
            <summary>Gets or sets the aspect ratio of the buttons.</summary><value> The default value is <c>0.5</c>.</value><lastupdated>4/19/2012 3:55:35 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Spinner.IncreaseCommand">
            <summary>Gets or sets the command that is executed when the increase button is clicked.</summary><value>
The default value is <see langword="null"/>.
</value><lastupdated>6/8/2012 2:17:07 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Spinner.DecreaseCommand">
            <summary>Gets or sets the command that executes when the decrease button is clicked.</summary><value>
The default value is <see langword="null"/>.
</value><lastupdated>6/8/2012 2:17:01 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Spinner.IncreaseCommandParameter">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/Spinner.xml" path="/doc/member[@name=&quot;IncreaseCommandParameter&quot;]/*"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Spinner.DecreaseCommandParameter">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/Spinner.xml" path="/doc/member[@name=&quot;DecreaseCommandParameter&quot;]/*"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Spinner.IncreaseContent">
            <summary>Gets or sets the content to display in the increase button.</summary><value>
The default value is <see langword="null"/>.
</value><lastupdated>6/8/2012 2:17:10 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Spinner.DecreaseContent">
            <summary>Gets or sets the content to display in the decrease button.</summary><value>
The default value is <see langword="null"/>.
</value><lastupdated>6/8/2012 2:17:04 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Spinner.ContentTemplate">
            <summary>Gets or sets the template to use for the content of the buttons.</summary><value>
The default value is <see langword="null"/>.
</value><lastupdated>6/8/2012 2:16:45 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.Spinner.ButtonStyle">
            <summary>Gets or sets the style to use for the buttons.</summary><value>
The default value is <see langword="null"/>.
</value><lastupdated>6/8/2012 2:16:38 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.TickStrip">
            <exclude/><summary>Renders ticks for a scale.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TickStrip.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TickStrip.MeasureOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TickStrip.OnRender(System.Windows.Media.DrawingContext)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.TickStrip.PreferSeparateVisualsProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.TickStrip.PreferSeparateVisuals'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.TickStrip.PreferSeparateVisuals'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.TickStrip.TickShapeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.TickStrip.TickShape'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.TickStrip.TickShape'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.TickStrip.TickSizeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.TickStrip.TickSize'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.TickStrip.TickSize'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.TickStrip.TickBrushProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.TickStrip.TickBrush'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.TickStrip.TickBrush'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TickStrip.Divisions">
            <exclude/><summary>Gets the relative division values to render.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TickStrip.PreferSeparateVisuals">
            <summary>Gets or sets the divisions visual configuration setting.</summary><value>The divisions visual configuration setting. The default value is <see langword="null"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TickStrip.TickShape">
            <summary>Gets or sets the shape of rendered ticks.</summary><value>The shape of rendered ticks. The default value is <see langword="null"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TickStrip.TickSize">
            <summary>Gets or sets the size of rendered ticks.</summary><value>The size of rendered ticks. The default value is <see cref="P:System.Windows.Size.Empty"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TickStrip.TickBrush">
            <summary>Gets or sets the brush used to render ticks.</summary><value>The brush used to render ticks. The default value is <see langword="null"/>.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ValueFormatter">
            <summary>
            Provides a means for text formatting of a data value.
            </summary>
            <remarks>
            <see cref="T:NationalInstruments.Controls.Primitives.ValueFormatter"/> is
            a <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenter"/> that presents values as
            formatted strings.
            </remarks>
            <lastupdated>6/1/2012 2:10:44 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ValuePresenter">
            <summary>
            Base class for all value presenters, which provide a means for visually displaying a data value.
            </summary>
            <remarks>
            Value presenters are used to present arbitrary values in controls. Implementers override the
            <see cref="M:NationalInstruments.Controls.Primitives.ValuePresenter.VisualizeCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)"/>
            method, which generates UI elements to display a value.
            </remarks>
            <lastupdated>6/1/2012 2:23:23 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenter"/> class.</summary>
            <lastupdated>4/22/2015 2:24:37 PM</lastupdated>
            <updatedby>Staci</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenter.Visualize``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <summary>
            Transforms the specified raw data value into a visual element.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="value">The value to display.</param>
            <param name="args">Additional arguments.</param>
            <param name="existingVisual">The existing visual to re-use. If null, a new visual will be created.</param>
            <returns>A visual that represents the value.</returns>
            <remarks>
             If <paramref name="existingVisual"/>
            is not <see langword="null"/>, it may be re-used and have the new value assigned directly;
            otherwise, a new visual will be created.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="args"/> is <see langword="null"/>.</exception>
            <lastupdated>6/1/2012 2:24:37 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenter.Visualize(System.Object,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <summary>
            Transforms the specified raw data value into a visual element.
            </summary>
            <param name="value">The value to display.</param>
            <param name="args">Additional arguments.</param>
            <param name="existingVisual">The existing visual to re-use. If null, a new visual will be created.</param>
            <returns>A visual that represents the value.</returns>
            <remarks>
            If <paramref name="existingVisual"/>
            is not <see langword="null"/>, it may be re-used and have the new value assigned directly;
            otherwise, a new visual will be created.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="args"/> is <see langword="null"/>.</exception>
            <lastupdated>6/1/2012 2:24:12 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenter.VisualizeCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <summary>
            Overridden in derived classes to transforms the specified raw data value into a visual element.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="value">The value to display.</param>
            <param name="args">Additional arguments.</param>
            <param name="existingVisual">The existing visual to re-use. If null, a new visual will be created.</param>
            <returns>A visual that represents the value.</returns>
            <remarks>
            If <paramref name="existingVisual"/>  is not <see langword="null"/>, you may be re-use the visual directly
            assign the new value to it.
            </remarks>
            <lastupdated>6/1/2012 2:25:25 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ValuePresenter.InternalVisualizeCall">
            <exclude/><summary>Indicates when VisualizeCore is called through VisualizeInternal, so that the internal call can be passed on to FormateCore.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenter.VisualizeInternal``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <exclude/><summary>Allows access to the VisualizeCore method from <see cref="T:NationalInstruments.Controls.Internal.ValuePresenterHelper"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValueFormatter.VisualizeCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValueFormatter.Format``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <summary>
            Formats the specified raw data value into a string representation.
            </summary>
            <remarks>
            If the formatter is configured to display the value with sufficient precision, then
            calling TryParse on the value returned by Format should always return the original raw data value.
            </remarks>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="value">The value to be formatted.</param>
            <param name="args">Additional arguments.</param>
            <returns>The formatted value.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="args"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValueFormatter.FormatCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <summary>
            Implements the logic to format the specified raw data value into a string representation.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="value">The value to be formatted.</param>
            <param name="args">Additional arguments.</param>
            <returns>The formatted value.</returns>
            <lastupdated>6/19/2012 10:05:52 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValueFormatter.Parse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <summary>
            Parses the specified string value representation.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="value">The value to parse.</param>
            <param name="args">Additional arguments.</param>
            <returns>The parsed value.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="args"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValueFormatter.TryParse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs,``0@)">
            <summary>
            Attempts to parse the specified string value representation.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="value">The value to parse.</param>
            <param name="args">Additional arguments.</param>
            <param name="parsedValue">The parsed value.</param>
            <returns><see langword="true"/> if the value was successfully parsed; otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="args"/> is <see langword="null"/>.</exception>
            <lastupdated>6/1/2012 1:59:49 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValueFormatter.WeakFormat(System.Object,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <exclude/><summary>Formats a value outside of a strongly-typed context.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValueFormatter.FormatInternal``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <exclude/><summary>Allows access to the FormatCore method from <see cref="T:NationalInstruments.Controls.Internal.ValuePresenterHelper"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ValueFormatter.BackgroundProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.Background'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.Background'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ValueFormatter.ForegroundProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.Foreground'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.Foreground'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ValueFormatter.FontFamilyProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontFamily'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontFamily'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ValueFormatter.FontSizeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontSize'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontSize'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ValueFormatter.FontStretchProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontStretch'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontStretch'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ValueFormatter.FontStyleProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontStyle'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontStyle'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ValueFormatter.FontWeightProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontWeight'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ValueFormatter.FontWeight'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValueFormatter.SetFormattedValue">
            <exclude/><summary>Convenience override for formatting text in the text block created by ValueFormatter.VisualizeCore.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValueFormatter.Background">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Brush"/> that is used to draw the background of the presented content.</summary><value>A <see cref="T:System.Windows.Media.Brush"/> that is used to draw the background of presented content. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 2:12:58 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValueFormatter.Foreground">
            <summary>Gets or sets a brush that describes the foreground color.</summary><value>A brush that describes the foreground color. The default value is default(Brush).</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValueFormatter.FontFamily">
            <summary>Gets or sets the font used to display text.</summary><value>The font used to display text. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 2:14:44 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValueFormatter.FontSize">
            <summary>Gets or sets the size of the text.</summary><value>The size of the text. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 2:15:02 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValueFormatter.FontStretch">
            <summary>Gets or sets the degree to which a font is condensed or expanded on the screen.</summary><value>The degree to which a font is condensed or expanded on the screen. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 2:15:16 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValueFormatter.FontStyle">
            <summary>Gets or sets the style in which the text is rendered.</summary><value>The style in which the text is rendered. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 2:15:29 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValueFormatter.FontWeight">
            <summary>Gets or sets the thickness of the specified font.</summary><value>The thickness of the specified font. The default value is <see langword="null"/>.</value><lastupdated>6/1/2012 2:15:42 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ValueFormatterCollection">
            <summary>
            Represents a collection of value formatters.
            </summary>
            <remarks>
            <see cref="T:NationalInstruments.Controls.Primitives.ValueFormatterCollection"/> is used to
            represent a collection of <see cref="T:NationalInstruments.Controls.Primitives.ValueFormatter"/>
            instances.
            </remarks>
            <lastupdated>6/1/2012 2:19:33 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValueFormatterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ValueFormatterCollection"/> class.
            </summary>
            <lastupdated>11/22/2011 1:12:02 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ValuePresenterArgs">
            <summary>Provides data for <see cref="M:NationalInstruments.Controls.Primitives.ValuePresenter.Visualize(System.Object,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)"/> method calls.</summary>
            <remarks>
            Use <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenterArgs"/> to provide
            information for <see cref="M:NationalInstruments.Controls.Primitives.ValuePresenter.Visualize(System.Object,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)"/>
            calls.
            </remarks>
            <lastupdated>6/1/2012 2:28:55 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ValuePresenterArgs.OriginalValue">
            <summary>Identifies the original value being formatted, if different from specified value.</summary>
            <remarks>This is the key for an optional argument that may appear in the <see cref="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Data"/> dictionary.</remarks>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenterArgs.#ctor(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenterArgs"/> class with the specified culture.
            </summary>
            <param name="context">The context of the ValuePresenterArgs. Often the parent control.</param>
            <param name="culture">The culture to use.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="culture"/> is <see langword="null"/>.
            </exception>
            <lastupdated>11/22/2011 1:12:15 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenterArgs.#ctor(System.Object,System.Globalization.CultureInfo,System.Windows.Media.Brush)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenterArgs"/> class with the specified values.
            </summary>
            <param name="context">The context of the ValuePresenterArgs. Often the parent control.</param>
            <param name="culture">The culture to use.</param>
            <param name="foreground">The foreground of the parent control, or <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="culture"/> is <see langword="null"/>.
            </exception>
            <lastupdated>11/22/2011 1:12:35 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenterArgs.#ctor(System.Object,System.Globalization.CultureInfo,System.Windows.Media.Brush,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenterArgs"/> class with the specified values.
            </summary>
            <param name="context">The context of the ValuePresenterArgs. Often the parent control.</param>
            <param name="culture">The culture to use.</param>
            <param name="foreground">The foreground of the parent control, or <see langword="null"/>.</param>
            <param name="fontSize">The font size of the parent control, or <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="culture"/> is <see langword="null"/>.
            </exception>
            <lastupdated>11/22/2011 1:12:35 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenterArgs.ChangeContext(System.Object)">
            <summary>
            Returns a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenterArgs"/> class with the specified context.
            </summary>
            <param name="context">The context of the ValuePresenterArgs. Often the parent control.</param>
            <returns>
            A new linked <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenterArgs"/> instance with <see cref="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Context"/> initialized to <paramref name="context"/>,
            or the current value if <paramref name="context"/> is the same as the current <see cref="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Context"/> value.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ValuePresenterArgs.TryGetDataValue``1(System.String,``0@)">
            <exclude/><summary>Convenience method for accessing cached values in <see cref="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Data"/>.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Data">
            <summary>Gets a collection of data related to the current set of values being presented.</summary>
            <value>A collection of data related to the current set of values being presented.</value>
            <remarks>
            Use the <see cref="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Data"/> collection to store and retrieve state information for a presenter during one present session.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Context">
            <summary>Gets the context from the parent control, or <see langword="null"/> if none was provided.</summary>
            <value>An object that represents any relevant context. The default is <see langword="null" />.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Culture">
            <summary>Gets the culture the <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenter"/> should use.</summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> for formatting the <see cref="T:NationalInstruments.Controls.Primitives.ValuePresenter"/>. The default is <see langword="null"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.Foreground">
            <summary>Gets the foreground brush from the parent control, or <see langword="null"/> if none was provided.</summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> for the foreground. The default value is <see langword="null"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ValuePresenterArgs.FontSize">
            <summary>Gets the font size from the parent control, or <see langword="null"/> if none was provided.</summary>
            <value>A size for the font. The default value is <see langword="null" />.</value>
        </member>
        <member name="T:NationalInstruments.Controls.ArcSweep">
            <summary>
            Represents the length of the visual arc.
            </summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>4/9/2012 12:50:50 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.ArcSweep.DefaultStartAngle">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="F:NationalInstruments.Controls.ArcSweep.DefaultSweepAngle">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.ArcSweep" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>11/2/2011 1:43:43 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.ArcSweep" crefType="Unqualified"/> class that contains the specified start angle and sweep angle.
            </summary>
            <param name="startAngle">The angle in degrees where the arc begins.</param>
            <param name="sweepAngle">The measured length of the arc in degrees.</param>
            <lastupdated>4/6/2012 1:45:49 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.ToString(System.IFormatProvider)">
            <inheritdoc cref="M:System.Object.ToString"/>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information. This parameter can be null.</param>
            <lastupdated>5/22/2012 2:13:58 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.ToString(System.String,System.IFormatProvider)">
            <inheritdoc cref="M:System.Object.ToString"/>
            <param name="format">Specifies how the arc sweep is formatted.   Valid values are in the same format as <see cref="T:System.Double"/>.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information. This parameter can be null.</param>
            <lastupdated>5/22/2012 2:14:32 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.Parse(System.String)">
            <inheritdoc cref="M:NationalInstruments.Controls.ArcSweep.Parse(System.String,System.IFormatProvider)"/>
            <summary>
            Constructs an <see cref="T:NationalInstruments.Controls.ArcSweep" crefType="Unqualified"/> from the specified <see cref="T:System.String"/>.
            </summary>
            <lastupdated>4/6/2012 1:48:02 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.Parse(System.String,System.IFormatProvider)">
            <summary>
            Constructs an <see cref="T:NationalInstruments.Controls.ArcSweep" crefType="Unqualified"/> from the specified <see cref="T:System.String"/> using the specified culture-specific format.
            </summary>
            <param name="value">A string containing the arc sweep to convert.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information about the string.</param>
            <returns>An <see cref="T:NationalInstruments.Controls.ArcSweep" crefType="Unqualified"/> equivalent to the string specified in <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            <paramref name="value"/> is not in the <c>[value],[value]</c> format returned by <see cref="M:NationalInstruments.Controls.ArcSweep.ToString"/>.
            </exception>
            <lastupdated>4/9/2012 8:24:43 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.TryParse(System.String,NationalInstruments.Controls.ArcSweep@)">
            <summary>
            Constructs an <see cref="T:NationalInstruments.Controls.ArcSweep"/> from the specified <see cref="T:System.String"/>.
            The return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">A string containing the arc sweep to convert.</param>
            <param name="arcSweep">An <see cref="T:NationalInstruments.Controls.ArcSweep"/> equivalent to the string specified in <paramref name="value"/>.</param>
            <returns><see langword="true"/> if <paramref name="value"/> was converted successfully; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <lastupdated>4/9/2012 8:40:10 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.TryParse(System.String,System.IFormatProvider,NationalInstruments.Controls.ArcSweep@)">
            <summary>
            Constructs an <see cref="T:NationalInstruments.Controls.ArcSweep"/> from the specified <see cref="T:System.String"/> using the specified culture-specific format.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">A string containing the arc sweep to convert.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information about the string.</param>
            <param name="arcSweep">An <see cref="T:NationalInstruments.Controls.ArcSweep"/> equivalent to the string specified in <paramref name="value"/>.</param>
            <returns><see langword="true"/> if <paramref name="value"/> was converted successfully; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <lastupdated>4/9/2012 8:41:47 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.GetRelativeBounds">
            <exclude/><summary>Gets the bounds of the pie wedge covered by the arc, relative to the unit-diameter circle.</summary>
            <seealso href="http://stackoverflow.com/questions/4201750/pie-slice-bounding-rectangle"/>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.GetDesiredSize(System.Windows.Rect,System.Windows.Size,System.Double,System.Double,System.Double)">
            <exclude/><summary>Determines the desired size of an arc with the given size constraints.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.GetInteriorBounds(System.Windows.Rect,System.Windows.Size,System.Double,System.Double)">
            <exclude/><summary>Determines the interior bounds of an arc with the given size constraints.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.GetFullBounds(System.Windows.Rect,System.Windows.Size,System.Double,System.Double)">
            <exclude/><summary>Determines the full bounds of the circle containing an arc with the given size constraints.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.ArcSweep.StartAngleProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ArcSweep.StartAngle'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ArcSweep.StartAngle'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ArcSweep.SweepAngleProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ArcSweep.SweepAngle'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ArcSweep.SweepAngle'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.ArcSweep.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.ArcSweep.StartAngle">
            <summary>Gets or sets the angle in degrees where the arc begins.</summary><value>A value of type <see cref="T:System.Double"/>. The default value is 225.</value><exception cref="T:System.ArgumentException">
      <paramref name="value"/> is <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.NegativeInfinity"/>, or <see cref="F:System.Double.PositiveInfinity"/>.
    </exception><remarks>The angle is measured from 3 o'clock as zero degrees and continuing counterclockwise. The value is coerced to be between 0 and 360.</remarks><lastupdated>6/8/2012 1:57:20 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ArcSweep.SweepAngle">
            <summary>Gets or sets the measured length of the arc in degrees, measured from the start angle.</summary><value>A value of type <see cref="T:System.Double"/>. The default value is -270.</value><exception cref="T:System.ArgumentException">
      <paramref name="value"/> is <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.NegativeInfinity"/>, or <see cref="F:System.Double.PositiveInfinity"/>.
    </exception><remarks>Positive values go counterclockwise and negative values go clockwise. Value is coerced to be between -360 and 360.</remarks><lastupdated>6/8/2012 1:54:03 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.CustomDivision">
            <summary>
            Represents a custom division on a scale.
            </summary>
            <seealso cref="P:NationalInstruments.Controls.Primitives.RangeScale.MajorDivisions"/>
            <remarks>
            The <see cref="T:NationalInstruments.Controls.RangeLabeledDivisions"/> class represents
            a set of labeled divisions on a range scale.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>9/16/2014 4:31:47 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.ScaleLabeledDivisions">
            <summary>Provides labels for divisions on the scale.
            </summary>
            <remarks>
            Use the <see cref="T:NationalInstruments.Controls.ScaleLabeledDivisions"/> class to describe
            how to display labeled divisions on a scale.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/30/2012 1:42:54 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.ScaleDivisions">
            <summary>
            Represents a set of divisions on a scale.
            </summary>
            <remarks>
            Use instances of the <see cref="T:NationalInstruments.Controls.ScaleDivisions"/> class to
            describe how divisions should be drawn on a scale.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/30/2012 1:23:19 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleDivisions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.ScaleDivisions" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>5/3/2012 11:09:15 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleDivisions.CreateDivisionsPresenter(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)">
            <summary>
            Creates a presenter for the <see cref="T:NationalInstruments.Controls.ScaleDivisions"/> component of <paramref name="scale"/>.
            </summary>
            <param name="host">The host for the presenter.</param>
            <param name="scale">The scale to present.</param>
            <param name="sourceProperty">The property on <paramref name="scale"/> where the <see cref="T:NationalInstruments.Controls.ScaleDivisions"/> instance is stored.</param>
            <returns>A presenter for the <see cref="T:NationalInstruments.Controls.ScaleDivisions"/> component of <paramref name="scale"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="host"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="scale"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="sourceProperty"/> is <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleDivisions.CreateDivisionsPresenterCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)">
            <inheritdoc cref="M:NationalInstruments.Controls.ScaleDivisions.CreateDivisionsPresenter(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)"/>
            <summary>Implements the <see cref="M:NationalInstruments.Controls.ScaleDivisions.CreateDivisionsPresenter(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)"/> method.</summary>
            <remarks>Returns an empty presenter that does not generate visuals.</remarks>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleDivisions.TickVisibilityProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ScaleDivisions.TickVisibility'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ScaleDivisions.TickVisibility'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleDivisions.TickMarkProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ScaleDivisions.TickMark'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ScaleDivisions.TickMark'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleDivisions.TickSizeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ScaleDivisions.TickSize'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ScaleDivisions.TickSize'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleDivisions.TickBrushProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ScaleDivisions.TickBrush'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ScaleDivisions.TickBrush'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleDivisions.MajorDivisionValuesProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.ScaleDivisions.MajorDivisionValues"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.ScaleDivisions.MajorDivisionValues"/> attached property.
            </returns>
            <attachedmember name="MajorDivisionValues">
      <summary>Gets or sets the major divisions generated for a scale.</summary>
      <value>The major divisions generated for a scale. The default value is <see langword="null"/>.</value>
      <remarks>This property is initialized by the divisions presenter returned by <see. cref="M:NationalInstruments.Controls.ScaleDivisions.CreateDivisionsPresenter(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)"/>.</remarks>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleDivisions.MinorDivisionValuesProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.ScaleDivisions.MinorDivisionValues"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.ScaleDivisions.MinorDivisionValues"/> attached property.
            </returns>
            <attachedmember name="MinorDivisionValues">
      <summary>Gets or sets the minor divisions generated for a scale.</summary>
      <value>The minor divisions generated for a scale. The default value is <see langword="null"/>.</value>
      <remarks>This property is initialized by the divisions presenter returned by <see. cref="M:NationalInstruments.Controls.ScaleDivisions.CreateDivisionsPresenter(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)"/>.</remarks>
    </attachedmember>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleDivisions.GetMajorDivisionValues(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.ScaleDivisions.MajorDivisionValues"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.ScaleDivisions.MajorDivisionValues"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleDivisions.SetMajorDivisionValues(NationalInstruments.Controls.Primitives.ScaleHost,System.Object)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.ScaleDivisions.MajorDivisionValues"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Object"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleDivisions.GetMinorDivisionValues(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.ScaleDivisions.MinorDivisionValues"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.ScaleDivisions.MinorDivisionValues"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleDivisions.SetMinorDivisionValues(NationalInstruments.Controls.Primitives.ScaleHost,System.Object)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.ScaleDivisions.MinorDivisionValues"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Object"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleDivisions.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleDivisions.AllDivisionValuesProperties">
            <exclude/><summary>Gets the attached division values properties.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleDivisions.TickVisibility">
            <summary>Gets or sets the visibility of the tick marks on the scale.</summary><value>The default value is <see cref="F:System.Windows.Visibility.Visible"/>.</value><lastupdated>5/3/2012 12:14:16 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleDivisions.TickMark">
            <summary>Gets or sets the shape of the tick marks on the scale.</summary><value>The shape of the tick marks. The default value is <see cref="P:NationalInstruments.Controls.TickShape.Rectangle"/>.</value><lastupdated>5/3/2012 12:09:20 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleDivisions.TickSize">
            <summary>Gets or sets the size of the tick marks on the scale.</summary><value>The default value is a Size that is 1 unit wide by 5 units tall.</value><lastupdated>6/18/2012 4:47:39 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleDivisions.TickBrush">
            <summary>Gets or sets the brush used to draw tick marks on the scale.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>5/3/2012 12:08:33 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleLabeledDivisions.CreateDivisionsPresenterCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleLabeledDivisions.LabelOrientationProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelOrientation'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelOrientation'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleLabeledDivisions.LabelVisibilityProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelVisibility'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelVisibility'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleLabeledDivisions.LabelBrushProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelBrush'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelBrush'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleLabeledDivisions.LabelPresenterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelPresenter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelPresenter'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ScaleLabeledDivisions.LabelAlignmentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelAlignment'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelAlignment'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleLabeledDivisions.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelOrientation">
            <summary>Gets or sets the relative orientation of the labels on the scale.</summary><value>The default value is <see cref="P:NationalInstruments.Controls.RelativeOrientation.None"/>.</value><lastupdated>5/3/2012 3:03:04 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelVisibility">
            <summary>Gets or sets the visibility of the labels on the scale.</summary><value>The default value is <see cref="F:System.Windows.Visibility.Visible"/>.</value><lastupdated>5/3/2012 3:05:45 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelBrush">
            <summary>Gets or sets the brush used to display the labels on the scale.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 1:49:02 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelPresenter">
            <summary>Gets or sets the presenter or formatter for the labels on the scale.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 1:49:42 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelAlignment">
            <summary>Gets or sets the relative alignment of the labels on the scale.</summary><value>The default value is <see cref="F:NationalInstruments.Controls.RelativeAlignment.Center"/>.</value><lastupdated>5/3/2012 3:03:04 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.CustomDivision.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.CustomDivision"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.CustomDivision.#ctor(System.Object)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.CustomDivision"/> class.</summary>
            <param name="value">The data value of the division.</param>
        </member>
        <member name="M:NationalInstruments.Controls.CustomDivision.CreateDivisionsPresenter(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty,System.Int32)">
            <summary>
            Creates a presenter for the <see cref="T:NationalInstruments.Controls.ScaleDivisions"/> component of <paramref name="scale"/>.
            </summary>
            <param name="host">The host for the presenter.</param>
            <param name="scale">The scale to present.</param>
            <param name="sourceProperty">The property on <paramref name="scale"/> where the <see cref="T:NationalInstruments.Controls.ScaleDivisions"/> instance is stored.</param>
            <param name="index">The index of the custom division.</param>
            <returns>A presenter for the <see cref="T:NationalInstruments.Controls.ScaleDivisions"/> component of <paramref name="scale"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="host"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="scale"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="sourceProperty"/> is <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.CustomDivision.CreateDivisionsPresenterCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.CustomDivision.ToString">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.CustomDivision.ValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.CustomDivision.Value'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.CustomDivision.Value'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.CustomDivision.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.CustomDivision.Value">
            <summary>Gets or sets the data value of the division.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>9/23/2014 2:33:16 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.CustomDivision.CustomDivisionsCompositeScalePresenter">
            <summary>The CustomDivisionsCompositeScalePresenter class.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.GeneralValueFormatter">
            <summary>
            Uses a string format argument to display a value.
            </summary>
            <remarks>
            Use the <see cref="T:NationalInstruments.Controls.GeneralValueFormatter"/> class when you
            wish to format displayed values. Set the <see cref="P:NationalInstruments.Controls.GeneralValueFormatter.Format"/>
            property to the desired formatting string. Set the <see cref="P:NationalInstruments.Controls.GeneralValueFormatter.ShortFormat"/>
            property to the desired formatting string if you want to shorten the format of long values.
            <para>
            See the <see href="http://msdn.microsoft.com/en-us/library/26etazsy.aspx">Formatting Types</see> topic for more information on
            the format strings available for different types.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/30/2012 10:36:37 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.GeneralValueFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.GeneralValueFormatter" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>4/27/2012 2:44:21 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.GeneralValueFormatter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.GeneralValueFormatter" crefType="Unqualified"/> class with the specified format.
            </summary>
            <param name="format">The specified format to use.</param>
            <lastupdated>4/27/2012 2:45:25 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.GeneralValueFormatter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.GeneralValueFormatter" crefType="Unqualified"/> class with the specified format and short format.
            </summary>
            <param name="format">The specified format to use.</param>
            <param name="shortFormat">The specified short format to use.</param>
            <lastupdated>4/27/2012 2:45:25 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.GeneralValueFormatter.FormatCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.GeneralValueFormatter.Parse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.GeneralValueFormatter.TryParse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs,``0@)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.GeneralValueFormatter.ToString">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.GeneralValueFormatter.FormatProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.GeneralValueFormatter.Format'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.GeneralValueFormatter.Format'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.GeneralValueFormatter.ShortFormatProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.GeneralValueFormatter.ShortFormat'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.GeneralValueFormatter.ShortFormat'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.GeneralValueFormatter.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.GeneralValueFormatter.Format">
            <summary>Gets or sets the string format of the value.</summary><value>The string format of the value. The default value is <see langword="null"/>.</value><remarks>See the <see href="http://msdn.microsoft.com/en-us/library/26etazsy.aspx">Formatting Types</see> topic for more information on the format strings available for different types.</remarks><lastupdated>2012-09-14 10:00:05 AM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.GeneralValueFormatter.ShortFormat">
            <summary>Gets or sets the short string format of the value.</summary><value>The short string format of the value. The default value is <see langword="null"/>.</value><remarks>See the <see href="http://msdn.microsoft.com/en-us/library/26etazsy.aspx">Formatting Types</see> topic for more information on the format strings available for different types.</remarks><lastupdated>2012-09-14 10:00:28 AM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.GeneralValueFormatter.FormatString">
            <summary>
            Gets or sets the <see cref="P:NationalInstruments.Controls.GeneralValueFormatter.FormatString"/> for the <see cref="P:NationalInstruments.Controls.GeneralValueFormatter.Format"/> argument.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.GeneralValueFormatter.ShortFormatString">
            <summary>
            Gets or sets the <see cref="P:NationalInstruments.Controls.GeneralValueFormatter.FormatString"/> for the <see cref="P:NationalInstruments.Controls.GeneralValueFormatter.ShortFormat"/> argument.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.PropertyChangeSource">
            <summary>
            Specifies the different sources of a property value change.
            </summary>
            <lastupdated>4/12/2012 6:13:35 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.PropertyChangeSource.Programmatic">
            <summary>
            Indicates the property value was changed by a programmatic assignment of the value from code.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.PropertyChangeSource.Interactive">
            <summary>
            Indicates the property value was changed as the result of a user interaction with the control.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixBase">
            <summary>Defines the set of numeric bases that can be used in a radix numeric control.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.RadixBase.Binary">
            <summary>Binary numeric base.</summary>
            <lastupdated>11/15/2011 4:57:21 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RadixBase.Octal">
            <summary>Octal numeric base.</summary>
            <lastupdated>11/15/2011 4:57:39 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RadixBase.Decimal">
            <summary>Decimal numeric base.</summary>
            <lastupdated>11/15/2011 4:57:31 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RadixBase.Hexadecimal">
            <summary>Hexadecimal numeric base.</summary>
            <lastupdated>11/15/2011 4:57:47 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter">
            <summary>
            Displays data values formatted with a numeric base.
            </summary>
            <remarks>
            Use the <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/> class when you wish to format displayed values in a particular numeric base.
            Set the <see cref="P:NationalInstruments.Controls.RadixValueFormatter.RadixBase"/> property to the desired numeric base.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>2012-10-02 4:01:38 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RadixValueFormatter.#ctor(NationalInstruments.Controls.RadixBase)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/> class with the specified numeric base.
            </summary>
            <param name="radixBase">A numeric base.</param>
            <lastupdated>4/27/2012 2:45:25 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RadixValueFormatter.FormatCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.RadixValueFormatter.Parse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.RadixValueFormatter.TryParse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs,``0@)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.RadixValueFormatter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.RadixValueFormatter.GetAlphabet(System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Gets the alphabet used to format values.
            </summary>
            <param name="uppercase">A value indicating whether letters should use upper case.</param>
            <param name="culture">The culture used to format values.</param>
            <returns>The alphabet used to format values.</returns>
            <remarks>
            The alphabet contains the characters used to represent each digit in a formatted numeric value.
            If a value contains a digit that is not in the alphabet, the digit character is calculated
            from the last character in the alphabet.
            </remarks>
        </member>
        <member name="F:NationalInstruments.Controls.RadixValueFormatter.RadixBaseProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RadixValueFormatter.RadixBase'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RadixValueFormatter.RadixBase'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.RadixValueFormatter.UppercaseProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RadixValueFormatter.Uppercase'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RadixValueFormatter.Uppercase'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.RadixValueFormatter.ShowRadixProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RadixValueFormatter.ShowRadix'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RadixValueFormatter.ShowRadix'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.RadixValueFormatter.SignedProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RadixValueFormatter.Signed'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RadixValueFormatter.Signed'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.RadixValueFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.RadixValueFormatter.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.RadixValueFormatter.SetFormattedValue">
            <summary>Gets a delegate used to display the value's radix when <see cref="P:NationalInstruments.Controls.RadixValueFormatter.ShowRadix"/> is <see langword="true"/>.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.RadixValueFormatter.RadixBase">
            <summary>Gets or sets the numeric base used to display values.</summary><value>The numeric base used to display values. The default value is <see cref="F:NationalInstruments.Controls.RadixBase.Decimal"/>.</value><lastupdated>10 Oct 2012 1:01:51 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RadixValueFormatter.Uppercase">
            <summary>Gets or sets a value indicating whether values should be displayed in upper case.</summary><value>
      <see langword="true"/> to display values containing letters in upper case; <see langword="false"/> to display values in lower case.
The default value is <see langword="true"/>.
</value><remarks>
      <see cref="P:NationalInstruments.Controls.RadixValueFormatter.Uppercase"/> has no effect if <see cref="P:NationalInstruments.Controls.RadixValueFormatter.RadixBase"/> is less than or equal to <see cref="F:NationalInstruments.Controls.RadixBase.Decimal"/>,
since the default alphabet contains only numbers below base 10.
</remarks><lastupdated>10 Oct 2012 1:09:01 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RadixValueFormatter.ShowRadix">
            <summary>Gets or sets a value indicating whether the numeric value of <see cref="P:NationalInstruments.Controls.RadixValueFormatter.RadixBase"/> should be displayed.</summary><value>
Calling <see cref="M:NationalInstruments.Controls.Primitives.ValuePresenter.Visualize``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)"/> with <see cref="P:NationalInstruments.Controls.RadixValueFormatter.ShowRadix"/> set to <see langword="true"/> displays
the numeric value of <see cref="P:NationalInstruments.Controls.RadixValueFormatter.RadixBase"/> as a subscript after the formatted value.
<para>
If <see cref="M:NationalInstruments.Controls.Primitives.ValueFormatter.Format``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)"/> is called, or if <see cref="M:NationalInstruments.Controls.Primitives.ValuePresenter.Visualize``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)"/> is called
with <see cref="P:NationalInstruments.Controls.RadixValueFormatter.ShowRadix"/> set to <see langword="false"/>, then <see cref="P:NationalInstruments.Controls.RadixValueFormatter.RadixBase"/> is not displayed.
</para><para>
The default value is <see langword="false"/>.
</para></value><example>
The table below shows how the value 123 is displayed by <see cref="M:NationalInstruments.Controls.Primitives.ValuePresenter.Visualize``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)"/>
when <see cref="P:NationalInstruments.Controls.RadixValueFormatter.ShowRadix"/> is <see langword="true"/>:
<list type="table">
<listheader><term>RadixBase</term><description>Visualized Value</description></listheader>
<item><term><see cref="F:NationalInstruments.Controls.RadixBase.Decimal"/> (base 10)</term><description>123<format type="subscript">10</format></description></item>
<item><term><see cref="F:NationalInstruments.Controls.RadixBase.Binary"/> (base 2)</term><description>1111011<format type="subscript">2</format></description></item>
<item><term>Quaternary (base 4)</term><description>1323<format type="subscript">4</format></description></item>
<item><term><see cref="F:NationalInstruments.Controls.RadixBase.Octal"/> (base 8)</term><description>173<format type="subscript">8</format></description></item>
<item><term><see cref="F:NationalInstruments.Controls.RadixBase.Hexadecimal"/> (base 16)</term><description>7B<format type="subscript">16</format></description></item>
</list>
</example><lastupdated>10 Oct 2012 1:43:44 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RadixValueFormatter.Signed">
            <summary>Gets or sets a value indicating whether values should always be treated as signed or unsigned numeric values.</summary><value>
      <see langword="true"/> to treat all values as signed numeric values;
<see langword="false"/> to treat all values as unsigned numeric values; or
<see langword="null"/> to use the behavior defined by the data type.
<para>
The table below shows the default behavior of several common data types:
<list type="table"><listheader><term>Data Type</term><description>Default Signed Behavior</description></listheader><item><term><see cref="T:System.Byte"/></term><description>Unsigned Numeric</description></item><item><term><see cref="T:System.SByte"/></term><description>Signed Numeric</description></item><item><term><see cref="T:System.Int32"/></term><description>Signed Numeric</description></item><item><term><see cref="T:System.UInt32"/></term><description>Unsigned Numeric</description></item><item><term><see cref="T:NationalInstruments.DataInfrastructure.DigitalSample"/></term><description>Non-Numeric</description></item></list></para><para>
The default value is <see langword="null"/>.
</para></value><lastupdated>10 Oct 2012 1:25:13 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RadixValueFormatter.Compositor">
            <summary>Gets or sets the compositor used to process continuous numeric values.</summary><value>
      The <see cref="T:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor"/> used to process continuous numeric values.
The default value is <see cref="P:NationalInstruments.Controls.Primitives.ContinuousNumberCompositor.Default"/>.
</value><lastupdated>2014-04-15 3:15:55 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.Alphabet">
            <summary>Represents the alphabet used to format values in a particular radix base.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.IRadixFormatter`1">
            <summary>Represents a radix formatter for numeric or digital values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.DigitalStateRadixFormatter">
            <summary>The radix formatter for <see cref="T:NationalInstruments.DigitalState"/> values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.RadixFormatter`1">
            <summary>The radix formatter for arbitrary numeric values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.RadixFormatter`1.IDragon4Processor">
            <summary>Represents the formatting process used with the Dragon4 generator (p.14, §8).</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.RadixFormatter`1.Dragon4FreeFormatter">
            <summary>Formats a value using its full numeric representation.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.RadixFormatter`1.Dragon4Converter">
            <summary>Accumulates the significand digits and exponent in the target base.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.RadixFormatter`1.INumericConverter">
            <summary>Represents a converter used to format and parse numeric values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.RadixFormatter`1.NumericConverter`1">
            <summary>A converter used to format and parse numeric values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RadixValueFormatter.RadixFormatter`1.BitwiseNumericConverter`1">
            <summary>A converter used to format and parse bitwise numeric values.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Range">
            <summary>
            Provides a set of <see langword="static"/> methods for creating <see cref="T:NationalInstruments.Controls.Range`1" crefType="Unqualified"/> objects.
            </summary>
            <remarks>
            Use this class to create values of the <see cref="T:NationalInstruments.Controls.Range`1"/>
            type. Use the <see cref="M:NationalInstruments.Controls.Range.Create``1(``0,``0)"/> method to
            create ranges if you want an exception to be thrown if the range cannot be created. If you
            do not want exceptions, use the TryCreate() method. 
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/1/2012 4:37:11 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range.Create``1(``0,``0)">
            <summary>
            Creates a new <see cref="T:NationalInstruments.Controls.Range`1" crefType="Unqualified"/> instance with the specified minimum and maximum values.
            </summary>
            <typeparam name="TData">The data type of the range.</typeparam>
            <param name="minimum">The minimum value of the range.</param>
            <param name="maximum">The maximum value of the range.</param>
            <returns>A new <see cref="T:NationalInstruments.Controls.Range`1" crefType="Unqualified"/> instance.</returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="minimum"/> or <paramref name="maximum"/> is not a valid value for 
            <typeparamref name="TData"/>.
            </para></exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value of <paramref name="minimum"/> is not less than or equal to <paramref name="maximum"/>.
            </exception>
            <lastupdated>5/30/2012 11:23:04 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range.Create(System.Object,System.Object)">
            <summary>
            Creates a new <see cref="T:NationalInstruments.Controls.Range`1" crefType="Unqualified"/> instance with the specified minimum and maximum values.
            </summary>
            <param name="minimum">The minimum value of the range.</param>
            <param name="maximum">The maximum value of the range.</param>
            <returns>A new <see cref="T:NationalInstruments.Controls.Range`1" crefType="Unqualified"/>  instance.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="minimum"/> is <see langword="null"/>.
              <para>- or -</para>
            <para><paramref name="maximum"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>
            The <see cref="T:System.Type"/> of <paramref name="minimum"/> and <paramref name="maximum"/> is different.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value of <paramref name="minimum"/> is not less than or equal to <paramref name="maximum"/>.
            </exception>
            <lastupdated>5/30/2012 11:21:25 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range.Create``1(``0,``0,NationalInstruments.DataInfrastructure.Descriptors.IOpComparison{``0})">
            <summary>
            Creates a new <see cref="T:NationalInstruments.Controls.Range`1" crefType="Unqualified"/> instance with the specified minimum and maximum values
            and compare method.
            </summary>
            <typeparam name="TData">The data type of the range.</typeparam>
            <param name="minimum">The minimum value of the range.</param>
            <param name="maximum">The maximum value of the range.</param>
            <param name="comparer">The descriptor to use for comparing <typeparamref name="TData"/> instances.</param>
            <returns>A new <see cref="T:NationalInstruments.Controls.Range`1" crefType="Unqualified"/> instance.</returns>
            <exception cref="T:System.ArgumentException"><para><paramref name="minimum"/> or <paramref name="maximum"/> is not a valid value for 
            <typeparamref name="TData"/>.
            </para></exception>
            <exception cref="T:System.ArgumentNullException"><para><paramref name="comparer"/> is <see langword="null"/></para></exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value of <paramref name="minimum"/> is not less than or equal to <paramref name="maximum"/>.
            </exception>
            <lastupdated>5/30/2012 11:28:57 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range.TryCreate``1(``0,``0,NationalInstruments.Controls.Range{``0}@)">
            <summary>
            Tries to create a new <see cref="T:NationalInstruments.Controls.Range`1" crefType="Unqualified"/> instance with the specified minimum and maximum values.
            </summary>
            <typeparam name="TData">The data type of the range.</typeparam>
            <param name="minimum">The minimum value of the range.</param>
            <param name="maximum">The maximum value of the range.</param>
            <param name="range">After the method returns, <paramref name="range"/> contains either a new  instance or an empty range if a new instance could not be created.</param>
            <returns><see langword="true"/> if a new range was created; otherwise, <see langword="false"/>.</returns>
            <lastupdated>4/27/2012 2:51:45 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range.TryCreate``1(``0,``0,NationalInstruments.DataInfrastructure.Descriptors.IOpComparison{``0},NationalInstruments.Controls.Range{``0}@)">
            <summary>
            Tries to create a new <see cref="T:NationalInstruments.Controls.Range`1" crefType="Unqualified"/> instance with the specified minimum and maximum values, 
            and compare method.
            </summary>
            <typeparam name="TData">The data type of the range.</typeparam>
            <param name="minimum">The minimum value of the range.</param>
            <param name="maximum">The maximum value of the range.</param>
            <param name="comparer">The descriptor to use for comparing <typeparamref name="TData"/> instances.</param>
            <param name="range">After the method returns, <paramref name="range"/> contains either a new  instance or an empty range if a new instance could not be created.</param>
            <returns><see langword="true"/> if a new range was created; otherwise, <see langword="false"/>.</returns>
            <lastupdated>4/27/2012 2:51:11 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Range`1">
            <summary>
            Represents a closed range of data values, delimited by <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/>
            and <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>.
            </summary>
            <typeparam name="TData">The data type of the range.</typeparam>
            <lastupdated>5/3/2012 4:39:08 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.Contains(`0)">
            <summary>
            Determines whether the range contains the specified value.
            </summary>
            <param name="value">The value to compare with this instance.</param>
            <returns><see langword="true"/> if the <see cref="T:NationalInstruments.Controls.Range`1"/> contains the <paramref name="value"/>; otherwise <see langword="false"/>.</returns>
            <remarks>
            A <see cref="T:NationalInstruments.Controls.Range`1"/> contains a value if it is
            greater than or equal to the <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/>
            and less than or equal to the <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>,
            as defined by the <see cref="P:NationalInstruments.Controls.Range`1.Comparer"/> method.
            </remarks>
            <lastupdated>5/3/2012 5:08:06 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.Clip(`0)">
            <summary>
            Coerces a value to fall within the range.
            </summary>
            <param name="value">The value to coerce.</param>
            <returns>
            If the <paramref name="value"/> is less than the <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/>, <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> is returned.
            If the <paramref name="value"/> is greater than the <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>, <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/> is returned.
            Otherwise, the original value is returned.
            </returns>
            <lastupdated>5/3/2012 5:02:43 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.ToString">
            <inheritdoc cref="M:NationalInstruments.Controls.Range`1.ToString(System.String,System.IFormatProvider)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.ToString(System.String)">
            <inheritdoc cref="M:NationalInstruments.Controls.Range`1.ToString(System.String,System.IFormatProvider)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.ToString(System.IFormatProvider)">
            <inheritdoc cref="M:NationalInstruments.Controls.Range`1.ToString(System.String,System.IFormatProvider)"/>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the value of this instance to its equivalent string representation, using the specified format and culture-specific format information.
            </summary>
            <remarks>
            The <c>S</c> format specifier produces a serialization format that includes explicit type information and round-trip values for <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> and <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>.
            All other format arguments are passed through to the format call to <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> and<see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>.
            To pass <c>S</c> as the format argument for <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> and <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>,
            use the escape character, <c>\</c>, in front of the argument.
            </remarks>
            <param name="format">A numeric format string. The parameter can be <see langword="null"/>.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information. The parameter can be <see langword="null"/>.</param>
            <exception cref="T:System.FormatException">
            <paramref name="format"/> is invalid.
            </exception>
            <returns>The value of this instance represented as a string.</returns>
            <lastupdated>5/30/2012 4:44:09 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.Parse(System.String)">
            <inheritdoc cref="M:NationalInstruments.Controls.Range`1.Parse(System.String,System.IFormatProvider)"/>
            <summary>
            Converts the string representation of a range of values to its <see cref="T:NationalInstruments.Controls.Range`1"/> equivalent.
            </summary>
            <lastupdated>5/3/2012 5:08:48 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a range of values to its <see cref="T:NationalInstruments.Controls.Range`1"/> equivalent
            using the specified format and culture.
            </summary>
            <param name="value">A string containing the range to convert.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information about the string.</param>
            <returns>A <see cref="T:NationalInstruments.Controls.Range`1"/> equivalent to the string specified in <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            <paramref name="value"/> is not in the <c>[value],[value]</c> format.
            </exception>
            <lastupdated>5/3/2012 7:42:13 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.TryParse(System.String,NationalInstruments.Controls.Range{`0}@)">
            <summary>
            Converts the string representation of a range of values to its <see cref="T:NationalInstruments.Controls.Range`1"/> equivalent.
            </summary>
            <param name="value">A string containing the range to convert.</param>
            <param name="range">A <see cref="T:NationalInstruments.Controls.Range`1"/>  equivalent to the string specified in <paramref name="value"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <returns><see langword="true"/> if <paramref name="value"/> was converted successfully; otherwise, <see langword="false"/>.</returns>
            <lastupdated>5/3/2012 6:23:08 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.TryParse(System.String,System.IFormatProvider,NationalInstruments.Controls.Range{`0}@)">
            <summary>
            Converts the string representation of a range of values to its <see cref="T:NationalInstruments.Controls.Range`1"/> equivalent
            using the specified format and culture.
            </summary>
            <param name="value">A string containing the range to convert.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information about the string.</param>
            <param name="range">A <see cref="T:NationalInstruments.Controls.Range`1"/> equivalent to the string specified in <paramref name="value"/>.</param>
            <returns><see langword="true"/> if <paramref name="value"/> was converted successfully; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <lastupdated>5/3/2012 6:21:29 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.NationalInstruments#Controls#Primitives#IRange#GetMinimum">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.NationalInstruments#Controls#Primitives#IRange#GetMaximum">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.#ctor(`0,`0,NationalInstruments.DataInfrastructure.Descriptors.IOpComparison{`0})">
            <summary>Creates a new <see cref="T:NationalInstruments.Controls.Range`1"/> value.</summary><param name="minimum">The minimum value of the range.</param><param name="maximum">The maximum value of the range.</param><param name="comparer">
      An instance of <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.IOpComparison`1"/> used
      to compare <paramref name="minimum"/> and <paramref name="maximum"/>.
    </param><exception cref="T:System.ArgumentException">
      <paramref name="minimum"/> or <paramref name="maximum"/> is not a valid value for <typeparamref name="TData"/>.
    </exception><exception cref="T:System.ArgumentNullException">
      <paramref name="comparer"/> is <see langword="null"/>
    </exception><exception cref="T:System.ArgumentOutOfRangeException">
      The value of <paramref name="minimum"/> is not less than or equal to <paramref name="maximum"/>.
    </exception><lastupdated>2012-06-11 8:24:55 AM</lastupdated><updatedby>Lisa Hannan</updatedby><approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.#ctor(`0,`0)">
            <summary>Creates a new <see cref="T:NationalInstruments.Controls.Range`1"/> value.</summary><param name="minimum">The minimum value of the range.</param><param name="maximum">The maximum value of the range.</param><exception cref="T:System.ArgumentException">
      <paramref name="minimum"/> or <paramref name="maximum"/> is not a valid value for <typeparamref name="TData"/>.
    </exception><exception cref="T:System.ArgumentOutOfRangeException">
      The value of <paramref name="minimum"/> is not less than or equal to <paramref name="maximum"/>.
    </exception><lastupdated>5/30/2012 11:07:03 AM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.Equals(NationalInstruments.Controls.Range{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            <see langword='true'/> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword='false'/>.
            </returns>
            <param name='other'>
            An object to compare with this object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.op_Equality(NationalInstruments.Controls.Range{`0},NationalInstruments.Controls.Range{`0})">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Range`1"/> objects have the same value.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Range`1"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Range`1"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.op_Inequality(NationalInstruments.Controls.Range{`0},NationalInstruments.Controls.Range{`0})">
            <summary>
            Determines whether two specified <see cref="T:NationalInstruments.Controls.Range`1"/> objects have different values.
            </summary>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="left">
            A <see cref="T:NationalInstruments.Controls.Range`1"/> object.
            </param>
            <param name="right">
            A <see cref="T:NationalInstruments.Controls.Range`1"/> object.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.
            </returns>
            <param name="obj">
            The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Range`1.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Range`1.IsEmpty">
            <summary>
            Gets a value indicating whether the range is empty.
            </summary>
            <value>
            <see langword="true"/> if the range is empty, otherwise <see langword="false"/>.
            </value>
            <lastupdated>5/30/2012 4:26:22 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Range`1.IsInfinite">
            <summary>
            Gets a value indicating whether <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> or <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/> is infinite.
            </summary>
            <value>
            <see langword="true"/> if either <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> or <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/> are
            infinite. Otherwise <see langword="false"/>.
            </value>
            <lastupdated>5/30/2012 4:27:19 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Range`1.NationalInstruments#Controls#Primitives#IRange#DataType">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Range`1.Minimum">
            <summary>Gets the minimum value of the range.</summary><value>The minimum value of the range. The default value is default(TData).</value>
        </member>
        <member name="P:NationalInstruments.Controls.Range`1.Maximum">
            <summary>Gets the maximum value of the range.</summary><value>The maximum value of the range. The default value is default(TData).</value>
        </member>
        <member name="P:NationalInstruments.Controls.Range`1.Comparer">
            <summary>Gets the <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.IOpComparison`1"/> descriptor used to compare <typeparamref name="TData"/> values.</summary><value>The <see cref="T:NationalInstruments.DataInfrastructure.Descriptors.IOpComparison`1"/> descriptor used to compare <typeparamref name="TData"/> values.</value><lastupdated>5/22/2012 3:06:34 PM</lastupdated><updatedby>Measurement Studio</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RangeAdjuster">
            <summary>
            Represents a strategy for adjusting the range of an <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/> to accommodate new data.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.RangeAdjuster.GetAdjustedRange``1(NationalInstruments.Controls.Data.RangeAdjusterArgs{``0})">
            <summary>
            Returns a new range based on the current range of the data mapper and the specified data.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="args">The arguments to use to adjust the range.</param>
            <returns>A new range for <see cref="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.Mapper"/>, calculated against <see cref="P:NationalInstruments.Controls.Data.RangeAdjusterArgs`1.Data"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="args"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:NationalInstruments.Controls.RangeAdjuster.GetAdjustedRange``1(NationalInstruments.Controls.Data.BufferCollection{``0},NationalInstruments.Controls.Data.IRangeDataMapper{``0})">
            <summary>
            Returns a new range based on the current range of the data mapper and the specified data.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="data">The data to use to adjust the range.</param>
            <param name="mapper">The data mapper to adjust the range for.</param>
            <returns>A new range for <paramref name="mapper"/>, calculated against <paramref name="data"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="data"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para><paramref name="mapper"/> is <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:NationalInstruments.Controls.RangeAdjuster.GetAdjustedRangeCore``1(NationalInstruments.Controls.Data.RangeAdjusterArgs{``0})">
            <inheritdoc cref="M:NationalInstruments.Controls.RangeAdjuster.GetAdjustedRange``1(NationalInstruments.Controls.Data.RangeAdjusterArgs{``0})"/>
            <summary>Implements the <see cref="M:NationalInstruments.Controls.RangeAdjuster.GetAdjustedRange``1(NationalInstruments.Controls.Data.RangeAdjusterArgs{``0})"/> method.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.None">
            <summary>Gets a value that returns the same range it is given.</summary>
            <value>A value that returns the same range it is given.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.Adjuster"/> property to <see cref="P:NationalInstruments.Controls.RangeAdjuster.None"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble Adjuster="None" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:32:51 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.FitExactly">
            <summary>Gets a value that returns a range with the smallest and largest values in the specified data.</summary>
            <value>A value that returns a range with the smallest and largest values in the specified data.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.Adjuster"/> property to <see cref="P:NationalInstruments.Controls.RangeAdjuster.FitExactly"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble Adjuster="FitExactly" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:32:27 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.FitLoosely">
            <summary>Gets a value that returns a range encompassing the smallest and largest values in the specified data.</summary>
            <value>A value that returns a range encompassing the smallest and largest values in the specified data.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.Adjuster"/> property to <see cref="P:NationalInstruments.Controls.RangeAdjuster.FitLoosely"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble Adjuster="FitLoosely" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:32:33 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.FitVisibleExactly">
            <summary>Gets a value that returns a range with the smallest and largest values in the visible
            range of the specified data.</summary>
            <value>A value that returns a range with the smallest and largest values in the visible range of the specified data.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.Adjuster"/> property to <see cref="P:NationalInstruments.Controls.RangeAdjuster.FitVisibleExactly"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble Adjuster="FitVisibleExactly" /&gt;
            </code>
            </example>
            <lastupdated>5/30/2012 11:36:35 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.FitVisibleLoosely">
            <summary>Gets a value that returns a range encompassing the smallest and largest values in the
            visible range of the specified data.</summary>
            <value>A value that returns a range encompassing the smallest and largest values in the
            visible range of the specified data.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.Adjuster"/> property to <see cref="P:NationalInstruments.Controls.RangeAdjuster.FitVisibleLoosely"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble Adjuster="FitVisibleLoosely" /&gt;
            </code>
            </example>
            <lastupdated>5/30/2012 11:36:54 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.ContinuousChart">
            <summary>Gets a value that returns a range with the same span as the current range, shifted to accommodate the largest value.</summary>
            <value>A value that returns a range with the same span as the current range, shifted to accommodate the largest value.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.Adjuster"/> property to <see cref="P:NationalInstruments.Controls.RangeAdjuster.ContinuousChart"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble Adjuster="ContinuousChart" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:32:17 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.PagedChart">
            <summary>Gets a value that returns a range with the same span as the current range, shifted to accommodate the largest value.</summary>
            <value>A value that returns a range with the same span as the current range, shifted to accommodate the largest value.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.Adjuster"/> property to <see cref="P:NationalInstruments.Controls.RangeAdjuster.PagedChart"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble Adjuster="PagedChart" /&gt;
            </code>
            </example>
            <lastupdated>5/20/2012 4:32:57 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.FitsAvailableData">
            <summary>
            Gets a value indicating whether the adjuster updates the range to fit all of the available data.
            </summary>
            <value>
            The default value is <see langword="false"/>.
            </value>
            <lastupdated>2013-08-02 4:26:21 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.RequiresVisibleData">
            <summary>
            Gets a value indicating whether the adjuster requires only data visible in the range of other axes.
            </summary>
            <value>
            The default value is <see langword="false"/>.
            </value>
            <lastupdated>5/30/2012 11:38:21 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.IgnoreDataValueOnRangeChange">
            <summary>
            Gets a value indicating whether the data value should be preserved on range change.
            </summary>
            <remarks>
            <para>
            This value is used to instruct those clients that care about graph data positioning, such as cursors,
            whether they should try to lock onto data values, even if the range changes. If <see langword="false"/>,
            then clients will focus on the data value; if <see langword="true"/>, they will maintain their
            relative position in the graph.
            </para>
            <para>
            For instance, consider a cursor positioned at 50 in a range of 0,100. If the range is changed to 100,120 and
            <see cref="P:NationalInstruments.Controls.RangeAdjuster.IgnoreDataValueOnRangeChange"/> is <see langword="false"/>, the cursor will remain at 50 and move offscreen.
            If <see cref="P:NationalInstruments.Controls.RangeAdjuster.IgnoreDataValueOnRangeChange"/> is <see langword="true"/>, the cursor will remain centered in the
            range and its new value will be 110.
            </para>
            </remarks>
            <value>
            The default value is <see langword="false"/>.
            </value>
            <lastupdated>4/20/2014 1:45:15 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeAdjuster.UnderlyingType">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.RangeAdjuster.NoneAdjuster">
            <summary>Implementation of the None range adjuster.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeAdjuster.FitAdjuster">
            <summary>Base implementation of the Fit range adjusters.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeAdjuster.FitExactlyAdjuster">
            <summary>Implementation of the Fit*Exactly range adjusters.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeAdjuster.FitLooselyAdjuster">
            <summary>Implementation of the Fit*Loosely range adjusters.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeAdjuster.ChartAdjuster">
            <summary>Implementation of the Chart range adjusters.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisions">
            <summary>
            Describes how to render the minor divisions for a <see cref="T:NationalInstruments.Controls.Primitives.RangeScale"/>.
            </summary>
            <remarks>
            The <see cref="T:NationalInstruments.Controls.RangeDivisions"/> class is used to describe
            how to render the minor divisions for a <see cref="T:NationalInstruments.Controls.Primitives.RangeScale"/>.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/30/2012 11:51:13 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisions.CreateDivisionsPresenterCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.RangeDivisions.ModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RangeDivisions.Mode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RangeDivisions.Mode'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisions.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.RangeDivisions.Mode">
            <summary>Gets or sets the type used to generate the divisions that display a range.</summary><value>The default value is <see cref="P:NationalInstruments.Controls.RangeDivisionsMode.Auto"/>.</value><lastupdated>5/3/2012 10:16:02 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisionsMode">
            <summary>
            Represents a class used to subdivide a range into minor divisions.
            </summary>
            <remarks>
            Use implementations of <see cref="T:NationalInstruments.Controls.RangeDivisionsMode"/>
            to specify how a range should be subdivided into minor divisions. <see cref="P:NationalInstruments.Controls.RangeDivisionsMode.Auto"/>
            is an implementation that automatically determines an appropriate interval.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/30/2012 11:57:03 AM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
            <content>[partial class - CAR #397339]</content>
            <content>[partial class - CAR #397339]</content>
            <content>[partial class - CAR #397339]</content>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="F:NationalInstruments.Controls.RangeDivisionsMode.IdealRange">
            <summary>Indicates the ideal range of the associated buffer.</summary>
            <seealso cref="T:NationalInstruments.Controls.Data.RelativeIdealRange"/>
        </member>
        <member name="F:NationalInstruments.Controls.RangeDivisionsMode.GenerationFailure">
            <summary>Indicates the reason why the divisions in the associated buffer could not be generated successfully.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisionsMode.CreateCountMode(System.Int32)">
            <summary>Divides a range into a specified number of divisions.</summary>
            <param name="count">The number of divisions to create for a range.</param>
            <returns>A value that divides a range into <paramref name="count"/> divisions.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="count"/> is less than or equal to 0, or greater than 1000.</exception>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.RangeDivisions.Mode"/> property to a count mode of 11.
            <code lang="XAML">
            &lt;ni:RangeDivisions Mode="Count: 11" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisionsMode.CreateIntervalMode(System.Object,System.Object)">
            <summary>Divides a range by starting at a base value and incrementing by a set interval through the range.</summary>
            <param name="intervalBase">The starting offset for the interval.</param>
            <param name="interval">The interval to increment for each value in the range.</param>
            <returns>A value that divides a range by starting at a base value and incrementing by an interval through the range.</returns>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="intervalBase"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="interval"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <para><paramref name="intervalBase"/> is infinite or not a number.</para>
              <para>-or-</para>
              <para><paramref name="interval"/> is negative, infinite, or not a number.</para>
            </exception>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.RangeDivisions.Mode"/> property to an interval mode starting at 1 and incrementing by 3.
            <code lang="XAML">
            &lt;ni:RangeDivisions Mode="Interval: 1, 3" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisionsMode.GetDivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Int32)">
            <summary>Creates a set of division data values for the specified data mapper.</summary>
            <typeparam name="TData">The data type of the mapper.</typeparam>
            <param name="dataMapper">The range data mapper to subdivide.</param>
            <param name="divisionsEstimate">
            The estimated number of divisions that will fit in the display area,
            or a default value if <see cref="P:NationalInstruments.Controls.RangeDivisionsMode.RequiresDivisionsEstimate"/> is <see langword="false"/>.
            </param>
            <returns>An ordered set of data values dividing the range of <paramref name="dataMapper"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="dataMapper"/> is <see langword="null"/></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="divisionsEstimate"/> is less than zero.</exception>
            <lastupdated>2012-05-11 2:47:51 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisionsMode.GetSubdivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Collections.Generic.IList{``0})">
            <summary>Creates a set of division data values dependent on the specified set of divisions.</summary>
            <typeparam name="TData">The data type of the mapper.</typeparam>
            <param name="dataMapper">The range data mapper to subdivide.</param>
            <param name="dependentDivisions">The ordered set of full-range divisions returned from <see cref="M:NationalInstruments.Controls.RangeDivisionsMode.GetDivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Int32)"/>.</param>
            <returns>An ordered set of data values dividing each pair of values in <paramref name="dependentDivisions"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="dataMapper"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="dependentDivisions"/> is <see langword="null"/>.</para>
            </exception>
            <lastupdated>2012-05-11 2:47:51 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisionsMode.GetDivisionsCore``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Int32)">
            <inheritdoc cref="M:NationalInstruments.Controls.RangeDivisionsMode.GetDivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Int32)"/>
            <summary>Implements the <see cref="M:NationalInstruments.Controls.RangeDivisionsMode.GetDivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Int32)"/> method.</summary>
            <lastupdated>2013-05-22 12:19:32 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisionsMode.GetSubdivisionsCore``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Collections.Generic.IList{``0})">
            <inheritdoc cref="M:NationalInstruments.Controls.RangeDivisionsMode.GetSubdivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Collections.Generic.IList{``0})"/>
            <summary>Implements the <see cref="M:NationalInstruments.Controls.RangeDivisionsMode.GetSubdivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Collections.Generic.IList{``0})"/> method.</summary>
            <lastupdated>2013-05-22 12:19:32 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeDivisionsMode.Auto">
            <summary>Gets a value that determines an appropriate range interval.</summary>
            <value>A value that determines an appropriate range interval.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.RangeDivisions.Mode"/> property to <see cref="P:NationalInstruments.Controls.RangeDivisionsMode.Auto"/>.
            <code lang="XAML">
            &lt;ni:RangeDivisions Mode="Auto" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeDivisionsMode.RequiresDivisionsEstimate">
            <summary>
            Gets a value indicating whether a value is required for the <c>divisionsEstimate</c> parameter of
            <see cref="M:NationalInstruments.Controls.RangeDivisionsMode.GetDivisions``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Int32)"/>.
            </summary>
            <value>
            The default value is <see langword="false"/>. If <see langword="true"/>, <see cref="T:NationalInstruments.Controls.RangeDivisions"/> estimates the number of divisions that can be generated based on available space.
            </value>
            <lastupdated>5/2/2012 2:16:33 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeDivisionsMode.UnderlyingType">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisionsMode.AutoImpl">
            <summary>Implements the "Auto" range divisions mode.</summary>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisionsMode.AutoImpl.IAutoDivisionsHelper`1">
            <exclude/><summary>Represents the helper used to calculate auto divisions.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisionsMode.AutoImpl.FallbackAutoDivisionsHelper`1">
            <exclude/><summary>Implements a fallback helper that converts all values to <see cref="T:System.Double"/> before generating divisions.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisionsMode.AutoImpl.AutoDivisionsHelper`5">
            <exclude/><summary>Implements the algorithm that calculates a nice interval for generated divisions.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisionsMode.AutoImpl.AutoDivisionsHelper`5.CalculateNiceInterval(`1,System.Int32)">
            <exclude/>
            <summary>
            Calculate an interval between minimum and maximum that results in a friendly number of subdivisions (half, quarters, equal thirds, etc.) based
            on how big the labels for those regions would end up being. "Friendly" in this case is defined by an Internet-found algorithm that tends
            to make divisions of 2, 5, and 10 and multiples thereof.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisionsMode.AutoImpl.AutoDivisionsHelper`5.NiceNumberCondition">
            <exclude/><summary>Represents the limit conditions for calculating a rounded or non-rounded nice number.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisionsMode.CountImpl">
            <summary>Implements the "Count" range divisions mode.</summary>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisionsMode.IntervalImpl">
            <content>[partial class - CAR #397339]</content>
            <summary>Implements the "Interval" range divisions mode.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.RangeDivisionsMode.IntervalImpl.GetIntervalDivisions``3(NationalInstruments.Controls.Data.IDataMapper{``0},NationalInstruments.Controls.Range{``0},``0,``1,System.Collections.Generic.IList{``0})">
            <exclude/><summary>Generates interval divisions with the specified base and interval over the range of the data mapper, excluding any major divisions.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeDivisionsMode.IntervalImpl.IntervalDivisionsCalculator`3">
            <summary>Used to calculate division values over an interval.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeLabeledDivisions">
            <summary>
            Represents a set of labeled divisions on a range scale.
            </summary>
            <seealso cref="P:NationalInstruments.Controls.Primitives.RangeScale.MajorDivisions"/>
            <remarks>
            The <see cref="T:NationalInstruments.Controls.RangeLabeledDivisions"/> class represents
            a set of labeled divisions on a range scale.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/14/2012 1:19:16 PM</lastupdated>
            <updatedby>Owen Pellegrin</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RangeLabeledDivisions.CreateDivisionsPresenterCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale,System.Windows.DependencyProperty)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.RangeLabeledDivisions.ModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RangeLabeledDivisions.Mode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RangeLabeledDivisions.Mode'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.RangeLabeledDivisions.IsMinimumEditableProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMinimumEditable"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMinimumEditable"/> attached property.
            </returns>
            <attachedmember name="IsMinimumEditable">
      <summary>Gets or sets a value indicating whether the minimum label can edit the range of the scale.</summary>
      <value>A value indicating whether the minimum label can edit the range of the scale. The default value is <see langword="true"/>.</value>
      <remarks>This property is initialized by the scale when it creates a default presenter.</remarks>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.RangeLabeledDivisions.IsMaximumEditableProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMaximumEditable"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMaximumEditable"/> attached property.
            </returns>
            <attachedmember name="IsMaximumEditable">
      <summary>Gets or sets a value indicating whether the maximum label can edit the range of the scale.</summary>
      <value>A value indicating whether the maximum label can edit the range of the scale. The default value is <see langword="true"/>.</value>
      <remarks>This property is initialized by the scale when it creates a default presenter.</remarks>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.RangeLabeledDivisions.MinimumLabelAlignmentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RangeLabeledDivisions.MinimumLabelAlignment'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RangeLabeledDivisions.MinimumLabelAlignment'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.RangeLabeledDivisions.MaximumLabelAlignmentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RangeLabeledDivisions.MaximumLabelAlignment'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RangeLabeledDivisions.MaximumLabelAlignment'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.RangeLabeledDivisions.GetIsMinimumEditable(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMinimumEditable"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMinimumEditable"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.RangeLabeledDivisions.SetIsMinimumEditable(NationalInstruments.Controls.Primitives.ScaleHost,System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMinimumEditable"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Boolean"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.RangeLabeledDivisions.GetIsMaximumEditable(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMaximumEditable"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMaximumEditable"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.RangeLabeledDivisions.SetIsMaximumEditable(NationalInstruments.Controls.Primitives.ScaleHost,System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.RangeLabeledDivisions.IsMaximumEditable"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Boolean"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.RangeLabeledDivisions.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.RangeLabeledDivisions.Mode">
            <summary>Gets or sets the type used to generate the labeled divisions  that display a range.</summary><value>The default value is <see cref="P:NationalInstruments.Controls.RangeDivisionsMode.Auto"/>.</value><lastupdated>5/3/2012 10:15:50 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeLabeledDivisions.MinimumLabelAlignment">
            <summary>Gets or sets the relative alignment of the minimum label on the scale.</summary><value>
      The default value is <see langword="null"/>, which will use the value of <see cref="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelAlignment"/>.
    </value><lastupdated>5/3/2012 3:03:04 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeLabeledDivisions.MaximumLabelAlignment">
            <summary>Gets or sets the relative alignment of the maximum label on the scale.</summary><value>
      The default value is <see langword="null"/>, which will use the value of <see cref="P:NationalInstruments.Controls.ScaleLabeledDivisions.LabelAlignment"/>.
    </value><lastupdated>5/3/2012 3:03:04 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind">
            <summary>
            Specifies the position of values on a scale.
            </summary>
            <remarks>
            Use the implementations of this class to specify where values will be positioned on a scale.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/30/2012 1:04:49 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RangeScaleKind.CreateLogarithmKind(System.Object)">
            <summary>Creates an object that positions values using the specified logarithm of the value.</summary>
            <param name="logarithmBase">The base of the logarithm to use.</param>
            <returns>An object that positions values using a logarithm with a base of <paramref name="logarithmBase"/>.</returns>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.ScaleKind"/> property to a logarithm with a base of 16.
            <code lang="XAML">
            &lt;ni:AxisDouble ScaleKind="Logarithm: 16" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RangeScaleKind.CreateDataMapper``1">
            <summary>
            Creates the data mapper used to position values in a scale.
            </summary>
            <typeparam name="TData">The data type of the created data mapper.</typeparam>
            <returns>An <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/> used to position values in a scale.</returns>
            <exception cref="T:System.InvalidOperationException">
            An <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/> cannot be created for the specified <typeparamref name="TData"/> data type.
            </exception>
            <lastupdated>5/3/2012 10:37:25 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeScaleKind.Linear">
            <summary>Gets an object that positions values linearly.</summary>
            <value>An object that positions values linearly.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.ScaleKind"/> property to <see cref="P:NationalInstruments.Controls.RangeScaleKind.Linear"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble ScaleKind="Linear" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeScaleKind.LogarithmBase10">
            <summary>Gets an object that positions values using the base-10 logarithm of the value.</summary>
            <value>An object that positions values using the base-10 logarithm of the value.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.ScaleKind"/> property to <see cref="P:NationalInstruments.Controls.RangeScaleKind.LogarithmBase10"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble ScaleKind="LogarithmBase10" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeScaleKind.LogarithmBase2">
            <summary>Gets an object that positions values using the base-2 logarithm of the value.</summary>
            <value>An object that positions values using the base-2 logarithm of the value.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.ScaleKind"/> property to <see cref="P:NationalInstruments.Controls.RangeScaleKind.LogarithmBase2"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble ScaleKind="LogarithmBase2" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeScaleKind.LogarithmBaseE">
            <summary>Gets an object that positions values using the natural logarithm of the value.</summary>
            <value>An object that positions values using the natural logarithm of the value.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Axis`1.ScaleKind"/> property to <see cref="P:NationalInstruments.Controls.RangeScaleKind.LogarithmBaseE"/>.
            <code lang="XAML">
            &lt;ni:AxisDouble ScaleKind="LogarithmBaseE" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RangeScaleKind.UnderlyingType">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.MakerImpl">
            <exclude/><summary>Base class for scale kind implementations.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.LinearImpl">
            <exclude/><summary>Implements the Linear scale kind.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.LogarithmMakerImpl">
            <exclude/><summary>Base class for Logarithmic scale kind implementations.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.LogarithmBase10Impl">
            <exclude/><summary>Implements the Logarithmic scale kind with Base 10.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.LogarithmBase2Impl">
            <exclude/><summary>Implements the Logarithmic scale kind with Base 2.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.LogarithmBaseEImpl">
            <exclude/><summary>Implements the Logarithmic scale kind with Base E.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.ArbitraryLogarithmImpl">
            <exclude/><summary>Implements the Logarithmic scale kind with an arbitrary Base.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.LinearRangeDataMapperDouble">
            <exclude/><summary>A data mapper with a hard-coded map implementation for <see cref="T:System.Double"/> data.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.LinearRangeDataMapperInt32">
            <exclude/><summary>A data mapper with a hard-coded map implementation for <see cref="T:System.Int32"/> data.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RangeScaleKind.LinearRangeDataMapperInt32.CombinedDataMapperCalculator">
            <exclude/><summary>Combines a <see cref="T:System.Double"/> and an <see cref="T:System.Int32"/> calculator to provide smooth panning support for <see cref="T:System.Int32"/> scales.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.RelativeAlignment">
            <summary>Defines the different alignments a child object can have.</summary>
            <lastupdated>5/3/2012 6:24:54 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RelativeAlignment.Near">
            <summary>The child object is aligned to the near side of the parent area, as defined by the parent.</summary>
            <lastupdated>5/3/2012 6:25:38 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RelativeAlignment.Center">
            <summary>The child object is aligned to the center of the parent area.</summary>
            <lastupdated>5/3/2012 6:25:12 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RelativeAlignment.Far">
            <summary>The child object is aligned to the far side of the parent area, as defined by the parent.</summary>
            <lastupdated>5/3/2012 6:25:46 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RelativeLocation">
            <summary>
            Defines the different locations a child part can have.
            </summary>
            <lastupdated>5/3/2012 6:26:16 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RelativeLocation.None">
            <summary>
            The child control should not appear in the visual tree.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.RelativeLocation.Near">
            <summary>
            The child control appears on the near side of the parent control, as defined by the parent.
            </summary>
            <lastupdated>5/3/2012 7:24:06 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RelativeLocation.Far">
            <summary>
            The child control appears on the far side of the parent control, as defined by the parent.
            </summary>
            <lastupdated>5/3/2012 7:23:55 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RelativeLocation.NearAndFar">
            <summary>
            The child control appears on both the near and far sides of the parent control, as defined by the parent.
            </summary>
            <lastupdated>5/3/2012 7:24:24 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RelativePosition">
            <summary>
            Specifies the different positions where a child object can be placed.
            </summary>
            <lastupdated>14 Jun 2012 1:28:58 PM</lastupdated>
            <updatedby>übermn</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RelativePosition.Near">
            <summary>The child should appear on the nearest side of the parent control, as defined by the parent.</summary>
            <lastupdated>14 Jun 2012 1:29:20 PM</lastupdated>
            <updatedby>übermn</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.RelativePosition.Far">
            <summary>The child should appear on the farthest side of the parent control, as defined by the parent.</summary>
            <lastupdated>14 Jun 2012 1:29:16 PM</lastupdated>
            <updatedby>übermn</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TemplateValuePresenter">
            <summary>
            Provides a <see cref="T:System.Windows.DataTemplate"/> to display a value.
            </summary>
            <remarks>
            Use the <see cref="T:NationalInstruments.Controls.TemplateValuePresenter"/> class when you want to
            use a <see cref="T:System.Windows.DataTemplate"/> to specify how a value should be displayed.
            Set the <see cref="P:NationalInstruments.Controls.TemplateValuePresenter.Template"/> property
            to a <see cref="T:System.Windows.DataTemplate"/>.
            </remarks>
            <lastupdated>5/30/2012 2:53:47 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TemplateValuePresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.TemplateValuePresenter" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>11/21/2011 2:06:09 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TemplateValuePresenter.#ctor(System.Windows.DataTemplate)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.TemplateValuePresenter" crefType="Unqualified"/> class with the specified template.
            </summary>
            <param name="template">The data template used to display a data value.</param>
            <lastupdated>5/3/2012 3:15:55 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TemplateValuePresenter.VisualizeCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.TemplateValuePresenter.TemplateProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.TemplateValuePresenter.Template'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.TemplateValuePresenter.Template'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.TemplateValuePresenter.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.TemplateValuePresenter.Template">
            <summary>Gets or sets the data template used to display a data value.</summary><value> The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 2:33:59 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TickShape">
            <summary>
            Represents a basic enumeration that provides a <see cref="T:System.Windows.Media.PathFigure"/> describing a shape that is either filled or hollow.
            </summary>
            <remarks>
            Use the instances of <see cref="T:NationalInstruments.Controls.TickShape"/> to define the
            shapes used to draw ticks. If you would like to implement your own, override the
            <see cref="M:NationalInstruments.Controls.TickShape.DrawShape(System.Windows.Media.StreamGeometryContext,System.Windows.Rect)"/> method in your implementation.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/30/2012 3:09:11 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TickShape.DrawShape(System.Windows.Media.StreamGeometryContext,System.Windows.Rect)">
            <summary>
            Draws the shape in vector mode at the offset and size specified by the bounding box.
            </summary>
            <param name="context">The <see cref="T:System.Windows.Media.StreamGeometryContext"/>.</param>
            <param name="boundingBox">The offset and size of the given figure.</param>
            <lastupdated>5/30/2012 3:31:42 PM</lastupdated>
            <updatedby>Owen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TickShape.UpdateTickMark(System.Windows.Shapes.Path@)">
            <exclude/><summary>Creates or updates the path geometry for the tick shape.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.Diamond">
            <summary>Gets a filled diamond shape.</summary>
            <value>A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws a filled diamond shape.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.Diamond"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="Diamond" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.DiamondOutline">
            <summary>Gets an outline of a diamond shape.</summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws an outlined
            diamond shape.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.DiamondOutline"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="DiamondOutline" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.Ellipse">
            <summary>Gets a filled ellipse shape.</summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws a filled
            ellipse shape.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.Ellipse"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="Ellipse" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.EllipseOutline">
            <summary>Gets an outline of an ellipse shape.</summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws an outlined
            ellipse shape.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.EllipseOutline"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="EllipseOutline" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.InwardTriangle">
            <summary>Gets a filled triangle shape pointing upwards.</summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws a filled
            triangle shape pointing upwards.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.InwardTriangle"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="InwardTriangle" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.InwardTriangleOutline">
            <summary>Gets an outline of a triangle shape pointing upwards.</summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws an outline of
            a triangle shape pointing upwards.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.InwardTriangleOutline"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="InwardTriangleOutline" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.OutwardTriangle">
            <summary>Gets a filled triangle shape pointing downwards.</summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws a filled
            triangle shape pointing downwards.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.OutwardTriangle"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="OutwardTriangle" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.OutwardTriangleOutline">
            <summary>Gets an outline of a triangle shape pointing downwards.</summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws an outlined
            triangle shape pointing downwards.</value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.OutwardTriangleOutline"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="OutwardTriangleOutline" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.Rectangle">
            <summary>Gets a filled rectangle shape.</summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws a filled
            rectangle shape.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.Rectangle"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="Rectangle" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.RectangleOutline">
            <summary>Gets an outline of a rectangular shape.</summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.TickShape"/> instance that draws an outlined
            rectangle shape.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.ScaleDivisions.TickMark"/> property to <see cref="P:NationalInstruments.Controls.TickShape.RectangleOutline"/>.
            <code lang="XAML">
            &lt;ni:ScaleDivisions TickMark="RectangleOutline" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.UnderlyingType">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.IsFilled">
            <summary>
            Gets a value indicating whether a particular shape is filled.
            </summary>
            <value>
            <see langword="true"/> if a filled shape is drawn;
            otherwise, <see langword="false"/> if only the outline of the shape is drawn.
            </value>
            <lastupdated>2012-07-03 12:29:50 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.TickShape.ShapeType">
            <exclude/><summary>Gets the type of tick shape.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.TickShape.TickShapeImpl">
            <exclude/><summary>Represents a standard tick shape.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.ValueChangedEventArgs`1">
            <summary>Gets the arguments to the source event raised when the value changes.
            </summary>
            <typeparam name="TData">The data type of the <see cref="T:NationalInstruments.Controls.ValueChangedEventArgs`1"/> object.
            </typeparam>
            <threadsafety safety="unsafe"/>
            <remarks>
            Used to convey the new value for the ValueChanged event.
            </remarks>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ValueChangedEventArgs`1.#ctor(`0,`0,NationalInstruments.Controls.PropertyChangeSource)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.ValueChangedEventArgs`1"/> class.
            </summary>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
            <param name="source">The source of the change, either programmatic or via a user interface.</param>
            <lastupdated>11/2/2011 1:53:26 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ValueChangedEventArgs`1.ToString">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.ValueChangedEventArgs`1.OldValue">
            <summary>
            Gets the old value of the property.
            </summary>
            <value>The old value.</value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value of the property.
            </summary>
            <value>The new value.</value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueChangedEventArgs`1.Source">
            <summary>
            Gets a value indicating whether an event originated from the user interface
            or from a programmatic write to the property.
            </summary>
            <value>The source.</value>
            <remarks>
            Indicates whether an event originated from <see cref="F:NationalInstruments.Controls.PropertyChangeSource.Interactive"/>
            or from <see cref="F:NationalInstruments.Controls.PropertyChangeSource.Programmatic"/>. </remarks>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.ValueChangingEventArgs`1">
            <summary>Gets the arguments to the source event as the value changes. 
            </summary>
            <typeparam name="TData">The data type of the <see cref="T:NationalInstruments.Controls.ValueChangingEventArgs`1" crefType="Unqualified"/> object.
            </typeparam>
            <remarks>
            Used to convey the old and new values for the event.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ValueChangingEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.ValueChangingEventArgs`1" crefType="Unqualified"/> class.
            </summary>
            <param name="oldValue">The value before any changes.
            </param>
            <param name="newValue">The value after this event.
            </param>
            <lastupdated>11/2/2011 1:54:18 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueChangingEventArgs`1.OldValue">
            <summary>
            Gets the value of the property as it stands before any change happens.
            </summary>
            <value>
            The old value.
            </value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueChangingEventArgs`1.NewValue">
            <summary>
            Gets or sets the value that is assigned to the property if this event is not cancelled.
            </summary>
            <value>
            The new value.
            </value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.ValueFormatterGroup">
            <summary>
            Provides a means for formatting a collection of values.
            </summary>
            <remarks>
            Use a <see cref="T:NationalInstruments.Controls.ValueFormatterGroup"/> to format a collection
            of values. If the <see cref="P:NationalInstruments.Controls.ValueFormatterGroup.ValueFormatters"/>
            property is not empty, the <see cref="T:NationalInstruments.Controls.Primitives.ValueFormatter"/>
            instances will be used for each element of the collection. If there are more elements in
            the collection than there are value formatters, <see cref="P:NationalInstruments.Controls.ValueFormatterGroup.DefaultFormatter"/>
            will be used for the remaining values.
            </remarks>
            <example>
            The following example demonstrates configuring a ValueFormatterGroup for the value label on a Cursor.
            It sets the first formatter in the group to display time values, and the default formatter to display numeric values.
            The two formatters in the group are separated by a semicolon (<c>;</c>).
            <code lang="XAML">
            &lt;ni:Cursor ValuePresenter="Group: yy-MM-dd HH:mm:ss; 0.00" /&gt;
            </code>
            You can also use the full element syntax to assign the different ValueFormatterGroup properties explicitly.
            <code lang="XAML">
            &lt;ni:Cursor &gt;
                &lt;ni:Cursor.ValuePresenter&gt;
                    &lt;ni:ValueFormatterGroup DefaultFormatter="0.00" Separator=" <entity value="mdash"/> "&gt;
                        &lt;ni:GeneralValueFormatter Format="yy-MM-dd HH:mm:ss" /&gt;
                    &lt;/ni:ValueFormatterGroup&gt;
                &lt;/ni:Cursor.ValuePresenter&gt;
            &lt;/ni:Cursor&gt;
            </code>
            </example>
            <threadsafety safety="unsafe"/>
            <lastupdated>2015-02-18 1:42:23 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ValueFormatterGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.ValueFormatterGroup" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>5/3/2012 3:54:46 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ValueFormatterGroup.#ctor(System.String,NationalInstruments.Controls.Primitives.ValueFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.ValueFormatterGroup" crefType="Unqualified"/> class
             with the specified <paramref name="separator"/> and <paramref name="defaultFormatter"/>.
            </summary>
            <param name="separator">The string used to separate each value.</param>
            <param name="defaultFormatter">The default formatter used when a formatter is not otherwise specified for a given index.</param>
            <lastupdated>5/3/2012 3:57:46 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ValueFormatterGroup.VisualizeCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.ValueFormatterGroup.Format``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <summary>
            Formats the specified raw data value into a string representation.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="value">The value to be formatted.</param>
            <param name="args">Additional arguments.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.ValueFormatterGroup.ToString">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.SeparatorProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.Separator'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.Separator'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.DefaultFormatterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.DefaultFormatter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.DefaultFormatter'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.ValueFormattersProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.ValueFormatters'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.ValueFormatters'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.BackgroundProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.Background'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.Background'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.ForegroundProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.Foreground'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.Foreground'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.FontFamilyProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontFamily'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontFamily'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.FontSizeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontSize'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontSize'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.FontStretchProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontStretch'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontStretch'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.FontStyleProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontStyle'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontStyle'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.ValueFormatterGroup.FontWeightProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontWeight'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.ValueFormatterGroup.FontWeight'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.ValueFormatterGroup.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.Separator">
            <summary>Gets or sets the string used to separate each value.</summary><value>The default value is <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>'s list separator.</value><exception cref="T:System.ArgumentException"><para><paramref name="value"/> cannot be <see langword="null"/>.</para></exception><lastupdated>6/1/2012 4:20:56 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.DefaultFormatter">
            <summary>Gets or sets the default formatter used when a formatter is not specified for a given index.</summary><value>The default value is a new <see cref="T:NationalInstruments.Controls.GeneralValueFormatter"/>.</value><exception cref="T:System.ArgumentException">
      <para>
        <paramref name="value"/> cannot be <see langword="null"/>.</para>
    </exception><lastupdated>5/30/2012 4:12:14 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.ValueFormatters">
            <summary>Gets or sets the formatters to use for each index of data.</summary><value>The default value is a new <see cref="T:NationalInstruments.Controls.Primitives.ValueFormatterCollection"/>.</value><exception cref="T:System.ArgumentException">
      <para>
        <paramref name="value"/> cannot be <see langword="null"/>.</para>
    </exception><lastupdated>5/3/2012 7:45:59 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.Background">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to draw the background of formatted values.</summary><value>The <see cref="T:System.Windows.Media.Brush"/> that will be used to draw
the background of the formatted value. The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 4:11:09 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.Foreground">
            <summary>Gets or sets a brush that describes the foreground color.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 4:21:32 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.FontFamily">
            <summary>Gets or sets the font used to display text.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 4:13:44 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.FontSize">
            <summary>Gets or sets the size of the text.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 4:18:46 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.FontStretch">
            <summary>Gets or sets the degree to which a font is condensed or expanded on the screen.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 4:19:43 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.FontStyle">
            <summary>Gets or sets the style in which the text is rendered.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 4:19:52 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ValueFormatterGroup.FontWeight">
            <summary>Gets or sets the thickness of the specified font.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>5/30/2012 4:19:59 PM</lastupdated><updatedby>Owen</updatedby><approved>False</approved>
        </member>
    </members>
</doc>
