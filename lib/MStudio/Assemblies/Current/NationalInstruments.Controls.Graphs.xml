<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:ni="urn:ni">
  <assembly>
    <name>NationalInstruments.Controls.Graphs</name>
  </assembly>
  <members>
    <member name="T:NationalInstruments.Controls.AngularRangeLabeledDivisions">
      <summary>
            Represents the range divisions on a PolarAngularAxis.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.AngularRangeLabeledDivisions.#ctor">
      <summary>
            Initializes a new instance of the AngularRangeLabeledDivisions class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.AngularRangeLabeledDivisions.CreateInstanceCore" />
    <member name="T:NationalInstruments.Controls.AngularScaleKind">
      <summary>
            Defines the format of the PolarAngularAxis.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.AngularScaleKind.CreateCustomScaleKind(System.Double,System.Double,System.String)">
      <summary>
            Creates an arbitrary scale kind for the PolarAngularAxis.
            </summary>
      <param name="minimum">The minimum for the range.</param>
      <param name="maximum">The maximum for the range.</param>
      <param name="tickSymbol">
            The string that renders the symbol that will be appended to each scale value along the AngularAxis.
            </param>
      <exception cref="T:System.ArgumentException">minimum (parameter) or maximum (parameter) is NaN.-or-minimum (parameter) and maximum (parameter) form an empty range.-or-minimum (parameter) and maximum (parameter) form an infinite range.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">minimum (parameter) is greater than maximum (parameter).
            </exception>
      <returns>An arbitrary range for the AngularAxis.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.AngularScaleKind.CreateDataMapper">
      <summary>
            Creates a data mapper you use to position values in a scale.
            </summary>
      <returns>An IRangeDataMapper&lt;T&gt; of type Double used to position values in a scale.</returns>
      <exception cref="T:System.InvalidOperationException">
            An IRangeDataMapper&lt;T&gt; cannot be created.
            </exception>
    </member>
    <member name="P:NationalInstruments.Controls.AngularScaleKind.Radians">
      <summary>
            Gets the angular axis range of a polar graph in radians.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.AngularScaleKind.Degrees">
      <summary>
            Gets the angular axis range of a polar graph in degrees.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.AngularScaleKind.TickSymbol">
      <summary>
            Gets the symbol the graph displays beside each scale value.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.AngularScaleKind.Range">
      <summary>
            Gets the range for the angular axis of the polar graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.AngularScaleKind.UnderlyingType" />
    <member name="T:NationalInstruments.Controls.AnnotationLabelAlignment">
      <summary>
            Defines how the Label of an Annotation is positioned within the plot area of a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.AnnotationLabelAlignment.#ctor(NationalInstruments.Controls.BoundsAlignment,System.Double,System.Double)">
      <summary>Initializes a new instance of the AnnotationLabelAlignment class.</summary>
      <param name="alignment">The position of the label within the plot area.</param>
      <param name="xOffset">The horizontal offset of the label.</param>
      <param name="yOffset">The vertical offset of the label.</param>
    </member>
    <member name="M:NationalInstruments.Controls.AnnotationLabelAlignment.ToString" />
    <member name="P:NationalInstruments.Controls.AnnotationLabelAlignment.Alignment">
      <summary>Gets the position of the label within the plot area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.AnnotationLabelAlignment.XOffset">
      <summary>Gets the horizontal offset of the label.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.AnnotationLabelAlignment.YOffset">
      <summary>Gets the vertical offset of the label.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.ColorScaleMarker">
      <summary>Represents the value and color pairs on a ColorScale.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScaleMarker.Equals(NationalInstruments.Controls.ColorScaleMarker)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <returns>true if the current object is equal to the other (parameter) parameter; otherwise, false.
            </returns>
      <param name="other">
            An object to compare with this object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScaleMarker.op_Equality(NationalInstruments.Controls.ColorScaleMarker,NationalInstruments.Controls.ColorScaleMarker)">
      <summary>
            Determines whether two specified ColorScaleMarker objects have the same value.
            </summary>
      <returns>true if the value of left (parameter) is the same as the value of right (parameter); otherwise, false.
            </returns>
      <param name="left">
            A ColorScaleMarker object.
            </param>
      <param name="right">
            A ColorScaleMarker object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScaleMarker.op_Inequality(NationalInstruments.Controls.ColorScaleMarker,NationalInstruments.Controls.ColorScaleMarker)">
      <summary>
            Determines whether two specified ColorScaleMarker objects have different values.
            </summary>
      <returns>true if the value of left (parameter) is the same as the value of right (parameter); otherwise, false.
            </returns>
      <param name="left">
            A ColorScaleMarker object.
            </param>
      <param name="right">
            A ColorScaleMarker object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScaleMarker.Equals(System.Object)">
      <summary>
            Determines whether the specified Object is equal to the current Object.
            </summary>
      <returns>true if the specified Object is equal to the current Object; otherwise, false.
            </returns>
      <param name="obj">
            The Object to compare with the current Object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScaleMarker.GetHashCode">
      <summary>
            Serves as a hash function for a particular type.
            </summary>
      <returns>
            A hash code for the current Object.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScaleMarker.#ctor(System.Double,System.Windows.Media.Color)">
      <summary>
            Initializes a new instance of the ColorScaleMarker struct
            with the specified value and color.
            </summary>
      <param name="value">The value of the marker.</param>
      <param name="color">The color of the marker.</param>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScaleMarker.ToString" />
    <member name="P:NationalInstruments.Controls.ColorScaleMarker.Value">
      <summary>Gets or sets the value of the marker.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScaleMarker.Color">
      <summary>Gets or sets the color of the marker.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Converters.GraphInteractionCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
    <member name="M:NationalInstruments.Controls.Converters.GraphInteractionCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
    <member name="M:NationalInstruments.Controls.Converters.GraphInteractionCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
    <member name="M:NationalInstruments.Controls.Converters.GraphInteractionCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
    <member name="T:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1">
      <summary>
            Represents a collection of chart data formed from AnalogWaveform&lt;T&gt; sources.
            </summary>
      <typeparam name="TData">The type of the waveform data stored in the collection.</typeparam>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.IGraphDataCollection">
      <summary>
            Represents a collection used to supply data to a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IGraphDataCollection.GetDataTypes">
      <summary>
            Retrieves the types of index and sample values contained in the collection.
            </summary>
      <returns>A collection containing the types of the index and sample data.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IGraphDataCollection.GetDataBuffers(NationalInstruments.DataInfrastructure.Trait)">
      <summary>
            Returns an array of buffers containing the index and sample values contained in the collection.
            </summary>
      <param name="decomposeOption">An optional trait indicating how the collection should be decomposed.</param>
      <returns>An array of buffers containing the index and sample values.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IGraphDataCollection.LoadDataBuffers(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer})">
      <summary>
            Loads the specified data into the collection.
            </summary>
      <param name="dimensionValues">A collection of buffers containing the index and sample data to load into the collection.</param>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.IGraphDataCollection.DataChanged">
      <summary>Occurs when the data in the collection changes.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IGraphDataCollection.Count">
      <summary>Gets the number of elements in the collection.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.#ctor">
      <summary>
            Initializes a new instance of the ChartCollectionAnalogWaveform&lt;T&gt; class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the ChartCollectionAnalogWaveform&lt;T&gt; class with a specified size.
            </summary>
      <param name="capacity">The maximum number of elements to store in the collection.</param>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.Append(NationalInstruments.AnalogWaveform{`0})">
      <summary>
            Appends the data in an AnalogWaveform&lt;T&gt; to the collection.
            </summary>
      <param name="waveform">The AnalogWaveform&lt;T&gt; containing the data to add.</param>
      <exception cref="T:System.ArgumentNullException">waveform (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            The timing of waveform (parameter) does not match the timing of the last waveform added.
            -or-

The timing of waveform (parameter) starts at a value less than or equal to the end time of the last waveform added.

-or-The timing of waveform (parameter) starts at a value less than or equal to the end time of the last waveform added.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.ToString" />
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.Clear">
      <summary>
            Clears the current data in the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.CopyTo(`0[],System.Int32)" />
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.GetEnumerator" />
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.NationalInstruments#Controls#Primitives#IGraphDataCollection#GetDataTypes" />
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.NationalInstruments#Controls#Primitives#IGraphDataCollection#GetDataBuffers(NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.NationalInstruments#Controls#Primitives#IGraphDataCollection#LoadDataBuffers(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer})" />
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.System#Collections#Generic#ICollection{TData}#Add(`0)">
      <summary>This members is not supported.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.System#Collections#Generic#ICollection{TData}#Contains(`0)" />
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.System#Collections#Generic#IList{TData}#IndexOf(`0)" />
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.System#Collections#IEnumerable#GetEnumerator" />
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.System#Collections#Generic#IList{TData}#Insert(System.Int32,`0)">
      <summary>This members is not supported.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.System#Collections#Generic#IList{TData}#RemoveAt(System.Int32)">
      <summary>This members is not supported.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.System#Collections#Generic#ICollection{TData}#Remove(`0)">
      <summary>This members is not supported.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.Capacity">
      <summary>
            Gets or sets the size of the chart collection.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">value (parameter) is less than or equal to zero.
            </exception>
    </member>
    <member name="P:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.Count" />
    <member name="P:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.Item(System.Int32)">
      <summary>Gets the sample value at the specified index.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is less than zero or greater than or equal to Count.
            </exception>
    </member>
    <member name="E:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.DataChanged" />
    <member name="P:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.System#Collections#Generic#IList{TData}#Item(System.Int32)">
      <exception cref="T:System.NotSupportedException">Always thrown on a set.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.ChartCollectionAnalogWaveform`1.System#Collections#Generic#ICollection{TData}#IsReadOnly" />
    <member name="T:NationalInstruments.Controls.Internal.NewSamplesTrait">
      <summary>
            Indicates the number of new samples from the data source contained in the buffer.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.NewSamplesTrait.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the NewSamplesTrait property with the specified new sample count.
            </summary>
      <param name="count">The number of new samples in the in the buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">count (parameter) is less than or equal to zero.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.NewSamplesTrait.LocalEquals(NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Internal.NewSamplesTrait.GetLocalHashCode" />
    <member name="M:NationalInstruments.Controls.Internal.NewSamplesTrait.SliceCore(NationalInstruments.DataInfrastructure.TraitScope,System.Int32)" />
    <member name="M:NationalInstruments.Controls.Internal.NewSamplesTrait.ToString" />
    <member name="P:NationalInstruments.Controls.Internal.NewSamplesTrait.Count">
      <summary>
            The number of new samples contained in the buffer.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.AxisInt32">
      <summary>
            Represents an Axis&lt;T&gt; of type Int32.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Axis`1">
      <summary>
            Defines the look and behavior of an axis on a graph.
            </summary>
      <typeparam name="TData">The data type of the axis.</typeparam>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.ICartesianAxis">
      <summary>
            Represents a Cartesian axis in a graph control.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.ICartesianAxis.Orientation">
      <summary>Gets or sets the declared orientation of the axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.ICartesianAxis.Location">
      <summary>Gets or sets the display location of the axis.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.IGraphChild">
      <summary>
            Represents an object within a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IGraphChild.RegisterParent(NationalInstruments.Controls.Primitives.IGraph)">
      <summary>
            Called when a child is added to a graph.
            </summary>
      <param name="parent">The new parent of the child.</param>
      <exception cref="T:System.ArgumentNullException">parent (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            The child does not support parents of the given type.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The child does not support multiple parents.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IGraphChild.Initialize">
      <summary>
            Called when the context of a child in a graph is updated.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IGraphChild.UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)">
      <summary>
            Called when a child is being removed from a graph.
            </summary>
      <param name="parent">The old parent of the child.</param>
      <exception cref="T:System.ArgumentNullException">parent (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The child is not registered to the given parent.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IGraphChild.Uninitialize">
      <summary>
            Called after a child has been removed from a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.#ctor">
      <summary>Initializes a new instance of the Axis&lt;T&gt; class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.#ctor(System.Object,System.Windows.Controls.Orientation)">
      <summary>Initializes a new instance of the Axis&lt;T&gt; class with the specified label and orientation.</summary>
      <param name="label">A label to describe the axis.</param>
      <param name="orientation">The orientation of the axis.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.GetDataMapper">
      <summary>
            Gets a data mapper for the scale.
            </summary>
      <returns>An IDataMapper&lt;T&gt; that you can use for mapping data values.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.GetDataMapper(System.Object)" />
    <member name="M:NationalInstruments.Controls.Axis`1.IsVisible(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="M:NationalInstruments.Controls.Axis`1.Present(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="M:NationalInstruments.Controls.Axis`1.Clean(NationalInstruments.Controls.Primitives.ScalePresenter)">
      <summary>Implements the Clean method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.ToString" />
    <member name="M:NationalInstruments.Controls.Axis`1.NationalInstruments#Controls#Primitives#IGraphChild#RegisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Axis`1.RegisterParent(NationalInstruments.Controls.Primitives.IGraph)">
      <summary>Implements the RegisterParent method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.NationalInstruments#Controls#Primitives#IGraphChild#Initialize" />
    <member name="M:NationalInstruments.Controls.Axis`1.Initialize">
      <summary>Implements the Initialize method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.NationalInstruments#Controls#Primitives#IGraphChild#UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Axis`1.UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)">
      <summary>Implements the UnregisterParent method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.NationalInstruments#Controls#Primitives#IGraphChild#Uninitialize" />
    <member name="M:NationalInstruments.Controls.Axis`1.Uninitialize">
      <summary>Implements the Uninitialize method.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Axis`1.OrientationProperty">
      <summary>
            Identifies the Orientation dependency property.
            </summary>
      <returns>
            The identifier for the Orientation dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Axis`1.RangeProperty">
      <summary>
            Identifies the Range dependency property.
            </summary>
      <returns>
            The identifier for the Range dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Axis`1.IsInvertedProperty">
      <summary>
            Identifies the IsInverted dependency property.
            </summary>
      <returns>
            The identifier for the IsInverted dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Axis`1.AdjusterProperty">
      <summary>
            Identifies the Adjuster dependency property.
            </summary>
      <returns>
            The identifier for the Adjuster dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Axis`1.LocationProperty">
      <summary>
            Identifies the Location dependency property.
            </summary>
      <returns>
            The identifier for the Location dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Axis`1.MajorGridLinesProperty">
      <summary>
            Identifies the MajorGridLines dependency property.
            </summary>
      <returns>
            The identifier for the MajorGridLines dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Axis`1.InteractionModeProperty">
      <summary>
            Identifies the InteractionMode dependency property.
            </summary>
      <returns>
            The identifier for the InteractionMode dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Axis`1.ScaleKindProperty">
      <summary>
            Identifies the ScaleKind dependency property.
            </summary>
      <returns>
            The identifier for the ScaleKind dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Axis`1.InnerMarginProperty">
      <summary>
            Identifies the InnerMargin dependency property.
            </summary>
      <returns>
            The identifier for the InnerMargin dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.OnScaleKindChanged(NationalInstruments.Controls.RangeScaleKind,NationalInstruments.Controls.RangeScaleKind)">
      <summary>
            Called when the ScaleKind property changes.
            </summary>
      <param name="oldValue">
            Old value of the ScaleKind property.
            </param>
      <param name="newValue">
            New value of the ScaleKind property.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.OnRangeChanged(System.EventArgs)">
      <summary>
            Raises the RangeChanged event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Axis`1.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.Axis`1.Orientation">
      <summary>Gets or sets the declared orientation of the axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.Range">
      <summary>Gets or sets the range of the axis.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is empty.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.IsInverted">
      <summary>
      Gets or sets a value indicating whether the scale should display inverted.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.Adjuster">
      <summary>
      Gets or sets the RangeAdjuster used to update Range when data is received by the graph.
    </summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.Location">
      <summary>Gets or sets the display location of the axis in the parent graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.MajorGridLines">
      <summary>Gets or sets the major grid lines for the axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.InteractionMode">
      <summary>Gets or sets the interaction mode for the axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.ScaleKind">
      <summary>Gets or sets the method used to map values in the scale.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.InnerMargin">
      <summary>Gets or sets the amount of space shown between the scale and its inside edge.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Axis`1.RangeChanged">
      <summary>Occurs when Range changes.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.ScaleObserver" />
    <member name="P:NationalInstruments.Controls.Axis`1.ScaleObserverChangeListener">
      <summary>
            Gets or sets a weak event listener for the IGraphComponentObserver.Change event.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.ParentAllScalesListener">
      <summary>
            Gets or sets a weak event listener for the IQueryableGraph.AllScales changing event.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.DataMapperProxy">
      <summary>
            Gets or sets the proxy for the data mapper for the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Axis`1.PresenterMarginBinding">
      <summary>
            Gets or sets the binding used to set the margin on the scale presenter.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.GraphInteractionPalette">
      <summary>
            Provides the ability to switch the DefaultInteraction
            on a Graph at run time.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.GraphInteractionPalette.GraphProperty">
      <summary>
            Identifies the Graph dependency property.
            </summary>
      <returns>
            The identifier for the Graph dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.GraphInteractionPalette.OrientationProperty">
      <summary>
            Identifies the Orientation dependency property.
            </summary>
      <returns>
            The identifier for the Orientation dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.GraphInteractionPalette.#ctor">
      <summary>
            Initializes a new instance of the GraphInteractionPalette class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.GraphInteractionPalette.OnApplyTemplate" />
    <member name="P:NationalInstruments.Controls.GraphInteractionPalette.Graph">
      <summary>Gets or sets the interaction target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteractionPalette.Orientation">
      <summary>Gets or sets the orientation of the palette.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteractionPalette.ButtonContainer">
      <summary>Gets the template part containing the interaction buttons.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Internal.PathPointsIterator.Bounds">
      <summary>[PRIVATE] internal for testing</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.PathPointsIterator.InitializePathPoints(NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double})">
      <summary>[PRIVATE] internal for testing</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Internal.PathPointsIterator.LineImplBase">
      <summary>[PRIVATE] internal for testing</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Internal.PathPointsIterator.LineImplBase.Points">
      <summary>[PRIVATE] protected for testing</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.PathPointsIterator.LineImplBase.GetInBoundsRelativePoints(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)">
      <summary>[PRIVATE] protected for testing</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Internal.PolarCoordinateHelper">
      <summary>
            Converts between screen and polar relative coordinates.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.PlotHitTestMode">
      <summary>
            Specifies the hit test mode for LayeredGraph.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.PlotHitTestMode.DataValuesOnly">
      <summary>Indicates hit testing is performed based on the underlying data values.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.PlotHitTestMode.RenderedInterpolation">
      <summary>Indicates hit testing is performed based on the visual rendering of data values.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.CartesianGraphComponentManager.CalculateUsageOrientation(NationalInstruments.Controls.Primitives.ICartesianAxis)">
      <summary>Determines the orientation of an axis based on how it is used by plots.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.PointShape">
      <summary>Represents a shape used to draw a point in a graph.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PointShape.DrawShape(System.Windows.Media.StreamGeometryContext,System.Windows.Rect)">
      <summary>Draws the shape geometry in the specified bounding box.</summary>
      <param name="context">The geometry to draw in.</param>
      <param name="boundingBox">The offset and size of the shape to draw.</param>
    </member>
    <member name="P:NationalInstruments.Controls.PointShape.Diamond">
      <summary>Gets a value for a diamond shape.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointShape.Ellipse">
      <summary>Gets a value for an ellipse shape.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointShape.InwardTriangle">
      <summary>Gets a value for an inward-pointing triangle shape.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointShape.OutwardTriangle">
      <summary>Gets a value for a outward-pointing triangle shape.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointShape.Rectangle">
      <summary>Gets a value for a rectangle shape.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointShape.UnderlyingType" />
    <member name="T:NationalInstruments.Controls.Primitives.AngularValueFormatter">
      <summary>
            Represents the formatter for values along an angular axis.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.AngularValueFormatter.CreateInstanceCore" />
    <member name="M:NationalInstruments.Controls.Primitives.AngularValueFormatter.#ctor">
      <summary>
            Initializes a new instance of the AngularValueFormatter class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.AngularValueFormatter.VisualizeCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs,System.Windows.UIElement)" />
    <member name="M:NationalInstruments.Controls.Primitives.AngularValueFormatter.FormatCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)" />
    <member name="P:NationalInstruments.Controls.Primitives.AngularValueFormatter.TickSymbol">
      <summary>
            Gets the tick symbol currently displayed on the labels of the angular scale.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.GraphInteractionCollection">
      <summary>
            Represents a collection of GraphInteraction objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphInteractionCollection.#ctor">
      <summary>Initializes a new instance of the GraphInteractionCollection class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphInteractionCollection.ChangeItemsCore(System.Int32,System.Int32,NationalInstruments.Controls.GraphInteraction[])" />
    <member name="T:NationalInstruments.Controls.Primitives.GraphInteractionTriggers">
      <summary>
            Specifies interactions that trigger events in the graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.GraphInteractionTriggers.None">
      <summary>
            No graph interaction occurs.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.GraphInteractionTriggers.MouseDown">
      <summary>
            Indicates the graph interaction occurs on a mouse down event.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.GraphInteractionTriggers.MouseMove">
      <summary>
            Indicates the graph interaction occurs on a mouse move event.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.GraphInteractionTriggers.MouseUp">
      <summary>
            Indicates the graph interaction occurs on a mouse up event.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.GridLinesRenderer`1">
      <summary>
            Provides functionality for rendering grid lines.
            </summary>
      <typeparam name="TData">The type of the grid line divisions to render.</typeparam>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.IRenderable">
      <summary>
            Represents an object that can be rendered.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderable.Render(NationalInstruments.Controls.Rendering.RenderArgs)">
      <summary>
            Renders the object on the specified target.
            </summary>
      <param name="renderArgs">A RenderArgs instance containing the target to draw to.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.IRenderable.SupportedRenderModes">
      <summary>
            Gets the render modes the renderer can draw to.
            </summary>
    </member>
    <member name="E:NationalInstruments.Controls.Rendering.IRenderable.Invalidated">
      <summary>Occurs when a change to the renderer requires that it be re-drawn.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.AxisOrientationProperty">
      <summary>
            Identifies the AxisOrientation dependency property.
            </summary>
      <returns>
            The identifier for the AxisOrientation dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.#ctor(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.Controls.Data.IDataMapper{`0},System.Boolean,System.Boolean)">
      <summary>
      Initializes a new instance of the GridLinesRenderer&lt;T&gt; with the specified options, data mapper, and range.
    </summary>
      <param name="options">The render target options for drawing the gridlines.</param>
      <param name="dataMapper">The data mapper used by the renderer.</param>
      <param name="drawMinimumGridLine">The setting for drawing the minimum grid line.</param>
      <param name="drawMaximumGridLine">The setting for drawing the maximum grid line.</param>
      <exception cref="T:System.ArgumentNullException">options (parameter) is null.
      -or-dataMapper (parameter) is null.
      </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.OnInvalidated(NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs)">
      <summary>
            Raises the Invalidated event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of RenderInvalidatedEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.Render(NationalInstruments.Controls.Rendering.RenderArgs)" />
    <member name="P:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.Options">
      <summary>Gets the render target options for drawing the gridlines.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.DataMapper">
      <summary>Gets the data mapper used by the renderer.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.DrawMinimumGridLine">
      <summary>Gets the setting for drawing the minimum grid line.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.DrawMaximumGridLine">
      <summary>Gets the setting for drawing the maximum grid line.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.AxisOrientation">
      <summary>Gets or sets the orientation of the parent axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.Subdivisions">
      <summary>Gets or sets the subdivisions used by the renderer to draw gridlines.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.Invalidated" />
    <member name="P:NationalInstruments.Controls.Primitives.GridLinesRenderer`1.SupportedRenderModes" />
    <member name="T:NationalInstruments.Controls.Primitives.IRenderableGraph">
      <summary>
            Represents a graph that displays data through IRenderablePlot objects.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.IQueryableGraph">
      <summary>
            Provides methods for querying data in a two-dimensional graph.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.IGraph">
      <summary>
            Represents a graph control.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IGraph.Refresh">
      <summary>
            Reprocesses all data in the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IGraph.Data">
      <summary>
            Gets the collection of data sources that are rendered by the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IGraph.DataSource">
      <summary>
            Gets or sets an object used to populate the Data collection.
            </summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.IGraph.DataProcessed">
      <summary>
            Occurs after data is processed by the graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.GetPlotAreaSize">
      <summary>
            Gets the size of the plot area.
            </summary>
      <returns>The size of the plot area, or Empty if the graph has not yet loaded.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.DataToRelative(NationalInstruments.Controls.Primitives.IScale,System.Object)">
      <summary>
            Converts a data value to the corresponding relative value with respect to the specified scale.
            </summary>
      <param name="scale">The scale to use for mapping the data value.</param>
      <param name="value">A data value.</param>
      <returns>The relative value corresponding to value (parameter), or NaN if value (parameter) could not be mapped.</returns>
      <exception cref="T:System.ArgumentNullException">scale (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">scale (parameter) is not contained in the graph.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.DataToRelative(NationalInstruments.Controls.Primitives.IPlot,System.Collections.IList)">
      <summary>
            Converts a data value to the corresponding relative coordinate positions with respect to the coordinate scales on the specified plot.
            </summary>
      <param name="plot">A plot used to reference coordinate scales.</param>
      <param name="value">A data value.</param>
      <returns>The relative position of value (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">plot (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">plot (parameter) is not contained in the graph.
              -or-

value (parameter) does not contain both horizontal and vertical dimensions.

-or-value (parameter) does not contain both horizontal and vertical dimensions.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.DataToScreen(NationalInstruments.Controls.Primitives.IPlot,System.Collections.IList)">
      <summary>
            Converts data values to the corresponding screen coordinates, with respect to the scales on the specified plot.
            </summary>
      <param name="plot">A plot used to reference coordinate scales.</param>
      <param name="value">A data value.</param>
      <returns>The relative position of value (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">plot (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">plot (parameter) is not contained in the graph.
              -or-

value (parameter) does not contain both horizontal and vertical dimensions.

-or-value (parameter) does not contain both horizontal and vertical dimensions.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.RelativeToData(NationalInstruments.Controls.Primitives.IScale,System.Double)">
      <summary>
            Converts a relative value to the corresponding data value with respect to the specified scale.
            </summary>
      <param name="scale">The scale to use for mapping the relative value.</param>
      <param name="relativeValue">A relative value.</param>
      <returns>The data value corresponding to relativeValue (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">scale (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">scale (parameter) is not contained in the graph.
              -or-

relativeValue (parameter) is NaN.

-or-relativeValue (parameter) is NaN.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.RelativeToData(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point)">
      <summary>
            Converts a relative position to the corresponding data value with respect to the coordinate scales on the specified plot.
            </summary>
      <param name="plot">A plot used to reference coordinate scales.</param>
      <param name="relativePosition">A relative position.</param>
      <returns>The data value corresponding to relativePosition (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">plot (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">plot (parameter) is not contained in the graph.
              -or-

relativePosition (parameter) contains a NaN value.

-or-relativePosition (parameter) contains a NaN value.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.RelativeToScreen(System.Windows.Point)">
      <summary>
            Converts a relative position within the plot area to the corresponding screen position.
            </summary>
      <param name="relativePosition">A relative position.</param>
      <returns>The screen position corresponding to relativePosition (parameter).</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.ScreenToData(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point)">
      <summary>
            Converts a screen position to the corresponding data value within the plot area.
            </summary>
      <param name="plot">A plot used to reference coordinate scales.</param>
      <param name="screenPosition">A screen position.</param>
      <returns>The data value corresponding to screenPosition (parameter).</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.ScreenToRelative(System.Windows.Point)">
      <summary>
            Converts a screen position to the corresponding relative position within the plot area.
            </summary>
      <param name="screenPosition">A screen position.</param>
      <returns>The relative position corresponding to screenPosition (parameter).</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.GetValue(NationalInstruments.Controls.Primitives.IPlot,System.Int32)">
      <summary>
            Gets the value at the specified index on a plot.
            </summary>
      <param name="plot">The plot to retrieve data from.</param>
      <param name="dataIndex">The index of the desired data value.</param>
      <returns>
            The PlotValue at dataIndex (parameter) on plot (parameter);
            or null if there is no data for dataIndex (parameter).
            </returns>
      <exception cref="T:System.ArgumentNullException">plot (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">plot (parameter) is not contained in the graph.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.FindValues(NationalInstruments.Controls.Primitives.IPlot,NationalInstruments.Controls.Primitives.IRange,NationalInstruments.Controls.Primitives.IRange,System.Boolean)">
      <summary>
            Finds the values in the graph on the provided plot within the specified ranges.
            </summary>
      <param name="plot">The plot to retrieve data from.</param>
      <param name="horizontalRange">The range to retrieve for values along the horizontal axis, or null.</param>
      <param name="verticalRange">The range to retrieve for values along the vertical axis, or null.</param>
      <param name="isInclusive">Indicates whether values on the end of the ranges are included in the result.</param>
      <returns>
            A collection of Buffer objects containing the found data,
            where each Buffer contains all the data for the corresponding dimension;
            or null if plot (parameter) is not contained in the graph, or there is no data for plot (parameter).
            </returns>
      <exception cref="T:System.ArgumentNullException">plot (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">plot (parameter) is not contained in the graph.
              -or-

Both horizontalRange (parameter) and verticalRange (parameter) are null.

-or-Both horizontalRange (parameter) and verticalRange (parameter) are null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.FindNearestValue(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>
            Finds the nearest value in the graph, with respect to a relative position on a plot.
            </summary>
      <param name="startingPlot">The plot to begin the search from.</param>
      <param name="relativePosition">The relative position to begin the search from.</param>
      <param name="args">The search criteria.</param>
      <returns>
            The nearest PlotValue to the given starting criteria;
            or null if no relevant plots or data was found.
            </returns>
      <exception cref="T:System.ArgumentNullException">startingPlot (parameter) is null.
              -or-

args (parameter) is null.

-or-args (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">startingPlot (parameter) is not contained in the graph.
              -or-

relativePosition (parameter) contains a NaN value.

-or-relativePosition (parameter) contains a NaN value.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.FindNearestValues(NationalInstruments.Controls.Primitives.IScale,System.Double,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>
            Finds the nearest values in the graph, with respect to a relative position along a coordinate scale.
            </summary>
      <param name="axis">The coordinate scale to search along.</param>
      <param name="relativeValue">The relative position to begin the search from.</param>
      <param name="args">The search criteria.</param>
      <returns>
            A collection of the nearest PlotValue objects in each plot using axis (parameter);
            or an empty collection if no relevant plots or data were found.
            </returns>
      <exception cref="T:System.ArgumentNullException">axis (parameter) is null.
              -or-

args (parameter) is null.

-or-args (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">axis (parameter) is not contained in the graph.
              -or-

relativeValue (parameter) is NaN.

-or-relativeValue (parameter) is NaN.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.GetPlots(NationalInstruments.Controls.Primitives.IScale)">
      <summary>
            Gets a collection of all plots in the graph using the specified coordinate scale.
            </summary>
      <param name="axis">A coordinate scale.</param>
      <returns>
            A collection of all IPlot objects using axis (parameter);
            or an empty collection if no relevant plots were found.
            </returns>
      <exception cref="T:System.ArgumentNullException">axis (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">axis (parameter) is not contained in the graph.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.GetOrientation(NationalInstruments.Controls.Primitives.IScale)">
      <summary>
            Returns the Orientation of the coordinate scale.
            </summary>
      <param name="axis">A coordinate scale.</param>
      <returns>The orientation of axis (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">axis (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">axis (parameter) is not contained in the graph.
              -or-

axis (parameter) is not used as a coordinate scale.

-or-axis (parameter) is not used as a coordinate scale.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.GetDefaultAxis(System.Windows.Controls.Orientation)">
      <summary>
            Gets the default coordinate scale for the graph, for the specified orientation.
            </summary>
      <param name="orientation">The orientation of the coordinate scale.</param>
      <returns>The default orientation (parameter) coordinate scale for the graph.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid Orientation value.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.GetAxis(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Controls.Orientation)">
      <summary>
            Gets the coordinate scale for the specified plot.
            </summary>
      <param name="plot">The plot to retrieve the axis from.</param>
      <param name="orientation">The orientation of the coordinate scale.</param>
      <returns>The default orientation (parameter) coordinate scale for plot (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">plot (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">plot (parameter) is not contained in the graph.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid Orientation value.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.GetDefaultPlot">
      <summary>
            Gets the default plot for the graph.
            </summary>
      <returns>The default plot for the graph.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.ContainsAxis(NationalInstruments.Controls.Primitives.IScale)">
      <summary>
            Gets a value indicating whether the graph contains the specified coordinate scale.
            </summary>
      <param name="axis">The coordinate scale to test.</param>
      <returns>true if the graph contains axis (parameter); otherwise, false.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.ContainsScale(NationalInstruments.Controls.Primitives.IScale)">
      <summary>
            Gets a value indicating whether the graph contains the specified scale.
            </summary>
      <param name="scale">The scale to test.</param>
      <returns>true if the graph contains scale (parameter); otherwise, false.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IQueryableGraph.ContainsPlot(NationalInstruments.Controls.Primitives.IPlot)">
      <summary>
            Gets a value indicating whether the graph contains the specified plot.
            </summary>
      <param name="plot">The plot to test.</param>
      <returns>true if the graph contains plot (parameter); otherwise, false.</returns>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IQueryableGraph.AllPlots">
      <summary>
            Gets the collection of all plots currently contained in the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IQueryableGraph.AllScales">
      <summary>
            Gets the collection of all scales currently contained in the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IRenderableGraph.DefaultPlotRenderers">
      <summary>
            Gets the collection of renderers to use by default, if a plot does not specify a renderer.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IRenderableGraph.ActualRenderMode">
      <summary>Gets the renderer mode for the graph.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.QueryableGraphCartesianHelper.FindNearestValuesOnPlotOverride``1(System.Double,NationalInstruments.Controls.Data.IDataMapper{``0},NationalInstruments.DataInfrastructure.Buffer{``0},System.Double,NationalInstruments.Controls.Internal.Pair{NationalInstruments.Controls.Primitives.GraphQueryArgs,System.Boolean})">
      <summary>--- INTERNAL FOR TESTING ---</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.QueryableGraphPolarHelper.GetWrappedDistance(System.Double,System.Double)">
      <summary>
            Gets the wrapped distance (meaning, the shortest distance which might wrap around a circle) between two relative values.
            </summary>
      <param name="current">The starting relative value to check against (0-1).</param>
      <param name="original">The ending relative value to check against (0-1).</param>
      <returns />
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IGraphComponentObserver.GraphParent">
      <summary>
            Gets the graph parent of this component.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IGraphComponentObserver.IsValid">
      <summary>
            Gets a value indicating whether the observed component is valid.
            </summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.IGraphComponentObserver.Change">
      <summary>
            Occurs when the observer is updated, or when a component property on the component value changes.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.#ctor(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.OnChange(NationalInstruments.Controls.Primitives.ObservedChangeEventArgs)">
      <summary>
            Raises the Change event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of ObservedChangeEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.#ctor(NationalInstruments.Controls.Primitives.IGraph,`0,System.String[])">
      <summary>
            Initializes a new instance of the GraphComponentObserver&lt;T&gt; class with the specified parent, component, and component properties.
            </summary>
      <param name="graphParent">The parent graph.</param>
      <param name="component">The observed component.</param>
      <param name="componentProperties">The dependency properties on component (parameter) to monitor.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.ToString" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.OnComponentChanged(`0,`0)">
      <summary>
            Called when the value of Component changes.
            </summary>
      <param name="oldValue">The old component value.</param>
      <param name="newValue">The new component value.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.OnObserverPropertyChanged(System.String)">
      <summary>
            Raises the Change event for the specified observer property.
            </summary>
      <param name="propertyName">The name of the observer property that changed.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.OnComponentPropertyChanged(System.String,System.Object,System.Object)">
      <summary>
            Raises the Change event for the specified component property.
            </summary>
      <param name="propertyName">The name of the component property that changed.</param>
      <param name="oldValue">The old property value.</param>
      <param name="newValue">The new property value.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.OnEvent(System.String,System.EventArgs)">
      <summary>
            Raises the Change event for the specified event.
            </summary>
      <param name="memberName">The name of the member that raised the event.</param>
      <param name="eventArgs">The event args raised by the member.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.GraphParent">
      <summary>Gets the graph parent of this component.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.Component">
      <summary>Gets or sets the observed component.</summary>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.IsValid" />
    <member name="E:NationalInstruments.Controls.Primitives.GraphComponentObserver`1.Change" />
    <member name="T:NationalInstruments.Controls.Primitives.IScaleObserver">
      <summary>
            Represents an observer for a scale in a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.#ctor(NationalInstruments.Controls.Primitives.IGraph,`0,System.String[])" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.Equals(NationalInstruments.Controls.Primitives.IScale)" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.Equals(System.Object)" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.GetHashCode" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.OnComponentChanged(`0,`0)" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.GetDataMapper" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.GetDataMapper(System.Object)" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.IsVisible(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.Clean(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.Present(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="P:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.DataMapperChangedListener">
      <summary>
            Gets or sets a weak event listener for the IDataMapper.Changed event.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.Scale">
      <summary>
            Gets the observed scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.Label" />
    <member name="P:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.LabelTemplate" />
    <member name="P:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.Visibility" />
    <member name="E:NationalInstruments.Controls.Primitives.ScaleObserverBase`1.Invalidated" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserver.#ctor(NationalInstruments.Controls.Primitives.IQueryableGraph,NationalInstruments.Controls.Primitives.IScale)" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserver.#ctor(NationalInstruments.Controls.Primitives.IQueryableGraph,NationalInstruments.Controls.Primitives.IScale,System.String[])" />
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserver.UpdateIsValid">
      <summary>
            Updates the value of IsValid when the context of the observed scale changes.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.ScaleObserver.AllScalesChangingListener">
      <summary>
            Gets or sets a weak event listener for the INotifyCollectionChanging.CollectionChanging event.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.ScaleObserver.QueryableParent">
      <summary>
            Gets the IQueryableGraphGraphParent.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CartesianScaleObserver.#ctor(NationalInstruments.Controls.Primitives.IQueryableGraph,NationalInstruments.Controls.Primitives.IScale)" />
    <member name="P:NationalInstruments.Controls.Primitives.CartesianScaleObserver.ActualOrientation">
      <summary>
            Gets the actual orientation of the scale, as used in the parent graph.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.PlotArea">
      <summary>Represents the plot area of a graph where data and children are displayed.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotArea.#ctor">
      <summary>
            Initializes a new instance of the PlotArea class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotArea.OnApplyTemplate" />
    <member name="M:NationalInstruments.Controls.Primitives.PlotArea.OnRedrawNeeded(System.EventArgs)">
      <summary>
            Raises the RedrawNeeded event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotArea.RenderPlotData(NationalInstruments.Controls.Primitives.IQueryableGraph,System.Collections.Generic.IDictionary{System.Int32,NationalInstruments.Controls.Rendering.RelativeDataCollection})">
      <summary>
            Renders the specified data visually.
            </summary>
      <param name="graph">The parent graph control.</param>
      <param name="plotData">The relative data for each plot to draw.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotArea.RenderCachedPlotData">
      <summary>
            Renders all plots with cached data.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotArea.ClearPlotData(System.Int32)">
      <summary>
            Clears the cached data for the specified plot.
            </summary>
      <param name="plotIndex">The index of the plot that will have its data cleared.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotArea.AddChild(System.Object,NationalInstruments.Controls.GraphLayerPosition)">
      <summary>
            Adds a child to the provided layer of the graph.
            </summary>
      <param name="child">The child object to be added.</param>
      <param name="position">The GraphLayerPosition in which to place the child.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotArea.RemoveChild(System.Object)">
      <summary>
            Removes the specified child from the plot area.
            </summary>
      <param name="child">The child to remove.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotArea.MeasureOverride(System.Windows.Size)" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotArea.Root">
      <summary>Gets the template part in which all renderers and data are presented.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.PlotArea.RedrawNeeded">
      <summary>Occurs when the plot area needs to be redrawn.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotArea.RenderMode">
      <summary>Gets or sets the desired render mode on the data plot area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotArea.ActualRenderMode">
      <summary>Gets the render mode used by the data plot area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotArea.AboveRenderArea">
      <summary>Gets the render area above the plot data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotArea.BelowRenderArea">
      <summary>Gets the render area below the plot data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotArea.DataPlotArea">
      <summary>Gets the render area that contains the plot data.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CartesianPlotArea.PhosphorColorRampProperty">
      <summary>
            Identifies the PhosphorColorRamp dependency property.
            </summary>
      <returns>
            The identifier for the PhosphorColorRamp dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CartesianPlotArea.#ctor">
      <summary>
            Initializes a new instance of the CartesianPlotArea class.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CartesianPlotArea.PhosphorColorRamp">
      <summary>Gets or sets the color ramp to use for the graph phosphor effect.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CartesianPlotArea.AboveRenderAreaValue">
      <summary>
            Gets or sets the AboveRenderArea value.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CartesianPlotArea.BelowRenderAreaValue">
      <summary>
            Gets or sets the BelowRenderArea value.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CartesianPlotArea.DataPlotAreaValue">
      <summary>
            Gets or sets the DataPlotArea value.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CartesianPlotArea.AboveRenderArea" />
    <member name="P:NationalInstruments.Controls.Primitives.CartesianPlotArea.BelowRenderArea" />
    <member name="P:NationalInstruments.Controls.Primitives.CartesianPlotArea.DataPlotArea" />
    <member name="T:NationalInstruments.Controls.Primitives.ISupportChildren">
      <summary>
            Represents a control that supports displaying child elements.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.ISupportChildren.AddDependentChild(System.Object)">
      <summary>
            Adds a helper display object to the control.
            </summary>
      <param name="child">The helper object to display.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.ISupportChildren.RemoveDependentChild(System.Object)">
      <summary>
            Removes a helper display object from the control.
            </summary>
      <param name="child">The helper object to remove.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.ISupportChildren.Children">
      <summary>
            Gets the collection of user-defined child objects to display in the graph.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.PlotObserverCollection">
      <summary>
            Represents a collection of all plots used by a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotObserverCollection.#ctor(NationalInstruments.Controls.Primitives.NotifyingCollection{NationalInstruments.Controls.Primitives.IPlotObserver})">
      <summary>
            Initializes a new instance of the PlotObserverCollection class.
            </summary>
      <param name="collection">The elements in the collection.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotObserverCollection.Contains(NationalInstruments.Controls.Primitives.IPlot)">
      <summary>
            Determines whether the collection contains an observer for the specified plot.
            </summary>
      <param name="plot">The plot to locate.</param>
      <returns>true if an IPlotObserver for plot (parameter) was found in the collection; otherwise, false.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotObserverCollection.IndexOf(NationalInstruments.Controls.Primitives.IPlot)">
      <summary>
            Determines the index of the observer for the specified plot in the collection.
            </summary>
      <param name="plot">The plot to locate.</param>
      <returns>The index of the IPlotObserver for plot (parameter), if found in the collection; otherwise, -1.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Point3DDescriptor.GetDefaultValue" />
    <member name="M:NationalInstruments.Controls.Primitives.Point3DDescriptor.GetDimensionDataTypes(System.Windows.Media.Media3D.Point3D,NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.Point3DDescriptor.DecomposeValues(NationalInstruments.DataInfrastructure.Buffer{System.Windows.Media.Media3D.Point3D},NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.Point3DDescriptor.ComposeValues(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer},NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.Point3DDescriptor.ToString" />
    <member name="T:NationalInstruments.Controls.Primitives.IPlotObserver">
      <summary>
            Represents an observer for a plot in a graph.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.IPlot">
      <summary>
            Represents a plot of data in a graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IPlot.Index">
      <summary>
            Gets the index of the plot in the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IPlot.Label">
      <summary>
            Gets or sets a label to describe the plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IPlot.LabelTemplate">
      <summary>
            Gets or sets the data template used to display the plot label.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IPlot.Visibility">
      <summary>
            Gets or sets a value indicating whether the plot is shown.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IPlot.AdjustHorizontalScale">
      <summary>
            Get a value indicating whether the plot affects the auto-scaling of the scale representing the horizontal dimension.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IPlot.AdjustVerticalScale">
      <summary>
            Get a value indicating whether the plot affects the auto-scaling of the scale representing the vertical dimension.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IPlotObserver.Scales">
      <summary>Gets the set of scales used by the plot.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotObserverBase`1.#ctor(NationalInstruments.Controls.Primitives.IGraph,`0,System.String[])" />
    <member name="M:NationalInstruments.Controls.Primitives.PlotObserverBase`1.Equals(NationalInstruments.Controls.Primitives.IPlot)" />
    <member name="M:NationalInstruments.Controls.Primitives.PlotObserverBase`1.Equals(System.Object)" />
    <member name="M:NationalInstruments.Controls.Primitives.PlotObserverBase`1.GetHashCode" />
    <member name="M:NationalInstruments.Controls.Primitives.PlotObserverBase`1.OnComponentChanged(`0,`0)" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotObserverBase`1.Plot">
      <summary>
            Gets the observed plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotObserverBase`1.Scales" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotObserverBase`1.ScalesCore">
      <summary>Gets the mutable collection of scales used by the plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotObserverBase`1.Index" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotObserverBase`1.Label" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotObserverBase`1.LabelTemplate" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotObserverBase`1.Visibility" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotObserverBase`1.AdjustHorizontalScale" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotObserverBase`1.AdjustVerticalScale" />
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlotObserver`1.#ctor(NationalInstruments.Controls.Primitives.IRenderableGraph,`0)" />
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlotObserver`1.#ctor(NationalInstruments.Controls.Primitives.IRenderableGraph,`0,System.String[])" />
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlotObserver`1.OnComponentPropertyChanged(System.String,System.Object,System.Object)" />
    <member name="P:NationalInstruments.Controls.Primitives.RenderablePlotObserver`1.RendererInvalidatedListener">
      <summary>
            Gets or sets a weak event listener for the IRenderable.Invalidated event.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.ScaleObserverCollection">
      <summary>
            Represents a collection of scales used by a plot or graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverCollection.#ctor(NationalInstruments.Controls.Primitives.NotifyingCollection{NationalInstruments.Controls.Primitives.IScaleObserver})">
      <summary>
            Initializes a new instance of the ScaleObserverCollection class.
            </summary>
      <param name="collection">The elements in the collection.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverCollection.Contains(NationalInstruments.Controls.Primitives.IScale)">
      <summary>
            Determines whether the collection contains an observer to the specified scale.
            </summary>
      <param name="scale">The scale to locate.</param>
      <returns>true if an IScaleObserver for scale (parameter) was found in the collection; otherwise, false.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.ScaleObserverCollection.IndexOf(NationalInstruments.Controls.Primitives.IScale)">
      <summary>
            Determines the index of the observer for the specified scale in the collection.
            </summary>
      <param name="scale">The scale to locate.</param>
      <returns>The index of the IScaleObserver for scale (parameter), if found in the collection; otherwise, -1.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CartesianPlotObserver.#ctor(NationalInstruments.Controls.Primitives.IRenderableGraph,NationalInstruments.Controls.Plot)" />
    <member name="F:NationalInstruments.Controls.Primitives.ObservedChangeSource.ObserverProperty">
      <summary>A property on the IGraphComponentObserver object changed.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.ObservedChangeSource.ComponentProperty">
      <summary>A monitored property on the observed component value changed.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.ObservedChangeSource.Event">
      <summary>A monitored event was raised by the IGraphComponentObserver object or one of its members.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphDataCollectionDescriptor`1.GetDefaultValue" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphDataCollectionDescriptor`1.GetDimensionDataTypes(`0,NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphDataCollectionDescriptor`1.Decompose(`0,NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphDataCollectionDescriptor`1.Compose(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer},NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphDataCollectionDescriptor`1.GetValueObserver(`0,NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphDataCollectionDescriptor`1.ToString" />
    <member name="F:NationalInstruments.Controls.Primitives.LegendGlyph.RendererProperty">
      <summary>
            Identifies the Renderer dependency property.
            </summary>
      <returns>
            The identifier for the Renderer dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LegendGlyph.#ctor">
      <summary>
            Initializes a new instance of the LegendGlyph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LegendGlyph.OnApplyTemplate" />
    <member name="M:NationalInstruments.Controls.Primitives.LegendGlyph.Redraw">
      <summary>
            Updates the glyph representation of the Renderer.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LegendGlyph.MeasureOverride(System.Windows.Size)" />
    <member name="P:NationalInstruments.Controls.Primitives.LegendGlyph.Renderer">
      <summary>Gets or sets the renderer displayed by the glyph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LegendGlyph.Root">
      <summary>
            Gets the panel on which to place visuals.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LegendGlyph.RendererChangedListener">
      <summary>
            Gets or sets a weak event listener for the IRenderable.Invalidated event.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PolarPlotArea.#ctor">
      <summary>
            Initializes a new instance of the PolarPlotArea class.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PolarPlotArea.AboveRenderAreaValue">
      <summary>
            Gets or sets the AboveRenderArea value.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PolarPlotArea.BelowRenderAreaValue">
      <summary>
            Gets or sets the BelowRenderArea value.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PolarPlotArea.DataPlotAreaValue">
      <summary>
            Gets or sets the DataPlotArea value.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PolarPlotArea.AboveRenderArea" />
    <member name="P:NationalInstruments.Controls.Primitives.PolarPlotArea.BelowRenderArea" />
    <member name="P:NationalInstruments.Controls.Primitives.PolarPlotArea.DataPlotArea" />
    <member name="T:NationalInstruments.Controls.Primitives.RenderablePlot">
      <summary>
            Represents an abstract base class for plots that display relative data.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.PlotBase">
      <summary>
            Provides an abstract base class for all two-dimensional plots.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.PlotBase.LabelProperty">
      <summary>
            Identifies the Label dependency property.
            </summary>
      <returns>
            The identifier for the Label dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.PlotBase.LabelTemplateProperty">
      <summary>
            Identifies the LabelTemplate dependency property.
            </summary>
      <returns>
            The identifier for the LabelTemplate dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.PlotBase.VisibilityProperty">
      <summary>
            Identifies the Visibility dependency property.
            </summary>
      <returns>
            The identifier for the Visibility dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.PlotBase.IndexProperty">
      <summary>
            Identifies the Index dependency property.
            </summary>
      <returns>
            The identifier for the Index dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotBase.#ctor">
      <summary>
            Initializes a new instance of the PlotBase class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotBase.ToString" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotBase.Index">
      <summary>Gets the index of the plot in the parent graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotBase.Label">
      <summary>Gets or sets a label to describe the plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotBase.LabelTemplate">
      <summary>Gets or sets the data template used to display the plot label.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotBase.Visibility">
      <summary>Gets or sets a value indicating whether the plot is displayed.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotBase.NationalInstruments#Controls#Primitives#IPlot#AdjustHorizontalScale" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotBase.NationalInstruments#Controls#Primitives#IPlot#AdjustVerticalScale" />
    <member name="P:NationalInstruments.Controls.Primitives.PlotBase.AdjustHorizontalScaleCore">
      <summary>Implements the AdjustHorizontalScale property.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PlotBase.AdjustVerticalScaleCore">
      <summary>Implements the AdjustVerticalScale property.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.IRenderablePlot">
      <summary>
            Represents a plot that can be rendered.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IRenderablePlot.ActualRenderer">
      <summary>Gets the renderer used to display the plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IRenderablePlot.Renderer">
      <summary>Gets or sets the renderer used to draw the data associated with the plot.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.RenderablePlot.RendererProperty">
      <summary>
            Identifies the Renderer dependency property.
            </summary>
      <returns>
            The identifier for the Renderer dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.RenderablePlot.ActualRendererProperty">
      <summary>
            Identifies the ActualRenderer dependency property.
            </summary>
      <returns>
            The identifier for the ActualRenderer dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlot.#ctor">
      <summary>
            Initializes a new instance of the RenderablePlot class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlot.OnParentRegistered">
      <summary>
            Responds to the registration of a parent.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlot.OnParentUnregistered(NationalInstruments.Controls.Primitives.IQueryableGraph)">
      <summary>
            Responds to the unregistering of a parent.
            </summary>
      <param name="oldParent">The parent that is unregistered.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlot.NationalInstruments#Controls#Primitives#IGraphChild#RegisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlot.NationalInstruments#Controls#Primitives#IGraphChild#Initialize" />
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlot.NationalInstruments#Controls#Primitives#IGraphChild#UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Primitives.RenderablePlot.NationalInstruments#Controls#Primitives#IGraphChild#Uninitialize" />
    <member name="P:NationalInstruments.Controls.Primitives.RenderablePlot.ActualRenderer">
      <summary>Gets the renderer used to display the plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.RenderablePlot.Renderer">
      <summary>Gets or sets the renderer used to draw the data associated with the plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.RenderablePlot.DefaultRenderersListener">
      <summary>
            Gets or sets a weak event listener for the IRenderableGraph.DefaultPlotRenderers changing event.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.RenderablePlot.GraphParent">
      <summary>Gets the parent graph.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.RelativePosition">
      <summary>
            Specifies the different positions where a child object can be placed.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.RelativePosition.Near">
      <summary>The child should appear on the nearest side of the parent control, as defined by the parent.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.RelativePosition.Far">
      <summary>The child should appear on the farthest side of the parent control, as defined by the parent.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.ColorRamp">
      <summary>
            Represents a color ramp used for phosphorescence.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.ColorRamp.DurationProperty">
      <summary>
            Identifies the Duration dependency property.
            </summary>
      <returns>
            The identifier for the Duration dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.ColorRamp.DurationKindProperty">
      <summary>
            Identifies the DurationKind dependency property.
            </summary>
      <returns>
            The identifier for the DurationKind dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.ColorRamp.GetColorData(System.Int32[])">
      <summary>
            Fills an array of integers representing colors sampled from the color ramp.
            </summary>
      <param name="colorData">The array to populate.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.ColorRamp.Duration">
      <summary>Gets or sets the amount of time it takes to visit every color in the ramp.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.ColorRamp.DurationKind">
      <summary>Gets or sets whether the duration of the color ramp is based on time or frame.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.DurationKind">
      <summary>
            Specifies how the Duration property on ColorRamp is interpreted.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.DurationKind.Time">
      <summary>
            Indicates Duration represents a time value in milliseconds.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.DurationKind.Frames">
      <summary>
            Indicates Duration represents a frame count.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.FadeRamp">
      <summary>
            Provides a color ramp that fades from a specified color to transparent.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.FadeRamp.FadeColorProperty">
      <summary>
            Identifies the FadeColor dependency property.
            </summary>
      <returns>
            The identifier for the FadeColor dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.FadeRamp.CreateInstanceCore" />
    <member name="M:NationalInstruments.Controls.Rendering.FadeRamp.GetColorData(System.Int32[])" />
    <member name="P:NationalInstruments.Controls.Rendering.FadeRamp.FadeColor">
      <summary>Gets or sets the color the ramp uses to fade from to transparent.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.BrushRamp">
      <summary>
            Provides a color ramp that updates through the colors in the specified brush.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BrushRamp.BrushProperty">
      <summary>
            Identifies the Brush dependency property.
            </summary>
      <returns>
            The identifier for the Brush dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.BrushRamp.CreateInstanceCore" />
    <member name="M:NationalInstruments.Controls.Rendering.BrushRamp.CreateSingleGradientBrushRamp(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>
            Creates a BrushRamp using a linear gradient between the specified colors.
            </summary>
      <param name="startColor">The first color in the gradient.</param>
      <param name="endColor">The second color in the gradient.</param>
      <returns>
            A BrushRamp with Brush set to a LinearGradientBrush
            starting at startColor (parameter) and ending at endColor (parameter).
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.BrushRamp.GetColorData(System.Int32[])" />
    <member name="P:NationalInstruments.Controls.Rendering.BrushRamp.Brush">
      <summary>Gets or sets the color values that the ramp will interpolate between.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.PlotDimensionReference">
      <summary>Represents a reference to a dimension of data within a plot.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.PlotDimensionReference.ToString" />
    <member name="M:NationalInstruments.Controls.Data.PlotDimensionReference.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the PlotDimensionReference struct.</summary>
      <param name="plotIndex">The index of the referenced plot.</param>
      <param name="dimension">The dimension in the referenced plot.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">plotIndex (parameter) is less than zero.-or-dimension (parameter) is less than zero.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.PlotDimensionReference.Equals(NationalInstruments.Controls.Data.PlotDimensionReference)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <returns>true if the current object is equal to the other (parameter) parameter; otherwise, false.
            </returns>
      <param name="other">
            An object to compare with this object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.PlotDimensionReference.op_Equality(NationalInstruments.Controls.Data.PlotDimensionReference,NationalInstruments.Controls.Data.PlotDimensionReference)">
      <summary>
            Determines whether two specified PlotDimensionReference objects have the same value.
            </summary>
      <returns>true if the value of left (parameter) is the same as the value of right (parameter); otherwise, false.
            </returns>
      <param name="left">
            A PlotDimensionReference object.
            </param>
      <param name="right">
            A PlotDimensionReference object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.PlotDimensionReference.op_Inequality(NationalInstruments.Controls.Data.PlotDimensionReference,NationalInstruments.Controls.Data.PlotDimensionReference)">
      <summary>
            Determines whether two specified PlotDimensionReference objects have different values.
            </summary>
      <returns>true if the value of left (parameter) is the same as the value of right (parameter); otherwise, false.
            </returns>
      <param name="left">
            A PlotDimensionReference object.
            </param>
      <param name="right">
            A PlotDimensionReference object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.PlotDimensionReference.Equals(System.Object)">
      <summary>
            Determines whether the specified Object is equal to the current Object.
            </summary>
      <returns>true if the specified Object is equal to the current Object; otherwise, false.
            </returns>
      <param name="obj">
            The Object to compare with the current Object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.PlotDimensionReference.GetHashCode">
      <summary>
            Serves as a hash function for a particular type.
            </summary>
      <returns>
            A hash code for the current Object.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.Data.PlotDimensionReference.PlotIndex">
      <summary>Gets the index of the referenced plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.PlotDimensionReference.Dimension">
      <summary>Gets the dimension in the referenced plot.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.ObservedChangeEventArgs.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the ObservedChangeEventArgs class with the specified property.
            </summary>
      <param name="propertyName">The name of the property that changed.</param>
      <param name="isObserverProperty">A value indicating whether a property on the observer or on the component value changed.</param>
      <exception cref="T:System.ArgumentNullException">propertyName (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.ObservedChangeEventArgs.#ctor(System.String,System.EventArgs)">
      <summary>
            Initializes a new instance of the ObservedChangeEventArgs class for the specified member event.
            </summary>
      <param name="memberName">The name of the member that raised the event.</param>
      <param name="eventArgs">The event args raised by the member.</param>
      <exception cref="T:System.ArgumentNullException">memberName (parameter) is null.
              -or-

eventArgs (parameter) is null.

-or-eventArgs (parameter) is null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.ObservedChangeEventArgs.ToString" />
    <member name="P:NationalInstruments.Controls.Primitives.ObservedChangeEventArgs.MemberName">
      <summary>
            Gets the name of the member that changed.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.ObservedChangeEventArgs.Source">
      <summary>
            Gets a value indicating whether the property is on the observer, or on the component value of the observer.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.ObservedChangeEventArgs.EventArgs">
      <summary>
            Gets the arguments to the source event raised by the observer or one of its monitored members.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.LineStep">
      <summary>
            Represents a strategy for displaying lines through a set of points.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.LineStep.Render(NationalInstruments.Controls.Rendering.IRenderTarget,NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.Controls.Rendering.RelativeDataCollection)">
      <summary>
            Renders the data on the specified target.
            </summary>
      <param name="target">The target to render to.</param>
      <param name="options">The options to render with.</param>
      <param name="data">The data to render.</param>
      <exception cref="T:System.ArgumentNullException">target (parameter) is null.-or-options (parameter) is null.-or-data (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">data (parameter) contains less than two dimensions of data.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.LineStep.RenderCore(NationalInstruments.Controls.Rendering.IRenderTarget,NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.Controls.Rendering.RelativeDataCollection)">
      <summary>Implements the Render method.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LineStep.None">
      <summary>
            Gets a value that displays straight lines between points without any steps.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LineStep.CenteredHorizontalStep">
      <summary>
            Gets a value that displays horizontal step lines centered on points.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LineStep.CenteredVerticalStep">
      <summary>
            Gets a value that displays vertical step lines centered on points.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LineStep.HorizontalStep">
      <summary>
            Gets a value that displays horizontal step lines positioned on points.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LineStep.VerticalStep">
      <summary>
            Gets a value that displays vertical step lines positioned on points.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LineStep.UnderlyingType" />
    <member name="T:NationalInstruments.Controls.Rendering.PlotRenderArgs">
      <summary>
            Provides information used to render an IRenderablePlot object.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.RenderArgs">
      <summary>
            Provides information used to render an IRenderable object.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderArgs.ToString" />
    <member name="M:NationalInstruments.Controls.Rendering.RenderArgs.#ctor(NationalInstruments.Controls.Rendering.IRenderTarget)">
      <summary>Initializes a new instance of the RenderArgs class with the specified render target.</summary>
      <param name="renderTarget">The surface to render to.</param>
      <exception cref="T:System.ArgumentNullException">renderTarget (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">IRenderTarget does not implement IVectorRenderTarget or IRasterRenderTarget.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderArgs.RenderTarget">
      <summary>Gets the surface to render to.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderArgs.RenderMode">
      <summary>Gets the mode used to display visuals in the render target.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderArgs.#ctor(NationalInstruments.Controls.Rendering.IRenderTarget,NationalInstruments.Controls.Primitives.IRenderablePlot,NationalInstruments.Controls.Rendering.RelativeDataCollection)">
      <summary>
Initializes a new instance of the PlotRenderArgs class
with the specified render target, plot, and data.
</summary>
      <param name="renderTarget">The surface to render to.</param>
      <param name="plot">The plot to render.</param>
      <param name="relativeData">The processed plot data to render.</param>
      <exception cref="T:System.ArgumentNullException">renderTarget (parameter) is null.-or-plot (parameter) is null.-or-relativeData (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">IRenderTarget does not implement IVectorRenderTarget or IRasterRenderTarget.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderArgs.ToString" />
    <member name="P:NationalInstruments.Controls.Rendering.PlotRenderArgs.Plot">
      <summary>Gets the plot being rendered.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PlotRenderArgs.RelativeData">
      <summary>Gets the processed plot data to render.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PlotRenderArgs.LastRender">
      <summary>Gets the last time render was called.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.RenderTargetOption">
      <summary>
            Represents an option to apply to rendered objects created by an IRenderTarget.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOption.CreateBinding(NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty,System.Windows.DependencyProperty)">
      <summary>
            Creates a binding option from the specified dependency property on Owner to the target property.
            </summary>
      <param name="targetProperty">The property to assign.</param>
      <param name="sourceProperty">The source of the binding.</param>
      <returns>An option representing a binding from sourceProperty (parameter) to targetProperty (parameter).</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">targetProperty (parameter) is not a valid RenderTargetOptionsProperty value.
            </exception>
      <exception cref="T:System.ArgumentNullException">sourceProperty (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOption.CreateValue(NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty,System.Object)">
      <summary>
            Creates a value assignment option from the specified value to the target property.
            </summary>
      <param name="targetProperty">The property to assign.</param>
      <param name="value">The value to assign to the target property.</param>
      <returns>An option representing an assignment of value (parameter) to targetProperty (parameter).</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">targetProperty (parameter) is not a valid RenderTargetOptionsProperty value.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOption.CreateSetting(NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting,System.Object)">
      <summary>
            Creates a value assignment option from the specified value to the target setting.
            </summary>
      <param name="setting">The setting to assign.</param>
      <param name="value">The value to assign to the target setting.</param>
      <returns>An option representing an assignment of value (parameter) to setting (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">setting (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOption.CreateEvent(NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent,System.EventHandler)">
      <summary>
            Creates an event registration option for the specified event.
            </summary>
      <param name="event">The event to register.</param>
      <param name="handler">The event handler to call when the event is raised.</param>
      <returns>An option representing an event registration of handler (parameter) to event (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">event (parameter) is null.-or-handler (parameter) is null.</exception>
    </member>
    <member name="T:NationalInstruments.Controls.ScaleInteractionModes">
      <summary>
            Specifies the interaction modes for a displayed scale.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.ScaleInteractionModes.None">
      <summary>Indicates the scale cannot be manipulated interactively.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.ScaleInteractionModes.EditRange">
      <summary>Indicates the range of the scale can be edited interactively.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.ChartCollection`2">
      <summary>
            Represents a collection of index and sample chart data values.
            </summary>
      <typeparam name="TIndexData">The type of index data stored in the chart collection.</typeparam>
      <typeparam name="TSampleData">The type of sample data stored in the chart collection.</typeparam>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.#ctor">
      <summary>
            Initializes a new instance of the ChartCollection&lt;T1,T2&gt; class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the ChartCollection&lt;T1,T2&gt; class with the specified size.
            </summary>
      <param name="capacity">The maximum number of elements to store in the collection.</param>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.ToString" />
    <member name="M:NationalInstruments.Controls.ChartCollection`2.Append(`0,`1)">
      <summary>
            Appends a new element to the chart collection.
            </summary>
      <param name="index">The index value to be added.</param>
      <param name="value">The sample value to be added.</param>
      <exception cref="T:System.ArgumentException">index (parameter) is less than or equal to the last index value in the collection.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.Append(System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1})">
      <summary>
            Appends a list of new elements to the chart collection.
            </summary>
      <param name="indices">The list of strictly-increasing index values to be added.</param>
      <param name="values">The list of sample values to be added.</param>
      <exception cref="T:System.ArgumentNullException">indices (parameter) is null.
              -or-

values (parameter) is null.

-or-values (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">values (parameter) does not contain the same number of elements as indices (parameter).
              -or-

indices (parameter) contains values that are less than or equal to other index values in the collection.

-or-indices (parameter) contains values that are less than or equal to other index values in the collection.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.Clear">
      <summary>
            Clears the current data in the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.OnDataChanged(NationalInstruments.Controls.Primitives.GraphCollectionChangedEventArgs)">
      <summary>
            Raises the DataChanged event.
            </summary>
      <param name="e">
            An instance of GraphCollectionChangedEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.NationalInstruments#Controls#Primitives#IGraphDataCollection#GetDataTypes" />
    <member name="M:NationalInstruments.Controls.ChartCollection`2.NationalInstruments#Controls#Primitives#IGraphDataCollection#GetDataBuffers(NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.ChartCollection`2.NationalInstruments#Controls#Primitives#IGraphDataCollection#LoadDataBuffers(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer})" />
    <member name="M:NationalInstruments.Controls.ChartCollection`2.System#Collections#Generic#IList{NationalInstruments#Controls#Data#Sample{TIndexData@TSampleData}}#IndexOf(NationalInstruments.Controls.Data.Sample{`0,`1})" />
    <member name="M:NationalInstruments.Controls.ChartCollection`2.System#Collections#Generic#IList{NationalInstruments#Controls#Data#Sample{TIndexData@TSampleData}}#Insert(System.Int32,NationalInstruments.Controls.Data.Sample{`0,`1})">
      <exception cref="T:System.NotSupportedException">
            Always thrown.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.System#Collections#Generic#IList{NationalInstruments#Controls#Data#Sample{TIndexData@TSampleData}}#RemoveAt(System.Int32)">
      <exception cref="T:System.NotSupportedException">
            Always thrown.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.System#Collections#Generic#ICollection{NationalInstruments#Controls#Data#Sample{TIndexData@TSampleData}}#Add(NationalInstruments.Controls.Data.Sample{`0,`1})" />
    <member name="M:NationalInstruments.Controls.ChartCollection`2.System#Collections#Generic#ICollection{NationalInstruments#Controls#Data#Sample{TIndexData@TSampleData}}#Contains(NationalInstruments.Controls.Data.Sample{`0,`1})" />
    <member name="M:NationalInstruments.Controls.ChartCollection`2.CopyTo(NationalInstruments.Controls.Data.Sample{`0,`1}[],System.Int32)" />
    <member name="M:NationalInstruments.Controls.ChartCollection`2.System#Collections#Generic#ICollection{NationalInstruments#Controls#Data#Sample{TIndexData@TSampleData}}#Remove(NationalInstruments.Controls.Data.Sample{`0,`1})">
      <exception cref="T:System.NotSupportedException">
            Always thrown.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`2.GetEnumerator" />
    <member name="M:NationalInstruments.Controls.ChartCollection`2.System#Collections#IEnumerable#GetEnumerator" />
    <member name="P:NationalInstruments.Controls.ChartCollection`2.Count" />
    <member name="P:NationalInstruments.Controls.ChartCollection`2.Capacity">
      <summary>
            Gets or sets the size of the chart collection.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">value (parameter) is less than or equal to zero.
            </exception>
    </member>
    <member name="E:NationalInstruments.Controls.ChartCollection`2.DataChanged" />
    <member name="P:NationalInstruments.Controls.ChartCollection`2.Item(System.Int32)">
      <summary>Gets the sample at the specified index.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is less than zero or greater than or equal to Count.
            </exception>
    </member>
    <member name="P:NationalInstruments.Controls.ChartCollection`2.System#Collections#Generic#IList{NationalInstruments#Controls#Data#Sample{TIndexData@TSampleData}}#Item(System.Int32)">
      <exception cref="T:System.NotSupportedException">Always thrown on a set.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.ChartCollection`2.System#Collections#Generic#ICollection{NationalInstruments#Controls#Data#Sample{TIndexData@TSampleData}}#IsReadOnly" />
    <member name="T:NationalInstruments.Controls.ChartCollection`1">
      <summary>
            Represents a collection of automatically-indexed sample chart data values.
            </summary>
      <typeparam name="TSampleData">The type of sample data stored in the chart collection.</typeparam>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`1.#ctor">
      <summary>
            Initializes a new instance of the ChartCollection&lt;T&gt; class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`1.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the ChartCollection&lt;T&gt; class with the specified size.
            </summary>
      <param name="capacity">The maximum number of elements to store in the collection.</param>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`1.Append(`0)">
      <summary>
            Appends a new sample value to the chart collection.
            </summary>
      <param name="value">The sample value to be added.</param>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`1.Append(System.Collections.Generic.IList{`0})">
      <summary>
            Appends a list of new sample values to the chart collection.
            </summary>
      <param name="values">The list of sample values to be added.</param>
      <exception cref="T:System.ArgumentNullException">values (parameter) is null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.ChartCollection`1.CopyTo(`0[],System.Int32)" />
    <member name="M:NationalInstruments.Controls.ChartCollection`1.System#Collections#Generic#IEnumerable{TSampleData}#GetEnumerator" />
    <member name="M:NationalInstruments.Controls.ChartCollection`1.System#Collections#Generic#ICollection{TSampleData}#Add(`0)" />
    <member name="M:NationalInstruments.Controls.ChartCollection`1.System#Collections#Generic#ICollection{TSampleData}#Contains(`0)" />
    <member name="M:NationalInstruments.Controls.ChartCollection`1.System#Collections#Generic#IList{TSampleData}#IndexOf(`0)" />
    <member name="M:NationalInstruments.Controls.ChartCollection`1.System#Collections#Generic#IList{TSampleData}#Insert(System.Int32,`0)" />
    <member name="M:NationalInstruments.Controls.ChartCollection`1.System#Collections#Generic#ICollection{TSampleData}#Remove(`0)" />
    <member name="M:NationalInstruments.Controls.ChartCollection`1.System#Collections#Generic#IList{TSampleData}#RemoveAt(System.Int32)" />
    <member name="P:NationalInstruments.Controls.ChartCollection`1.Item(System.Int32)">
      <summary>Gets the sample value at the specified index.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is less than zero or greater than or equal to Count.
            </exception>
    </member>
    <member name="P:NationalInstruments.Controls.ChartCollection`1.System#Collections#Generic#IList{TSampleData}#Item(System.Int32)">
      <exception cref="T:System.NotSupportedException">Always thrown on a set.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.ChartCollection`1.System#Collections#Generic#ICollection{TSampleData}#IsReadOnly" />
    <member name="T:NationalInstruments.Controls.Data.Sample`2">
      <summary>
            Represents an individual element from a chart collection.
            </summary>
      <typeparam name="TIndexData">The data type of the index data.</typeparam>
      <typeparam name="TSampleData">The data type of the sample data.</typeparam>
    </member>
    <member name="M:NationalInstruments.Controls.Data.Sample`2.ToString" />
    <member name="M:NationalInstruments.Controls.Data.Sample`2.#ctor(`0,`1)">
      <summary>Initializes a new instance of the Sample&lt;T1,T2&gt; struct with the specified data values.</summary>
      <param name="index">The index data for the sample.</param>
      <param name="value">The value data for the sample.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.Sample`2.Equals(NationalInstruments.Controls.Data.Sample{`0,`1})">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <returns>true if the current object is equal to the other (parameter) parameter; otherwise, false.
            </returns>
      <param name="other">
            An object to compare with this object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.Sample`2.op_Equality(NationalInstruments.Controls.Data.Sample{`0,`1},NationalInstruments.Controls.Data.Sample{`0,`1})">
      <summary>
            Determines whether two specified Sample&lt;T1,T2&gt; objects have the same value.
            </summary>
      <returns>true if the value of left (parameter) is the same as the value of right (parameter); otherwise, false.
            </returns>
      <param name="left">
            A Sample&lt;T1,T2&gt; object.
            </param>
      <param name="right">
            A Sample&lt;T1,T2&gt; object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.Sample`2.op_Inequality(NationalInstruments.Controls.Data.Sample{`0,`1},NationalInstruments.Controls.Data.Sample{`0,`1})">
      <summary>
            Determines whether two specified Sample&lt;T1,T2&gt; objects have different values.
            </summary>
      <returns>true if the value of left (parameter) is the same as the value of right (parameter); otherwise, false.
            </returns>
      <param name="left">
            A Sample&lt;T1,T2&gt; object.
            </param>
      <param name="right">
            A Sample&lt;T1,T2&gt; object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.Sample`2.Equals(System.Object)">
      <summary>
            Determines whether the specified Object is equal to the current Object.
            </summary>
      <returns>true if the specified Object is equal to the current Object; otherwise, false.
            </returns>
      <param name="obj">
            The Object to compare with the current Object.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.Sample`2.GetHashCode">
      <summary>
            Serves as a hash function for a particular type.
            </summary>
      <returns>
            A hash code for the current Object.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.Data.Sample`2.Index">
      <summary>Gets the index data for the sample.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.Sample`2.Value">
      <summary>Gets the value data for the sample.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.AnnotationInteractionModes">
      <summary>
            Specifies how annotations respond to user input.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.AnnotationInteractionModes.None">
      <summary>Indicates the annotation does not respond to the mouse.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.AnnotationInteractionModes.DragLabel">
      <summary>Indicates you can drag the annotation label with the mouse.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.AnnotationInteractionModes.DragTarget">
      <summary>Indicates you can drag the annotation target with the mouse.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.AnnotationInteractionModes.DragLabelAndTarget">
      <summary>Indicates you can drag the annotation label and target with the mouse.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.ArrowHeadPosition">
      <summary>
            Specifies the position of the arrow head. 
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.ArrowHeadPosition.ShapeBounds">
      <summary>
            Indicates the arrow head is positioned on the boundary of the annotation shape.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.ArrowHeadPosition.ShapeCenter">
      <summary>
            Indicates the arrow head is positioned at the center of the annotation shape.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.BoundsAlignment">
      <summary>
            Defines the position of an item within the plot area around a reference location.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.BoundsAlignment.AdjustPosition(NationalInstruments.Controls.Primitives.AlignmentArgs)">
      <summary>
            Calculates the screen location to render an item within the plot area.
            </summary>
      <param name="args">Contains information used to determine the position to render an object within the plot area.</param>
      <returns>
            The screen position to render the object within the plot area.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.BottomCenter">
      <summary>
            Gets a bounds alignment that aligns an item to the bottom center of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.BottomLeft">
      <summary>
            Gets a bounds alignment that aligns an item to the bottom left of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.BottomRight">
      <summary>
            Gets a bounds alignment that aligns an item to the bottom right of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.MiddleCenter">
      <summary>
            Gets a bounds alignment that aligns an item to the middle center of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.MiddleLeft">
      <summary>
            Gets a bounds alignment that aligns an item to the middle left of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.MiddleRight">
      <summary>
            Gets a bounds alignment that aligns an item to the middle right of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.TopCenter">
      <summary>
            Gets a bounds alignment that aligns an item to the top center of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.TopLeft">
      <summary>
            Gets a bounds alignment that aligns an item to the top left of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.TopRight">
      <summary>
            Gets a bounds alignment that aligns an item to the top right of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.None">
      <summary>
            Gets a bounds alignment that does not align the item.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.BoundsAlignment.UnderlyingType" />
    <member name="T:NationalInstruments.Controls.GraphPhosphorMode">
      <summary>
            Specifies phosphor modes for brushes.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.GraphPhosphorMode.None">
      <summary>Indicates the brush is always used, and will never be replaced by color data from the phosphor ramp.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.GraphPhosphorMode.Immediate">
      <summary>Indicates the brush is ignored, and only the phosphor ramp is used for color data.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.GraphPhosphorMode.Deferred">
      <summary>Indicates the brush is used for the first frame, and will be replaced by color data from the phosphor ramp on the next update.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.DataDimensionArgs">
      <summary>Provides information for requests on a DataDimension member.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionArgs.ToString" />
    <member name="M:NationalInstruments.Controls.Data.DataDimensionArgs.#ctor(System.Windows.DependencyObject,NationalInstruments.Controls.Primitives.IPlot,NationalInstruments.Controls.Primitives.IQueryableGraph)">
      <summary>
      Initializes a new instance of the DataDimensionArgs class with the specified source, plot, and context.
    </summary>
      <param name="source">The object that declares the data dimension scale.</param>
      <param name="plot">The plot the source object is associated with.</param>
      <param name="context">The parent control.</param>
      <exception cref="T:System.ArgumentNullException">source (parameter) is null.
      -or-plot (parameter) is null.
      -or-context (parameter) is null.
      </exception>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimensionArgs.Source">
      <summary>Gets the object declaring the data dimension scale.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimensionArgs.Plot">
      <summary>Gets the plot the source object is associated with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimensionArgs.Context">
      <summary>Gets the parent control.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.DataOperationComparison">
      <summary>
            Specifies how one DataOperationObject relates to another.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Data.DataOperationComparison.Unknown">
      <summary>Indicates the object does not know about the other.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Data.DataOperationComparison.Incompatible">
      <summary>Indicates neither object can be used in place of the other.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Data.DataOperationComparison.Equivalent">
      <summary>Indicates the objects perform the same operation.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Data.DataOperationComparison.MoreConservative">
      <summary>Indicates the operation performed by the current object can be used in place of the operation performed by the other object.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Data.DataOperationComparison.MoreAggressive">
      <summary>Indicates the operation performed by the other object can be used in place of the operation performed by the current object.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.DataOperationObject">
      <summary>
            Represents an abstract base class for strategies that operate on data.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Data.DataOperationObject.VisibleRange">
      <summary>Gets a value representing the visible bounds for relative data.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataOperationObject.Reduce(System.Collections.Generic.IList{NationalInstruments.Controls.Data.DataOperationObject})">
      <summary>
            Reduces a collection of requested operations to the smallest, most general set possible.
            </summary>
      <param name="requested">A collection of data operation objects.</param>
      <returns>A set of indices into requested (parameter) indicating the appropriate operation to use for each source value.</returns>
      <exception cref="T:System.ArgumentNullException">requested (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">requested (parameter) is empty.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataOperationObject.Compare(NationalInstruments.Controls.Data.DataOperationObject,NationalInstruments.Controls.Data.DataOperationObject)">
      <summary>
            Compares the data operations represented by two objects.
            </summary>
      <param name="left">A data operation object.</param>
      <param name="right">A data operation object.</param>
      <returns>A DataOperationComparison value representing the operation relationship between left (parameter) and right (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">left (parameter) is null.
              -or-

right (parameter) is null.

-or-right (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">
              The UnderlyingType of left (parameter) and right (parameter) are different..
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataOperationObject.CompareOperation(NationalInstruments.Controls.Data.DataOperationObject)">
      <summary>
            Compares the data operation represented by the current object and another object.
            </summary>
      <param name="other">A data operation object.</param>
      <returns>A DataOperationComparison value representing the operation relationship between the current object and other (parameter).</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataOperationObject.Equals(System.Object)" />
    <member name="M:NationalInstruments.Controls.Data.DataOperationObject.GetHashCode" />
    <member name="T:NationalInstruments.Controls.Data.DataDimensionScale">
      <summary>Represents the source of a dimension of data.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionScale.FromScale(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Creates a value that can provide the specified scale value.</summary>
      <param name="scale">The scale to return.</param>
      <returns>A value that can provide the specified scale value.</returns>
      <exception cref="T:System.ArgumentNullException">scale (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionScale.FromProperty(System.Windows.DependencyProperty,System.Func{System.Object,NationalInstruments.Controls.Data.DataDimensionArgs,NationalInstruments.Controls.Data.DataDimensionScale})">
      <summary>Creates a value that retrieves the source of the scale from a property.</summary>
      <param name="property">The dependency property to read from on the Source object.</param>
      <param name="converter">A method to convert the value of the property to a dimension scale.</param>
      <returns>A value that retrieves the source of the scale from a property.</returns>
      <exception cref="T:System.ArgumentNullException">property (parameter) is null.
              -or-

converter (parameter) is null.

-or-converter (parameter) is null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionScale.GetScale(NationalInstruments.Controls.Data.DataDimensionArgs)">
      <summary>
            Gets the scale to use for a dimension of data.
            </summary>
      <param name="args">Information about the scale request.</param>
      <returns>The scale to use for a dimension of data.</returns>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionScale.GetScaleCore(NationalInstruments.Controls.Data.DataDimensionArgs)">
      <summary>Implements the GetScale method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionScale.Equals(System.Object)" />
    <member name="M:NationalInstruments.Controls.Data.DataDimensionScale.EqualsCore(NationalInstruments.Controls.Data.DataDimensionScale)">
      <summary>Implements the Equals method.</summary>
      <param name="other">The object to compare.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionScale.GetHashCode" />
    <member name="P:NationalInstruments.Controls.Data.DataDimensionScale.IndependentScale">
      <summary>Gets a value that represents the independent scale for a plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimensionScale.DependentScale">
      <summary>Gets a value that represents the dependent scale for a plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimensionScale.IsInstanceSpecific">
      <summary>
            Gets a value indicating whether the value of the source depends on the source object instance.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.DataDimensionSource">
      <summary>Represents the source of a dimension of data.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.FromDefaultValue(System.Object)">
      <summary>Creates a value that can provide data from a constant value.</summary>
      <param name="value">A data value.</param>
      <returns>A default value source.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.FromCurrentPlot(System.Int32)">
      <summary>Creates a value that can provide data from the data given to the current plot.</summary>
      <param name="dimension">The dimension of data to retrieve from the current plot.</param>
      <returns>A plot reference source.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">dimension (parameter) is less than zero.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.FromPlot(System.Int32,System.Int32)">
      <summary>Creates a value that can provide data from the data given to another plot.</summary>
      <param name="plotIndex">The index of the plot to retrieve data from.</param>
      <param name="dimension">The dimension of data to retrieve.</param>
      <returns>A plot reference source.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">plotIndex (parameter) is less than zero.
              -or-

dimension (parameter) is less than zero.

-or-dimension (parameter) is less than zero.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.FromProperty(System.Windows.DependencyProperty,System.Func{System.Object,NationalInstruments.Controls.Data.DataDimensionArgs,NationalInstruments.Controls.Data.DataDimensionSource})">
      <summary>Creates a value that retrieves the source of the data from a property.</summary>
      <param name="property">The dependency property to read from on the Source object.</param>
      <param name="converter">A method to convert the value of the property to a dimension source.</param>
      <returns>A property reference source.</returns>
      <exception cref="T:System.ArgumentNullException">property (parameter) is null.
              -or-

converter (parameter) is null.

-or-converter (parameter) is null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.WithTraits(NationalInstruments.Controls.Data.DataDimensionSource,System.Collections.Generic.IEnumerable{NationalInstruments.DataInfrastructure.Trait})">
      <summary>Creates a source that includes the specified traits.</summary>
      <param name="source">The data source to augment.</param>
      <param name="traits">The set of traits to return from GetTraits.</param>
      <returns>A data source augmented with traits (parameter).</returns>
      <exception cref="T:System.ArgumentNullException">source (parameter) is null.
              -or-

traits (parameter) is null.

-or-traits (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">traits (parameter) contains null elements.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.WithTraits(NationalInstruments.Controls.Data.DataDimensionSource,NationalInstruments.DataInfrastructure.Trait[])" />
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.GetTraits(NationalInstruments.Controls.Data.DataDimensionArgs)">
      <summary>
            Gets the set of traits that should be applied to the associated source buffer.
            </summary>
      <param name="args">Information associated with the data request.</param>
      <returns>
            The set of traits that should be applied to the associated source buffer,
            or an empty collection if no traits were specified.
            </returns>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.GetTraitsCore(NationalInstruments.Controls.Data.DataDimensionArgs)">
      <summary>Implements the GetTraits method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.GetPlotDimensionReference(NationalInstruments.Controls.Data.PlotDimensionReference,NationalInstruments.Controls.Data.DataDimensionArgs)">
      <summary>
            Gets the plot and dimension referenced by this data source.
            </summary>
      <param name="currentPlotDimension">The current dimension in the plot being processed.</param>
      <param name="args">Information associated with the data request.</param>
      <returns>
            The plot and dimension referenced by this data source,
            or null if the source only provides fallback data.
            </returns>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.GetPlotDimensionReferenceCore(NationalInstruments.Controls.Data.PlotDimensionReference,NationalInstruments.Controls.Data.DataDimensionArgs)">
      <summary>Implements the GetPlotDimensionReference method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.GetFallbackData``1(System.Int32,NationalInstruments.Controls.Data.DataDimensionArgs)">
      <summary>
            Gets fallback data to use for a dimension when no source data is available.
            </summary>
      <typeparam name="TData">The type of data to generate.</typeparam>
      <param name="size">The size of buffer to return.</param>
      <param name="args">Information associated with the data request.</param>
      <returns>The source to use for a dimension of data.</returns>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">size (parameter) is less than zero.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.GetFallbackDataCore``1(System.Int32,NationalInstruments.Controls.Data.DataDimensionArgs)">
      <summary>Implements the GetFallbackData``1 method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.Equals(System.Object)" />
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.EqualsCore(NationalInstruments.Controls.Data.DataDimensionSource)">
      <summary>Implements the Equals method.</summary>
      <param name="other">The object to compare against.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimensionSource.GetHashCode" />
    <member name="P:NationalInstruments.Controls.Data.DataDimensionSource.SampleData">
      <summary>Gets a value that requires samples from the data provided to the plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimensionSource.IndexData">
      <summary>Gets a value that provides data from automatically generated index values.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimensionSource.IsInstanceSpecific">
      <summary>
            Gets a value indicating whether the value of the source depends on the source object instance.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.DataRequirements">
      <summary>
            Represents the data source and optimization requirements for a plot renderer to render correctly.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataRequirements.#ctor(NationalInstruments.Controls.Data.DataCulling,NationalInstruments.Controls.Data.DataDecimation,NationalInstruments.Controls.Data.DataDimension[])">
      <summary>
            Initializes a new instance of the DataRequirements class with the specified culling, decimation, and dimensions.
            </summary>
      <param name="culling">
            The lowest-level culling method that is used to optimize data.
            </param>
      <param name="decimation">
            The lowest-level decimation method that is used to optimize data.
            </param>
      <param name="dimensions">
            The requirements for each dimension of data.
            </param>
      <exception cref="T:System.ArgumentNullException">culling (parameter) is null.
              -or-

decimation (parameter) is null.

-or-

dimensions (parameter) is null.

-or-decimation (parameter) is null.-or-dimensions (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">dimensions (parameter) contains a null element.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataRequirements.ToString" />
    <member name="M:NationalInstruments.Controls.Data.DataRequirements.#ctor(NationalInstruments.Controls.Data.DataCulling,NationalInstruments.Controls.Data.DataDecimation,System.Collections.ObjectModel.ReadOnlyCollection{NationalInstruments.Controls.Data.DataDimension})">
      <summary>
      Initializes a new instance of the DataRequirements class with the specified culling, decimation, and dimensions.
    </summary>
      <param name="culling">The culling method that is used to optimize data.</param>
      <param name="decimation">The decimation method that is used to optimize data.</param>
      <param name="dimensions">The requirements for each dimension of data.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataRequirements.Culling">
      <summary>Gets the culling method that is used to optimize data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataRequirements.Decimation">
      <summary>Gets the decimation method that is used to optimize data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataRequirements.Dimensions">
      <summary>Gets the requirements for each dimension of data.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.DataDimension">
      <summary>
            Represents the requirements for a dimension of data passed to a plot renderer.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDimension.ToString" />
    <member name="M:NationalInstruments.Controls.Data.DataDimension.InitializeInstance" />
    <member name="M:NationalInstruments.Controls.Data.DataDimension.#ctor(NationalInstruments.Controls.Data.DataDimensionSource,NationalInstruments.Controls.Data.DataDimensionScale)">
      <summary>
      Initializes a new instance of the DataDimension class with the specified source and scale.
    </summary>
      <param name="source">The source of data for the dimension.</param>
      <param name="scale">The scale used to map the raw data for the dimension.</param>
      <exception cref="T:System.ArgumentNullException">source (parameter) is null.
      -or-scale (parameter) is null.
      </exception>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimension.Index">
      <summary>
            Gets the dimension this data object corresponds to.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimension.IsInstanceDependent">
      <summary>
            Gets a value indicating whether the dimension source or scale depends on an instance of the source object for its value.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimension.Source">
      <summary>Gets the source of data for the dimension.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDimension.Scale">
      <summary>Gets the scale used to map the raw data for the dimension.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Internal.BufferExtensions.Aggregator">
      <summary>Identifies the internal helper trait to accumulate the set of new samples in the buffer.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Internal.BufferExtensions.SliceTaken">
      <summary>Identifies the internal helper trait to indicate a slice of new data was taken from the source buffer.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Internal.BufferExtensions.GeneratedData">
      <summary>Identifies the internal helper trait to indicate the source buffer consists of generated data for a renderer.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.GetBuffer(System.Object)">
      <summary>Wraps an object in a buffer.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.GetInvalidBuffer(System.Type)">
      <summary>Creates a buffer of the specified type with a single invalid sample.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.GetCullLocations(NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double})">
      <summary>Gets the locations where data has been culled.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.GetReadableBuffers(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer})">
      <summary>Gets a readable copy of all the buffers in the given collection.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.GetReadableBuffers(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer},System.Func{NationalInstruments.DataInfrastructure.Trait,NationalInstruments.DataInfrastructure.Trait})">
      <summary>Gets a readable copy of all the buffers in the given collection.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.BinarySearch``1(NationalInstruments.DataInfrastructure.Buffer{``0},``0,NationalInstruments.DataInfrastructure.Descriptors.IOpComparison{``0},System.Int32@)">
      <summary>
            Searches a sorted list for an item via binary search. The list must be sorted.
            </summary>
      <param name="buffer">The sorted buffer to search.</param>
      <param name="value">The value to search for.</param>
      <param name="comparer">The comparer instance used to sort the list. Only
            the Compare method is used.</param>
      <param name="index">Returns the first index at which the value can be found. If the return
            value is zero, indicating that value (parameter) was not present in the list, then this
            returns the index at which value (parameter) could be inserted to maintain the sorted
            order of the list.</param>
      <returns>The number of values equal to value (parameter) that appear in the list.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.ToBuffer``1(``0[])">
      <summary>Copies an array into a buffer.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.ToBuffer``1(``0[],NationalInstruments.DataInfrastructure.Buffer{``0})">
      <summary>Copies an array into a buffer.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.ToBuffer``1(System.Collections.Generic.List{``0})">
      <summary>Copies a list into a buffer.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.ToBuffer``1(System.Collections.Generic.List{``0},NationalInstruments.DataInfrastructure.Buffer{``0})">
      <summary>Copies a list into a buffer.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.SequenceEqual(NationalInstruments.DataInfrastructure.IBuffer,NationalInstruments.DataInfrastructure.IBuffer)">
      <summary>Compares the contents of two buffers.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.JoinBuffers(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer})">
      <summary>Combines the data form several buffers into a single buffer.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.BufferExtensions.Expand(NationalInstruments.DataInfrastructure.IBuffer,NationalInstruments.DataInfrastructure.IBuffer)">
      <summary>Expands the buffer to match the join locations in the reference.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PointDescriptor.GetDefaultValue" />
    <member name="M:NationalInstruments.Controls.Primitives.PointDescriptor.GetDimensionDataTypes(System.Windows.Point,NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.PointDescriptor.DecomposeValues(NationalInstruments.DataInfrastructure.Buffer{System.Windows.Point},NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.PointDescriptor.ComposeValues(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer},NationalInstruments.DataInfrastructure.Trait)" />
    <member name="M:NationalInstruments.Controls.Primitives.PointDescriptor.ToString" />
    <member name="T:NationalInstruments.Controls.Primitives.AlignmentArgs">
      <summary>Provides the information needed to align items.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.AlignmentArgs.#ctor(System.Double,System.Double,System.Windows.Point,System.Windows.Rect,System.Windows.Size)">
      <summary>Initializes a new instance of the AlignmentArgs class with the specified x and y offsets, reference point, context bounds, and item size.
            </summary>
      <param name="xOffset">The spacing to apply in the X direction.</param>
      <param name="yOffset">The spacing to apply in the Y direction.</param>
      <param name="referencePoint">A reference point.</param>
      <param name="contextBounds">The bounding context rectangle in which the item is aligned. </param>
      <param name="itemSize">The size of the item to align.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.AlignmentArgs.XOffset">
      <summary>Gets the spacing to apply in the X direction.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.AlignmentArgs.YOffset">
      <summary>Gets the spacing to apply in the Y direction.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.AlignmentArgs.ReferencePoint">
      <summary>Gets the reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.AlignmentArgs.ContextBounds">
      <summary>Gets the bounding rectangle of the object in which the item is aligned.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.AlignmentArgs.ItemSize">
      <summary>Gets the size of the item to align.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.DataItemDescription`1.ReplacePipeline(`0)">
      <summary>
            Replaces the Pipeline associated with this description.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.DataItemDescription`1.Owner">
      <summary>
            Gets the parent control of this description.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.DataItemDescription`1.DataIndex">
      <summary>
            Gets the index of the data item represented by this description in the Owner graph's Data collection.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.DataItemDescription`1.DataSource">
      <summary>
            Gets the data from the corresponding DataIndex in the Owner graph's Data collection.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.DataItemDescription`1.DataType">
      <summary>
            Gets the type of the DataSource this description was initialized with.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.DataItemDescription`1.Pipeline">
      <summary>
            Gets the pipeline associated with this description.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.CursorInteractionModes">
      <summary>
            Specifies modes to interact with a cursor.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.CursorInteractionModes.ReadOnly">
      <summary>Indicates the cursor cannot be manipulated interactively.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.CursorInteractionModes.Mouse">
      <summary>Indicates the cursor can be manipulated with the mouse.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.GraphScrollBarVisibility">
      <summary>
            Specifies the visibility of a graph scroll bar.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.GraphScrollBarVisibility.Hidden">
      <summary>Indicates a scroll bar does not appear, even when the graph is not displaying all data.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.GraphScrollBarVisibility.Auto">
      <summary>Indicates a scroll bar appears automatically when the graph is not displaying all data.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.GraphScrollBarVisibility.Visible">
      <summary>Indicates a scroll bar always appears. If the graph is displaying all data, the thumb is not shown.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.GraphScrollBarInteractor.UpdateScrollBar(NationalInstruments.Controls.Range{System.Double})">
      <summary>
            Update the scrollbar, like when the data or the scale changes.  
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.PointAlignment">
      <summary>
            Provides a base class for aligning the bounding box of an item around a reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.TopLeft">
      <summary>Gets a point alignment that aligns an item to the top left of the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.TopCenter">
      <summary>Gets a point alignment that aligns an item to the top center of the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.TopRight">
      <summary>Gets a point alignment that aligns an item to the top right of the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.MiddleLeft">
      <summary>Gets a point alignment that aligns an item to the middle left of the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.MiddleCenter">
      <summary>Gets a point alignment that aligns an item to the middle center of the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.MiddleRight">
      <summary>Gets a point alignment that aligns an item to the middle right of the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.BottomLeft">
      <summary>Gets a point alignment that aligns an item to the bottom left of the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.BottomCenter">
      <summary>Gets a point alignment that aligns an item to the bottom center of the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.BottomRight">
      <summary>Gets a point alignment that aligns an item to the bottom right of the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.UnderlyingType" />
    <member name="P:NationalInstruments.Controls.PointAlignment.Auto">
      <summary>Gets a point alignment that automatically aligns items to the specified reference point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAlignment.None">
      <summary>Gets a point alignment that does not adjust the alignment of items.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.PointAnnotation">
      <summary>Represents an annotation that highlights a data point in a graph.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.Annotation">
      <summary>Represents an abstract base class for graph annotations.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.OnVisualPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Raises an Invalidated event based on an appearance change.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.GetArrowHeadRelativePosition">
      <summary>Retrieves the relative center of the arrow head visual.</summary>
      <returns>The relative center of the arrow head visual with respect to the plot area.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.GetLabelScreenCenter">
      <summary>Retrieves the screen coordinates for the center of the label.</summary>
      <returns>The screen coordinates for the center of the label with respect to the plot area.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.UpdateLabelOffset(System.Double,System.Double)">
      <summary>
            Updates the alignment of the label with the specified screen delta values.
            </summary>
      <param name="screenXDelta">The amount to change the screen position in the X dimension.</param>
      <param name="screenYDelta">The amount to change the screen position in the Y dimension.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.UpdateLabelReferencePoint(System.Windows.Point)">
      <summary>
            Updates the reference point used to position the label.
            </summary>
      <param name="screenReference">The reference point in screen coordinates.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.GetArrowTailRelativePosition">
      <summary>Retrieves the relative center of the arrow tail visual.</summary>
      <returns>The relative center of the arrow tail visual with respect to the plot area.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.GetArrowRotationAngle">
      <summary>Return the angle the arrow head orients with the arrow line.</summary>
      <returns>The angle the arrow head orients with the arrow line, in radians.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.GetTargetIntercept(System.Double,System.Windows.Size)">
      <summary>
            Retrieves the screen coordinates for where the arrow line intersects the bounding box of the target visual.
            </summary>
      <param name="angle">The angle that the line is meeting the target at.</param>
      <param name="targetSize">The screen size of the target visual.</param>
      <returns>
            The screen coordinates for where the arrow line intersects the bounding box of the target visual.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.GetTargetRelativePosition">
      <summary>Retrieves the relative center of the target visual.</summary>
      <returns>The relative center of the target visual with respect to the plot area.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)">
      <summary>
            Called when rendering the annotation in a legend.
            </summary>
      <param name="args">
            A LegendRenderArgs instance containing the size of the glyph to draw and the target to draw to.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.RenderGraphCore(NationalInstruments.Controls.Rendering.RenderArgs)">
      <summary>
            Called when rendering the annotation in a graph.
            </summary>
      <param name="args">
            A RenderArgs instance containing the target to draw to.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.CancelDrag">
      <summary>Cancels the current drag and returns the cursor to its original position.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.OnDragMoveCore(System.Windows.Point,System.Object)">
      <summary>
            Responds to the drag move. 
            </summary>
      <param name="updatedAnnotationRelativePosition">
            The relative position of the annotation at the current point of the drag.
            </param>
      <param name="context">
            The context object provided to GetRenderTargetOptionsMouseCallbacks.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.OnDragCompleteCore">
      <summary>
            Called when a drag operation of the annotation has been completed, upon release of the left mouse button.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.GetRenderTargetOptionsMouseCallbacks(System.Object)">
      <summary>
            Gets the mouse callbacks used to enable drag support for a RenderTargetOptions instance.
            </summary>
      <param name="context">A context object provided to distinguish different types of drag operations.</param>
      <returns>
            A collection of mouse callbacks if Mouse interaction is enabled; otherwise, null.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.Render(NationalInstruments.Controls.Rendering.RenderArgs)" />
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.OnParentRegistered">
      <summary>
            Responds to the registration of a parent. 
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.OnParentUnregistered(NationalInstruments.Controls.Primitives.IQueryableGraph)">
      <summary>
            Responds to the unregistering of a parent. </summary>
      <param name="oldParent">
            The parent that is unregistered.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.NationalInstruments#Controls#Primitives#IGraphChild#RegisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.NationalInstruments#Controls#Primitives#IGraphChild#Initialize" />
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.NationalInstruments#Controls#Primitives#IGraphChild#UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.NationalInstruments#Controls#Primitives#IGraphChild#Uninitialize" />
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.LabelProperty">
      <summary>
            Identifies the Label dependency property.
            </summary>
      <returns>
            The identifier for the Label dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.LabelTemplateProperty">
      <summary>
            Identifies the LabelTemplate dependency property.
            </summary>
      <returns>
            The identifier for the LabelTemplate dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.LabelAlignmentProperty">
      <summary>
            Identifies the LabelAlignment dependency property.
            </summary>
      <returns>
            The identifier for the LabelAlignment dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.LabelVisibilityProperty">
      <summary>
            Identifies the LabelVisibility dependency property.
            </summary>
      <returns>
            The identifier for the LabelVisibility dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
      <returns>
            The identifier for the Fill dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.StrokeProperty">
      <summary>
            Identifies the Stroke dependency property.
            </summary>
      <returns>
            The identifier for the Stroke dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.StrokeThicknessProperty">
      <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
      <returns>
            The identifier for the StrokeThickness dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.ArrowBrushProperty">
      <summary>
            Identifies the ArrowBrush dependency property.
            </summary>
      <returns>
            The identifier for the ArrowBrush dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.ArrowPositionProperty">
      <summary>
            Identifies the ArrowPosition dependency property.
            </summary>
      <returns>
            The identifier for the ArrowPosition dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.ArrowVisibilityProperty">
      <summary>
            Identifies the ArrowVisibility dependency property.
            </summary>
      <returns>
            The identifier for the ArrowVisibility dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.ArrowLineDashArrayProperty">
      <summary>
            Identifies the ArrowLineDashArray dependency property.
            </summary>
      <returns>
            The identifier for the ArrowLineDashArray dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.ArrowLineThicknessProperty">
      <summary>
            Identifies the ArrowLineThickness dependency property.
            </summary>
      <returns>
            The identifier for the ArrowLineThickness dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.ArrowHeadShapeProperty">
      <summary>
            Identifies the ArrowHeadShape dependency property.
            </summary>
      <returns>
            The identifier for the ArrowHeadShape dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.ArrowHeadSizeProperty">
      <summary>
            Identifies the ArrowHeadSize dependency property.
            </summary>
      <returns>
            The identifier for the ArrowHeadSize dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.InteractionModeProperty">
      <summary>
            Identifies the InteractionMode dependency property.
            </summary>
      <returns>
            The identifier for the InteractionMode dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.VisibilityProperty">
      <summary>
            Identifies the Visibility dependency property.
            </summary>
      <returns>
            The identifier for the Visibility dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.HorizontalAxisProperty">
      <summary>
            Identifies the HorizontalAxis dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalAxis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.Annotation.VerticalAxisProperty">
      <summary>
            Identifies the VerticalAxis dependency property.
            </summary>
      <returns>
            The identifier for the VerticalAxis dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.#ctor">
      <summary>
            Initializes a new instance of the Annotation class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.OnArrowHeadSizeChanged(System.Windows.Size,System.Windows.Size)">
      <summary>
            Called when the ArrowHeadSize property changes.
            </summary>
      <param name="oldValue">
            Old value of the ArrowHeadSize property.
            </param>
      <param name="newValue">
            New value of the ArrowHeadSize property.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.OnHorizontalAxisChanged(NationalInstruments.Controls.Primitives.IScale,NationalInstruments.Controls.Primitives.IScale)">
      <summary>
            Called when the HorizontalAxis property changes.
            </summary>
      <param name="oldValue">
            Old value of the HorizontalAxis property.
            </param>
      <param name="newValue">
            New value of the HorizontalAxis property.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.OnVerticalAxisChanged(NationalInstruments.Controls.Primitives.IScale,NationalInstruments.Controls.Primitives.IScale)">
      <summary>
            Called when the VerticalAxis property changes.
            </summary>
      <param name="oldValue">
            Old value of the VerticalAxis property.
            </param>
      <param name="newValue">
            New value of the VerticalAxis property.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.Annotation.OnInvalidated(NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs)">
      <summary>
            Raises the Invalidated event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of RenderInvalidatedEventArgs that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.NationalInstruments#Controls#Rendering#IRenderable#SupportedRenderModes" />
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.GraphParent">
      <summary>Gets the parent graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.HasParent">
      <summary>
            Gets a value indicating whether the parent is set.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.Label">
      <summary>Gets or sets a label to describe the annotation.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.LabelTemplate">
      <summary>Gets or sets the template for the label.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.LabelAlignment">
      <summary>Gets or sets the alignment of the label with respect to the data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.LabelVisibility">
      <summary>Gets or sets the visibility of the label.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.Fill">
      <summary>Gets or sets the brush used for the fill of the annotation visual.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.Stroke">
      <summary>Gets or sets the brush used for the stroke of the annotation visual.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.StrokeThickness">
      <summary>Gets or sets the thickness of the stroke of the annotation visual.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.ArrowBrush">
      <summary>Gets or sets the brush used for the arrow.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.ArrowPosition">
      <summary>Gets or sets the location of the arrow with respect to the data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.ArrowVisibility">
      <summary>Gets or sets the visibility of the arrow.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.ArrowLineDashArray">
      <summary>
Gets or sets a collection of Double values that indicate the pattern of dashes and gaps used for the arrow line.
</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.ArrowLineThickness">
      <summary>Gets or sets the width of the arrow line.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.ArrowHeadShape">
      <summary>Gets or sets the shape used for the arrow head.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.ArrowHeadSize">
      <summary>Gets or sets the size of the arrow head, in device-independent pixels.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.InteractionMode">
      <summary>Gets or sets the interaction mode for the annotation.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.Visibility">
      <summary>Gets or sets the visibility of the annotation.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.HorizontalAxis">
      <summary>Gets or sets the horizontal axis the annotation is associated with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.VerticalAxis">
      <summary>Gets or sets the vertical axis the annotation is associated with.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.Annotation.Invalidated" />
    <member name="P:NationalInstruments.Controls.Primitives.Annotation.ArrowHeadOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for rendering the annotation arrow head.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.PointAnnotation.GetTargetRelativePosition" />
    <member name="M:NationalInstruments.Controls.PointAnnotation.GetArrowHeadRelativePosition" />
    <member name="M:NationalInstruments.Controls.PointAnnotation.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.PointAnnotation.RenderGraphCore(NationalInstruments.Controls.Rendering.RenderArgs)" />
    <member name="M:NationalInstruments.Controls.PointAnnotation.OnDragMoveCore(System.Windows.Point,System.Object)" />
    <member name="M:NationalInstruments.Controls.PointAnnotation.OnDragCompleteCore" />
    <member name="M:NationalInstruments.Controls.PointAnnotation.OnParentRegistered" />
    <member name="M:NationalInstruments.Controls.PointAnnotation.OnParentUnregistered(NationalInstruments.Controls.Primitives.IQueryableGraph)" />
    <member name="M:NationalInstruments.Controls.PointAnnotation.OnHorizontalAxisChanged(NationalInstruments.Controls.Primitives.IScale,NationalInstruments.Controls.Primitives.IScale)" />
    <member name="M:NationalInstruments.Controls.PointAnnotation.OnVerticalAxisChanged(NationalInstruments.Controls.Primitives.IScale,NationalInstruments.Controls.Primitives.IScale)" />
    <member name="F:NationalInstruments.Controls.PointAnnotation.TargetShapeProperty">
      <summary>
            Identifies the TargetShape dependency property.
            </summary>
      <returns>
            The identifier for the TargetShape dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.PointAnnotation.TargetSizeProperty">
      <summary>
            Identifies the TargetSize dependency property.
            </summary>
      <returns>
            The identifier for the TargetSize dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.PointAnnotation.HorizontalPositionProperty">
      <summary>
            Identifies the HorizontalPosition dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalPosition dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.PointAnnotation.VerticalPositionProperty">
      <summary>
            Identifies the VerticalPosition dependency property.
            </summary>
      <returns>
            The identifier for the VerticalPosition dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.PointAnnotation.ArrowHeadPositionProperty">
      <summary>
            Identifies the ArrowHeadPosition dependency property.
            </summary>
      <returns>
            The identifier for the ArrowHeadPosition dependency property.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.PointAnnotation.TargetShape">
      <summary>Gets or sets the shape used for the annotation target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAnnotation.TargetSize">
      <summary>Gets or sets the screen size of the annotation target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAnnotation.HorizontalPosition">
      <summary>Gets or sets the location of the annotation along the horizontal axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAnnotation.VerticalPosition">
      <summary>Gets or sets the location of the annotation along the vertical axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAnnotation.ArrowHeadPosition">
      <summary>Gets or sets where to place the arrow head of the annotation.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAnnotation.ActualHorizontalAxis">
      <summary>
            Gets or sets the scale used for mapping horizontal values.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAnnotation.ActualVerticalAxis">
      <summary>
            Gets or sets the scale used for mapping vertical values.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.PointAnnotation.TargetOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for rendering the annotation target.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.AxisPrecisionDateTime">
      <summary>
            Represents an Axis&lt;T&gt; of type PrecisionDateTime.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.CursorBase">
      <summary>
            Provides an abstract base class from which basic graph cursors are derived.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.InteractionModeProperty">
      <summary>
            Identifies the InteractionMode dependency property.
            </summary>
      <returns>
            The identifier for the InteractionMode dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.SnapToDataProperty">
      <summary>
            Identifies the SnapToData dependency property.
            </summary>
      <returns>
            The identifier for the SnapToData dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.CrosshairBrushProperty">
      <summary>
            Identifies the CrosshairBrush dependency property.
            </summary>
      <returns>
            The identifier for the CrosshairBrush dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.CrosshairDashArrayProperty">
      <summary>
            Identifies the CrosshairDashArray dependency property.
            </summary>
      <returns>
            The identifier for the CrosshairDashArray dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.CrosshairThicknessProperty">
      <summary>
            Identifies the CrosshairThickness dependency property.
            </summary>
      <returns>
            The identifier for the CrosshairThickness dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.LabelProperty">
      <summary>
            Identifies the Label dependency property.
            </summary>
      <returns>
            The identifier for the Label dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.LabelTemplateProperty">
      <summary>
            Identifies the LabelTemplate dependency property.
            </summary>
      <returns>
            The identifier for the LabelTemplate dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.ValuePresenterProperty">
      <summary>
            Identifies the ValuePresenter dependency property.
            </summary>
      <returns>
            The identifier for the ValuePresenter dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.LabelVisibilityProperty">
      <summary>
            Identifies the LabelVisibility dependency property.
            </summary>
      <returns>
            The identifier for the LabelVisibility dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.ValueVisibilityProperty">
      <summary>
            Identifies the ValueVisibility dependency property.
            </summary>
      <returns>
            The identifier for the ValueVisibility dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.VisibilityProperty">
      <summary>
            Identifies the Visibility dependency property.
            </summary>
      <returns>
            The identifier for the Visibility dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.CursorBase.HitTestCrosshairThicknessProperty">
      <summary>
            Identifies the HitTestCrosshairThickness dependency property.
            </summary>
      <returns>
            The identifier for the HitTestCrosshairThickness dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.#ctor">
      <summary>
            Initializes a new instance of the CursorBase class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.OnInvalidated(NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs)">
      <summary>
            Raises the Invalidated event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of RenderInvalidatedEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.OnPositionChanged(System.EventArgs)">
      <summary>
            Raises the PositionChanged event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)">
      <summary>
            Called when rendering the annotation in a legend.
            </summary>
      <param name="args">
            A LegendRenderArgs instance containing the size of the glyph to draw and the target to draw to.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.RenderGraphCore(NationalInstruments.Controls.Rendering.RenderArgs)">
      <summary>
            Called when rendering the annotation in a graph.
            </summary>
      <param name="args">
            A RenderArgs instance containing the target to draw to.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.OnSnapToDataChangedCore">
      <summary>
            Called when the SnapToData property changes.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.OnParentRegistered">
      <summary>
            Responds to the registration of a parent.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.OnParentUnregistered(NationalInstruments.Controls.Primitives.IQueryableGraph)">
      <summary>
            Responds to the unregistering of a parent.
            </summary>
      <param name="oldParent">
            The parent that is unregistered.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.CancelDrag">
      <summary>
            Cancels the current drag and returns the cursor to its original position.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.GetCursorDragStartScreenPosition(System.Windows.Point,System.Object)">
      <summary>
            Returns the screen start position that a drag should use given the specified mouse screen position and context.
            </summary>
      <param name="mouseScreenStartPosition">The mouse position on screen at the start of a drag operation.</param>
      <param name="context">The context object provided to GetRenderTargetOptionsMouseCallbacks.</param>
      <returns>The drag start position used for the cursor.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.OnDragMoveCore(System.Windows.Point,System.Object)">
      <summary>Responds to a drag move.</summary>
      <param name="updatedCursorRelativePosition">The relative position of the cursor at the current point of the drag.</param>
      <param name="context">The context object provided to GetRenderTargetOptionsMouseCallbacks.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.GetRenderTargetOptionsMouseCallbacks(System.Object)">
      <summary>
            Gets the mouse callbacks to use for a RenderTargetOptions instance, to enable drag support.
            </summary>
      <param name="context">A context object provided to distinguish different types of drag operations.</param>
      <returns>
            A mouse callback dictionary, if Mouse is set; otherwise, null.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.NationalInstruments#Controls#Rendering#IRenderable#Render(NationalInstruments.Controls.Rendering.RenderArgs)" />
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.NationalInstruments#Controls#Primitives#IGraphChild#RegisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.NationalInstruments#Controls#Primitives#IGraphChild#Initialize" />
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.NationalInstruments#Controls#Primitives#IGraphChild#UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.NationalInstruments#Controls#Primitives#IGraphChild#Uninitialize" />
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.OnVisualPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Raises an Invalidated event based on an appearance change.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CursorBase.OnPositionalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Raises an Invalidated event based on a positional change.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.InteractionMode">
      <summary>Gets or sets the interaction mode for the cursor.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.SnapToData">
      <summary>Gets or sets whether or not the cursor snaps to data points in the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.CrosshairBrush">
      <summary>Gets or sets the brush used for the crosshairs.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.CrosshairDashArray">
      <summary>
      Gets or sets a collection of Double values that indicate the pattern of dashes and gaps used for the crosshairs.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.CrosshairThickness">
      <summary>Gets or sets the thickness of the crosshairs.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.Label">
      <summary>Gets or sets a label to describe the cursor.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.LabelTemplate">
      <summary>Gets or sets the template for the label.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.ValuePresenter">
      <summary>Gets or sets the presenter for the data values on the cursor.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.LabelVisibility">
      <summary>Gets or sets the visibility of the cursor label.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.ValueVisibility">
      <summary>Gets or sets the visibility of the value displayed next to the cursor.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.Visibility">
      <summary>Gets or sets the visibility of the cursor.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.CursorBase.Invalidated" />
    <member name="E:NationalInstruments.Controls.Primitives.CursorBase.PositionChanged">
      <summary>Occurs when the position changes, either from the cursor moving or the plot or axes changing.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.HitTestCrosshairThickness" />
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.LabelPresenter">
      <summary>
            Gets or sets the label presenter - internal only for access to derived classes in our assembly.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.GraphParent">
      <summary>Gets the parent graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.HasParent">
      <summary>
            Gets a value indicating whether the parent is set.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CursorBase.NationalInstruments#Controls#Rendering#IRenderable#SupportedRenderModes" />
    <member name="T:NationalInstruments.Controls.Data.DataCulling">
      <summary>
            Represents a strategy for culling data points from a collection of mapped data.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataCulling.Cull(NationalInstruments.Controls.Rendering.RelativeDataCollection,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32})">
      <summary>
            Performs culling on the specified data.
            </summary>
      <param name="data">The collection of mapped data to cull.</param>
      <param name="horizontalIndices">The indices of the horizontal coordinate values in data (parameter).</param>
      <param name="verticalIndices">The indices of the vertical coordinate values in data (parameter).</param>
      <returns>A culled collection of data.</returns>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
              -or-

horizontalIndices (parameter) is null.

-or-

verticalIndices (parameter) is null.

-or-horizontalIndices (parameter) is null.-or-verticalIndices (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">data (parameter) is empty.
              -or-

horizontalIndices (parameter) is empty.

-or-

verticalIndices (parameter) is empty.

-or-

horizontalIndices (parameter) is contains an index value greater than the Count of data (parameter).

-or-

verticalIndices (parameter) is contains an index value greater than the Count of data (parameter).

-or-

verticalIndices (parameter) contains an index value already in horizontalIndices (parameter).

-or-horizontalIndices (parameter) is empty.-or-verticalIndices (parameter) is empty.-or-horizontalIndices (parameter) is contains an index value greater than the Count of data (parameter).-or-verticalIndices (parameter) is contains an index value greater than the Count of data (parameter).-or-verticalIndices (parameter) contains an index value already in horizontalIndices (parameter).</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataCulling.GetCullRanges(NationalInstruments.Controls.Rendering.RelativeDataCollection,NationalInstruments.Controls.Rendering.RelativeDataCollection)">
      <summary>
            Gets a collection of index ranges to remove from the mapped data.
            </summary>
      <param name="horizontalData">The horizontal coordinate data.</param>
      <param name="verticalData">The vertical coordinate data.</param>
      <returns>A collection of index ranges to remove from all the mapped data buffers.</returns>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataCulling.None">
      <summary>Gets a value that performs no culling on data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataCulling.PreservePoints">
      <summary>Gets a value that culls all values not contained in the visible bounds.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataCulling.PreserveLines">
      <summary>Gets a value that culls all out-of-bounds values that do not form a line with neighboring values that cross the visible bounds.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataCulling.PreserveAreas">
      <summary>Gets a value that culls all out-of-bounds values that do not form a closed area with neighboring values that crosses the visible bounds.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataCulling.PreserveJointedAreas">
      <summary>Gets a value that culls all out-of-bounds values that do not form joints in a closed area with neighboring values that crosses the visible bounds.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataCulling.UnderlyingType" />
    <member name="T:NationalInstruments.Controls.Data.DataDecimation">
      <summary>
            Represents a strategy for decimating data points from a collection of mapped data.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDecimation.CreateCoLinearMode(System.Double)">
      <summary>
            Creates a co-linear decimation mode with the specified sensitivity.
            </summary>
      <param name="sensitivity">A sensitivity factor to increase the effective </param>
      <returns>A co-linear decimation mode using the specified sensitivity (parameter).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">sensitivity (parameter) is less than or equal to zero.
              -or-

sensitivity (parameter) is PositiveInfinity or NaN.

-or-sensitivity (parameter) is PositiveInfinity or NaN.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDecimation.Decimate(NationalInstruments.Controls.Rendering.RelativeDataCollection,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32},System.Windows.Size)">
      <summary>
            Performs decimation on the specified data.
            </summary>
      <param name="data">The collection of mapped data to decimate.</param>
      <param name="horizontalIndices">The indices of the horizontal coordinate values in data (parameter).</param>
      <param name="verticalIndices">The indices of the vertical coordinate values in data (parameter).</param>
      <param name="screenSize">The size of the are where the data is rendered.</param>
      <returns>A decimated collection of data.</returns>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
              -or-

horizontalIndices (parameter) is null.

-or-

verticalIndices (parameter) is null.

-or-horizontalIndices (parameter) is null.-or-verticalIndices (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">data (parameter) is empty.
              -or-

horizontalIndices (parameter) is empty.

-or-

verticalIndices (parameter) is empty.

-or-

horizontalIndices (parameter) is contains an index value greater than the Count of data (parameter).

-or-

verticalIndices (parameter) is contains an index value greater than the Count of data (parameter).

-or-

verticalIndices (parameter) contains an index value already in horizontalIndices (parameter).

-or-

The area covered by screenSize (parameter) is less than one or greater than MaxValue.

-or-horizontalIndices (parameter) is empty.-or-verticalIndices (parameter) is empty.-or-horizontalIndices (parameter) is contains an index value greater than the Count of data (parameter).-or-verticalIndices (parameter) is contains an index value greater than the Count of data (parameter).-or-verticalIndices (parameter) contains an index value already in horizontalIndices (parameter).-or-The area covered by screenSize (parameter) is less than one or greater than MaxValue.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDecimation.DecimateCore(NationalInstruments.Controls.Rendering.RelativeDataCollection,NationalInstruments.Controls.Rendering.RelativeDataCollection,NationalInstruments.Controls.Rendering.RelativeDataCollection,System.Int32,System.Int32)">
      <summary>
            Performs decimation on the specified data.
            </summary>
      <param name="data">
            The collection of mapped data to decimate.
            </param>
      <param name="horizontalData">The horizontal coordinate data.</param>
      <param name="verticalData">The vertical coordinate data.</param>
      <param name="screenWidth">The pixel width of the screen area where data is displayed.</param>
      <param name="screenHeight">The pixel height of the screen area where data is displayed.</param>
      <returns>A decimated collection of data.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Data.DataDecimation.GetRemoveRanges(NationalInstruments.Controls.Rendering.RelativeDataCollection,NationalInstruments.Controls.Rendering.RelativeDataCollection,System.Int32,System.Int32)">
      <summary>
            Gets a collection of index ranges to remove from the mapped data.
            </summary>
      <param name="horizontalData">The horizontal coordinate data.</param>
      <param name="verticalData">The vertical coordinate data.</param>
      <param name="screenWidth">The pixel width of the screen area where data is displayed.</param>
      <param name="screenHeight">The pixel height of the screen area where data is displayed.</param>
      <returns>A collection of index ranges to remove from all the mapped data buffers.</returns>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDecimation.None">
      <summary>Gets a value that performs no decimation on data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDecimation.CoLocated">
      <summary>Gets a value that represents all points at the same screen location with a single value.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDecimation.CoLinear">
      <summary>Gets a value that represents all points on the same axis-aligned line with a single pair of values.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Data.DataDecimation.UnderlyingType" />
    <member name="T:NationalInstruments.Controls.Primitives.DataProcessorBase">
      <summary>
            Represents an abstract base class used to process data assigned to an IGraph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.#ctor">
      <summary>Initializes a new instance of the DataProcessorBase class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.GetRawData(System.Int32)">
      <summary>
            Gets the raw data at the specified data (plot) index.
            </summary>
      <param name="dataIndex">The data (plot) index.</param>
      <returns>The data for the given data (plot) index.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.SplitDataSource(System.Object)">
      <summary>
            Splits the specified data object into separate sources for each plot in the graph.
            </summary>
      <param name="dataSource">The source data object to split.</param>
      <returns>A collection of plot data objects.</returns>
      <exception cref="T:System.ArgumentNullException">dataSource (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.ClearDataSource">
      <summary>
            Removes any change listener on an old data source when DataSource is cleared.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.ProcessData(System.Collections.Generic.IDictionary{System.Int32,System.Object})">
      <summary>
            Decomposes and maps the specified indexed data objects.
            </summary>
      <param name="changedData">The collection of data that has changed.</param>
      <exception cref="T:System.ArgumentNullException">changedData (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.RemapData(System.Collections.Generic.ICollection{System.Int32})">
      <summary>
            Remaps the raw data at the specified indices.
            </summary>
      <param name="dataIndices">The indices of the data to remap.</param>
      <returns>true if any data was processed; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">dataIndices (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.OnDataSourceChanged(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>
            Notifies the owner graph that the last value to SplitDataSource has been modified.
            </summary>
      <param name="plotSources">The new set of plot data objects.</param>
      <exception cref="T:System.ArgumentNullException">plotSources (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">DataSource is not in use.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.Invalidate">
      <summary>
            Clears the current state of the data processor.
            </summary>
      <returns>true if the processor state has changed; otherwise, false if the processor was already cleared.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.OnOwnerInitialized">
      <summary>
            Called when Owner is assigned by the owning graph control.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.SplitDataSourceCore(System.Object)">
      <summary>Implements the SplitDataSource method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.ProcessDataCore(System.Collections.Generic.IDictionary{System.Int32,System.Object})">
      <summary>Implements the ProcessData method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessorBase.RemapDataCore(System.Collections.Generic.ICollection{System.Int32})">
      <summary>Implements the RemapData method.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.DataProcessorBase.Owner">
      <summary>Gets the graph that owns this instance.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.DataProcessorBase.IsProcessingData">
      <summary>
            Gets a value indicating whether data is currently being processed.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.InputDataCollection">
      <summary>
            Represents a collection of InputData objects.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.AxisDouble">
      <summary>
            Represents an Axis&lt;T&gt; of type Double.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.PositiveDataMapper`3.OnDataMapperChanged(NationalInstruments.Controls.Data.DataMapperChangedEventArgs)">
      <summary>
            Raises the DataMapperChanged event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of DataMapperChangedEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.Controls.GraphEditInteraction">
      <summary>
            Provides a mechanism for drawing data into an IWritableGraph.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.GraphInteraction">
      <summary>
            Defines the basic interaction functionality for the Graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.GraphInteraction.Execute(NationalInstruments.Controls.Graph,NationalInstruments.Controls.Primitives.GraphInteractionArgs)">
      <summary>
            Performs the behavior as specified by the interaction and the current parameters of the interaction.
            </summary>
      <param name="graph">The graph to perform the interaction on.</param>
      <param name="args">The set of parameters that determine the constraints of the particular interaction.</param>
    </member>
    <member name="M:NationalInstruments.Controls.GraphInteraction.AcceptsModifier(System.Windows.Input.ModifierKeys)">
      <summary>
            Returns whether or not a particular interaction type accepts the given modifier key.
            </summary>
      <param name="modifiers">The modifier keys to compare.</param>
      <returns>true if modifiers (parameter) should be used to activate the interaction;
            otherwise, false.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.None">
      <summary>
            Gets a value that performs no user interaction with the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.Zoom">
      <summary>
            Gets the user interaction for clicking and dragging the mouse to zoom in on an area of the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.ZoomHorizontal">
      <summary>
            Gets the user interaction for clicking and dragging the mouse to zoom in on a selected area along the horizontal axis of the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.ZoomVertical">
      <summary>
            Gets the user interaction for clicking and dragging with the mouse to zoom in on a selected area along the vertical axis of the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.ZoomIn">
      <summary>
            Gets the user interaction for clicking to zoom in on an area of the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.ZoomOut">
      <summary>
            Gets the user interaction for clicking to zoom out of an area of the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.Pan">
      <summary>
            Gets the user interaction for panning the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.PanHorizontal">
      <summary>
            Gets the user interaction for panning the graph horizontally.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.PanVertical">
      <summary>
            Gets the user interaction for panning the graph vertically.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.Triggers">
      <summary>
            Gets the triggers for a graph interaction.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphInteraction.UnderlyingType" />
    <member name="M:NationalInstruments.Controls.GraphEditInteraction.Execute(NationalInstruments.Controls.Graph,NationalInstruments.Controls.Primitives.GraphInteractionArgs)">
      <summary>
            Performs an edit operation on the specified writable graph.
            </summary>
      <param name="graph">A writable graph.</param>
      <param name="args">Contains the parameters used to perform an edit operation.</param>
      <exception cref="T:System.ArgumentNullException">graph (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">graph (parameter) does not implement IWritableGraph.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.GraphEditInteraction.CreateInputData">
      <summary>
            Instantiates a type of InputData specific to the interaction being used. </summary>
      <returns>An InputData instance.</returns>
    </member>
    <member name="P:NationalInstruments.Controls.GraphEditInteraction.EditWaveform">
      <summary>Gets an interaction for editing waveform data in a writable graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.GraphEditInteraction.UnderlyingType" />
    <member name="M:NationalInstruments.Controls.Internal.DefaultAdjusterStep.ConnectPorts(NationalInstruments.Controls.Internal.DefaultDataItemDescription,System.Collections.Generic.IList{NationalInstruments.Controls.Data.Internal.PipelineSourcePort},System.Collections.Generic.IList{NationalInstruments.Controls.Data.Internal.PipelineTargetPort})">
      <summary>Connects the incoming and outgoing ports, saving the connection info. Assumes everything is in dimension order.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.DefaultAdjusterStep.PrepopulateData(NationalInstruments.Controls.Internal.DefaultDataItemDescription)">
      <summary>Adds data to the synchronization cache from plots not publishing data during this update event.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.DefaultAdjusterStep.ProcessData(System.Collections.Generic.IDictionary{NationalInstruments.Controls.Data.Internal.PipelineTargetPort,NationalInstruments.DataInfrastructure.IBuffer})">
      <summary>Adds data to the synchronization cache from out-of-band updates from observable data sources.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.DefaultDataItemDescription.GetDimensionOffset(System.Int32,System.Int32)">
      <summary>
            Gets the index of the first dimension used from the sample data to fulfill the renderer data requirements.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.DefaultDataItemDescription.CreateDimensionMapping(System.Int32,System.Int32,System.Func{System.Type,NationalInstruments.Controls.Data.DataDimensionSource,System.Int32})">
      <summary>
            Initializes the mapping from required dimensions to decomposed source dimensions.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.DefaultDataItemDescription.GetRawData">
      <summary>
            Gets the cached raw data for this DataIndex,
            or null if data has not been completely received.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.DefaultDataItemDescription.GetRawData(System.Boolean@)">
      <summary>
            Gets the cached raw data for this DataIndex,
            or null if data has been disposed (parameter) or not completely received.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.DefaultDataItemDescription.SetRawData(System.Collections.Generic.IList{NationalInstruments.DataInfrastructure.IBuffer})">
      <summary>
            Caches the raw data for this DataIndex.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Internal.DrawAction">
      <summary>
            This class executes the draw actions of the VectorRenderTarget. 
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.IDeferredRenderTarget.BeginDraw">
      <summary>Starts a deferred draw cycle.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.IDeferredRenderTarget.EndDraw">
      <summary>Ends a deferred draw cycle.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.IDeferredRenderTarget.CanDraw">
      <summary>Gets a value indicating whether drawing can happen.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.MultiPlotCursor">
      <summary>Represents a cursor that is associated with values from multiple plots using an axis in a graph.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.MultiPlotCursor.AxisProperty">
      <summary>
            Identifies the Axis dependency property.
            </summary>
      <returns>
            The identifier for the Axis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.MultiPlotCursor.AxisValueProperty">
      <summary>
            Identifies the AxisValue dependency property.
            </summary>
      <returns>
            The identifier for the AxisValue dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.MultiPlotCursor.TargetBrushProperty">
      <summary>
            Identifies the TargetBrush dependency property.
            </summary>
      <returns>
            The identifier for the TargetBrush dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.MultiPlotCursor.TargetSizeProperty">
      <summary>
            Identifies the TargetSize dependency property.
            </summary>
      <returns>
            The identifier for the TargetSize dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.MultiPlotCursor.TargetShapeProperty">
      <summary>
            Identifies the TargetShape dependency property.
            </summary>
      <returns>
            The identifier for the TargetShape dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.MultiPlotCursor.ActualAxisProperty">
      <summary>
            Identifies the ActualAxis dependency property.
            </summary>
      <returns>
            The identifier for the ActualAxis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.MultiPlotCursor.ValuesProperty">
      <summary>
            Identifies the Values dependency property.
            </summary>
      <returns>
            The identifier for the Values dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.MoveToIndex(NationalInstruments.Controls.Primitives.IPlot,System.Int32)">
      <summary>
            Move the cursor to the data point at the specified index on a plot.
            </summary>
      <param name="plot">The plot on which the index is defined.</param>
      <param name="dataIndex">The index of the data to move to.</param>
    </member>
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.MoveNext">
      <summary>Move the cursor to the next data point.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.MovePrevious">
      <summary>Move the cursor to the previous data point.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.GetRelativePosition">
      <summary>Gets the relative position of the cursor.</summary>
      <returns>The relative position of the cursor.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.SetRelativePosition(System.Double)">
      <summary>
            Centers the cursor on the specified relative position, or on the nearest data point in the graph.
            </summary>
      <param name="relativePosition">The relative position to move the cursor to.</param>
    </member>
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.GetScreenPosition">
      <summary>Gets the screen position of the cursor.</summary>
      <returns>The screen position that lies at the relative center of the cursor.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.SetScreenPosition(System.Windows.Point)">
      <summary>
            Centers the cursor on the specified screen position, or on the nearest data point in the graph.
            </summary>
      <param name="screenPosition">The screen position to move the cursor to.</param>
    </member>
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.OnParentRegistered" />
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.OnParentUnregistered(NationalInstruments.Controls.Primitives.IQueryableGraph)" />
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.RenderGraphCore(NationalInstruments.Controls.Rendering.RenderArgs)" />
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.OnSnapToDataChangedCore" />
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.GetCursorDragStartScreenPosition(System.Windows.Point,System.Object)" />
    <member name="M:NationalInstruments.Controls.MultiPlotCursor.OnDragMoveCore(System.Windows.Point,System.Object)" />
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.Axis">
      <summary>Gets or sets the desired axis to associate the cursor with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.ActualAxis">
      <summary>Gets the current axis the cursor is associated with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.AxisValue">
      <summary>Gets or sets the value on the axis where the cursor is positioned.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.Values">
      <summary>Gets the plot, index, and data point for each plot in the graph that has a point at the current axis value.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.TargetBrush">
      <summary>Gets or sets the brush used for the target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.TargetSize">
      <summary>Gets or sets the screen size of the target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.TargetShape">
      <summary>Gets or sets the shape used for the target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.MouseOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for graph mouse handling.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.DisplayOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for graph and legend rendering.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.MultiPlotCursor.ValueDisplayElements">
      <summary>
            Gets or sets the elements for displaying the values.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.PolarAngularAxis">
      <summary>
            Represents the angular axis on a polar graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the PolarAngularAxis class with the specified label.
            </summary>
      <param name="label">A label to describe the axis.</param>
    </member>
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.GetDataMapper">
      <summary>
            Gets a data mapper for the scale.
            </summary>
      <returns>An IDataMapper&lt;T&gt; that you can use for mapping data values.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.GetDataMapper(System.Object)" />
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.Present(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.Clean(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.ToString" />
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.NationalInstruments#Controls#Primitives#IGraphChild#RegisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.RegisterParent(NationalInstruments.Controls.Primitives.IGraph)">
      <summary>Implements the RegisterParent method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.NationalInstruments#Controls#Primitives#IGraphChild#Initialize" />
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.Initialize">
      <summary>Implements the Initialize method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.NationalInstruments#Controls#Primitives#IGraphChild#UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)">
      <summary>Implements the UnregisterParent method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.NationalInstruments#Controls#Primitives#IGraphChild#Uninitialize" />
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.Uninitialize">
      <summary>Implements the Uninitialize method.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.PolarAngularAxis.MajorGridLinesProperty">
      <summary>
            Identifies the MajorGridLines dependency property.
            </summary>
      <returns>
            The identifier for the MajorGridLines dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.PolarAngularAxis.ScaleKindProperty">
      <summary>
            Identifies the ScaleKind dependency property.
            </summary>
      <returns>
            The identifier for the ScaleKind dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.#ctor">
      <summary>
            Initializes a new instance of the PolarAngularAxis class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarAngularAxis.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.PolarAngularAxis.MajorGridLines">
      <summary>Gets or sets the major grid lines for the scale.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PolarAngularAxis.ScaleKind">
      <summary>Gets or sets the angle system used by the scale.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PolarAngularAxis.DataMapperProxy">
      <summary>
            Gets or sets the proxy for the data mapper for the axis.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.PolarGraph">
      <summary>
            Represents a graph control that displays data in a Polar coordinate system.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.LayeredGraph">
      <summary>
            Provides the base class for all two-dimensional graphs.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.GraphBase">
      <summary>
            Represents the base class for all graphs. This class provides the core functionality for managing and processing incoming data.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.Refresh">
      <summary>
            Reprocesses all data in the graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.BeginInit" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.EndInit" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.ToString" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.PrepareForData(System.Int32)">
      <summary>
            Called for each updated element in Data before ProcessData is called.
            </summary>
      <param name="plotIndex">The index of the plot that will receive non-null data.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.OnDataSourceChanged">
      <summary>
            Called when the DataSource property changes.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.OnGraphChildrenChanging(System.Object,NationalInstruments.Controls.Primitives.NotifyCollectionChangingEventArgs)">
      <summary>
            Updates the registration of any IGraphChild instances contained in the given collection event args.
            </summary>
      <param name="e">The event args from a CollectionChanging event.</param>
      <param name="sender">The collection that raised the event.</param>
      <exception cref="T:System.ArgumentNullException">sender (parameter) is null.
              -or-

e (parameter) is null.

-or-e (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">sender (parameter) does not implement IEnumerable.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.RemapData(System.Collections.Generic.ICollection{System.Int32})">
      <summary>
            Re-maps raw data for the specified plots, without adjusting scales.
            </summary>
      <param name="plotIndices">The plots to process.</param>
      <returns>true if any data was mapped; otherwise, false.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.ReprocessData(System.Collections.Generic.ICollection{System.Int32})">
      <summary>
            Re-processes raw data for the specified plots.
            </summary>
      <param name="plotIndices">The plots to process.</param>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.GraphBase.DataSourceProperty">
      <summary>
            Identifies the DataSource dependency property.
            </summary>
      <returns>
            The identifier for the DataSource dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.#ctor(NationalInstruments.Controls.Primitives.DataProcessorBase)">
      <summary>Initializes a new instance of the GraphBase class with the specified data processor.</summary>
      <param name="dataProcessor">An object used to process data passed to the graph.</param>
      <exception cref="T:System.ArgumentNullException">dataProcessor (parameter) is null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphBase.OnDataProcessed(NationalInstruments.Controls.Primitives.DataProcessedEventArgs)">
      <summary>
            Raises the DataProcessed event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of DataProcessedEventArgs that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphBase.DataProcessor">
      <summary>Gets the object used to process data in the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphBase.Data">
      <summary>Gets the collection of data sources that are rendered by the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphBase.DataSource">
      <summary>Gets or sets an object used to populate the Data collection.</summary>
      <exception cref="T:System.FormatException">The graph cannot process the given data.</exception>
      <exception cref="T:System.InvalidOperationException">
The Data collection is not empty.
</exception>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.GraphBase.DataProcessed">
      <summary>Occurs when data is processed by the graph.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#ISupportChildren#AddDependentChild(System.Object)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#ISupportChildren#RemoveDependentChild(System.Object)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnPlotAreaChanged(NationalInstruments.Controls.Primitives.PlotArea,NationalInstruments.Controls.Primitives.PlotArea)">
      <summary>
            Called when a new plot area has been loaded from a template.
            </summary>
      <param name="oldPlotArea">
            The previous PlotArea.
            </param>
      <param name="newPlotArea">
            The new PlotArea.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnPlotAreaRedrawNeeded(System.Object,System.EventArgs)">
      <summary>
            Called when the PlotArea raises the RedrawNeeded event.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetPlotAreaSize" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.RelativeToScreen(System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.ScreenToRelative(System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.DataToRelative(NationalInstruments.Controls.Primitives.IScale,System.Object)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.DataToRelative(NationalInstruments.Controls.Primitives.IPlot,System.Collections.IList)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.DataToScreen(NationalInstruments.Controls.Primitives.IPlot,System.Collections.IList)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.RelativeToData(NationalInstruments.Controls.Primitives.IScale,System.Double)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.RelativeToData(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.ScreenToData(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetValue(NationalInstruments.Controls.Primitives.IPlot,System.Int32)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.FindValues(NationalInstruments.Controls.Primitives.IPlot,NationalInstruments.Controls.Primitives.IRange,NationalInstruments.Controls.Primitives.IRange,System.Boolean)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.FindNearestValue(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point,NationalInstruments.Controls.Primitives.GraphQueryArgs)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.FindNearestValues(NationalInstruments.Controls.Primitives.IScale,System.Double,NationalInstruments.Controls.Primitives.GraphQueryArgs)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#IQueryableGraph#GetOrientation(NationalInstruments.Controls.Primitives.IScale)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#IQueryableGraph#GetPlots(NationalInstruments.Controls.Primitives.IScale)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#IQueryableGraph#GetDefaultAxis(System.Windows.Controls.Orientation)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#IQueryableGraph#GetAxis(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Controls.Orientation)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#IQueryableGraph#GetDefaultPlot" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#IQueryableGraph#ContainsAxis(NationalInstruments.Controls.Primitives.IScale)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#IQueryableGraph#ContainsScale(NationalInstruments.Controls.Primitives.IScale)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.NationalInstruments#Controls#Primitives#IQueryableGraph#ContainsPlot(NationalInstruments.Controls.Primitives.IPlot)" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.DataToRelativeCore(NationalInstruments.Controls.Primitives.IScale,System.Object)">
      <summary>Implements the DataToRelative method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.DataToRelativeCore(NationalInstruments.Controls.Primitives.IPlot,System.Collections.IList)">
      <summary>Implements the DataToRelative method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.RelativeToDataCore(NationalInstruments.Controls.Primitives.IScale,System.Double)">
      <summary>Implements the RelativeToData method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.RelativeToDataCore(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point)">
      <summary>Implements the RelativeToData method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetValueCore(NationalInstruments.Controls.Primitives.IPlotObserver,System.Int32)">
      <summary>Implements the GetValue method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.FindValuesCore(NationalInstruments.Controls.Primitives.IPlot,NationalInstruments.Controls.Primitives.IRange,NationalInstruments.Controls.Primitives.IRange,System.Boolean)">
      <summary>Implements the FindValues method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.FindNearestValueCore(NationalInstruments.Controls.Primitives.IPlotObserver,System.Windows.Point,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>Implements the FindNearestValue method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.FindNearestValuesCore(NationalInstruments.Controls.Primitives.IScale,System.Double,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>Implements the FindNearestValues method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetOrientationCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the GetOrientation method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetPlotsCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the GetPlots method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetDefaultAxisCore(System.Windows.Controls.Orientation)">
      <summary>Implements the GetDefaultAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetAxisCore(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Controls.Orientation)">
      <summary>Implements the GetAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetDefaultPlotCore">
      <summary>Implements the GetDefaultPlot method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.ContainsAxisCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the ContainsAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.ContainsScaleCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the ContainsScale method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.ContainsPlotCore(NationalInstruments.Controls.Primitives.IPlot)">
      <summary>Implements the ContainsPlot method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GuardPlot(NationalInstruments.Controls.Primitives.IPlot)">
      <summary>
            Ensures the specified plot is valid.
            </summary>
      <param name="plot">The plot to guard.</param>
      <exception cref="T:System.ArgumentNullException">plot (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">plot (parameter) is not contained in the graph.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetChildrenAtPoint(System.Windows.Point)">
      <summary>
            Returns a collection of logical children in the graph that are visually located under the specified screen position.
            </summary>
      <param name="screenPosition">The screen position to check.</param>
      <returns>
            A collection of objects, which may include: plots, cursors, scales, or arbitrary visuals within the plot area.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetCursorAt(System.Windows.Point)">
      <summary>
            Returns the cursor with the highest z-order under the given screen coordinate, if any.
            </summary>
      <param name="screenPosition">The screen position to check.</param>
      <returns>
            A cursor, or null if no cursor is detected at that screen location.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetAnnotationAt(System.Windows.Point)">
      <summary>
            Returns the annotation with the highest z-order under the given screen coordinate, if any.
            </summary>
      <param name="screenPosition">The screen position to check.</param>
      <returns>
            An annotation, or null if no annotation is detected at that screen location.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetScaleAt(System.Windows.Point)">
      <summary>
            Returns the scale under the given screen coordinate, if any.
            </summary>
      <param name="screenPosition">The screen position to check.</param>
      <returns>
            A scale, or null if no scale is detected at that screen location.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetPlotAt(System.Windows.Point)">
      <summary>
            Returns the plot with the highest z-order under the given screen coordinate, if any.
            </summary>
      <param name="screenPosition">The screen position to check.</param>
      <returns>
            A plot, or null if no plot is detected at that screen location.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.SearchAllAxesForScaleAtPoint(System.Windows.Point,System.Nullable{System.Windows.Controls.Orientation})">
      <summary>
            Searches all axes on the graph to find one at the specified screen point.
            </summary>
      <param name="screenPosition">The screen position to check.</param>
      <param name="orientation">The orientation of the scale to look for, or null if any orientation is acceptable.</param>
      <returns>
            Returns the IScale object found at the screen position, or null if no scale was found.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetHitTestedPlotsWithRenderedInterpolation(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Point)">
      <summary>
            Finds a list of plots that are rendered at the specified plot point.
            </summary>
      <param name="hitTestResults">The hit tested elements.</param>
      <param name="plotPoint">The point on the plot.</param>
      <returns>A list of plots that are rendered at plotPoint (parameter).</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetHitTestResults(System.Windows.Point)">
      <summary>---Internal to simulate protected and internal---</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetPlotsAtCore(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Point,System.Windows.Point)">
      <summary>---Internal to simulate protected and internal---</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.LayeredGraph.PositionProperty">
      <summary>
            Identifies the Position attached property.
            </summary>
      <returns>
            The identifier for the Position attached property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.LayeredGraph.TargetLocationProperty">
      <summary>
            Identifies the TargetLocation attached property.
            </summary>
      <returns>
            The identifier for the TargetLocation attached property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.LayeredGraph.RenderModeProperty">
      <summary>
            Identifies the RenderMode dependency property.
            </summary>
      <returns>
            The identifier for the RenderMode dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaCursorProperty">
      <summary>
            Identifies the PlotAreaCursor dependency property.
            </summary>
      <returns>
            The identifier for the PlotAreaCursor dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaBackgroundProperty">
      <summary>
            Identifies the PlotAreaBackground dependency property.
            </summary>
      <returns>
            The identifier for the PlotAreaBackground dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaBorderBrushProperty">
      <summary>
            Identifies the PlotAreaBorderBrush dependency property.
            </summary>
      <returns>
            The identifier for the PlotAreaBorderBrush dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.LayeredGraph.HitTestModeProperty">
      <summary>
            Identifies the HitTestMode dependency property.
            </summary>
      <returns>
            The identifier for the HitTestMode dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.#ctor(NationalInstruments.Controls.Primitives.DataProcessorBase)">
      <summary>
      Initializes a new instance of the LayeredGraph class with the specified data processor.
    </summary>
      <param name="dataProcessor">An object used to process data passed to the graph.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnApplyTemplate" />
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnPlotAreaMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
            Raises the PlotAreaMouseEnter event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of MouseEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnPlotAreaMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
            Raises the PlotAreaMouseLeave event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of MouseEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnPlotAreaMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Raises the PlotAreaMouseMove event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of MouseEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnPlotAreaMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Raises the PlotAreaMouseLeftButtonDown event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of MouseButtonEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnPlotAreaMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Raises the PlotAreaMouseLeftButtonUp event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of MouseButtonEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.OnPlotAreaMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Raises the PlotAreaMouseRightButtonUp event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of MouseButtonEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetPosition(System.Windows.DependencyObject)">
      <summary>
            Gets the value of the Position attached property for a specified UIElement.
            </summary>
      <returns>
            The Position property value for the element.
            </returns>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element from which the property value is read.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.SetPosition(System.Windows.DependencyObject,NationalInstruments.Controls.GraphLayerPosition)">
      <summary>
            Sets the value of the Position attached property to a specified element.
            </summary>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element to which the attached property is written.
            </param>
      <param name="value">
            The needed GraphLayerPosition value.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.GetTargetLocation(NationalInstruments.Controls.Primitives.ScalePresenter)">
      <summary>
            Gets the value of the TargetLocation attached property for a specified UIElement.
            </summary>
      <returns>
            The TargetLocation property value for the element.
            </returns>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element from which the property value is read.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.LayeredGraph.SetTargetLocation(NationalInstruments.Controls.Primitives.ScalePresenter,NationalInstruments.Controls.RelativeLocation)">
      <summary>
            Sets the value of the TargetLocation attached property to a specified element.
            </summary>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element to which the attached property is written.
            </param>
      <param name="value">
            The needed RelativeLocation value.
            </param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.ActualRenderMode">
      <summary>
            Gets whether the plot area renders with vector or raster graphics.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.AllPlots" />
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.AllScales" />
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.Children">
      <summary>Gets the collection of child objects to display in the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.RenderMode">
      <summary>Gets or sets the desired render mode.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is not a valid RenderMode value.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaCursor">
      <summary>Gets or sets the cursor for the mouse when the mouse is over the plot area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaBackground">
      <summary>Gets or sets the background for the plot area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaBorderBrush">
      <summary>Gets or sets the border brush for the plot area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.HitTestMode">
      <summary>Gets or sets the hit test mode.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is not a valid PlotHitTestMode value.
      </exception>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaMouseEnter">
      <summary>Occurs when the mouse has entered the plot area.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaMouseLeave">
      <summary>Occurs when the mouse has left the plot area.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaMouseMove">
      <summary>Occurs when the mouse has moved within the plot area.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaMouseLeftButtonDown">
      <summary>Occurs when the left mouse button is pressed while over the plot area.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaMouseLeftButtonUp">
      <summary>Occurs when the left mouse button is released while over the plot area.</summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.LayeredGraph.PlotAreaMouseRightButtonUp">
      <summary>Occurs when the mouse right button is released while over the plot area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.LayeredGraph.PlotArea">
      <summary>Gets the plot area template part for the graph.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.#ctor">
      <summary>
            Initializes a new instance of the PolarGraph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.OnPlotAreaChanged(NationalInstruments.Controls.Primitives.PlotArea,NationalInstruments.Controls.Primitives.PlotArea)" />
    <member name="M:NationalInstruments.Controls.PolarGraph.GetHitTestedPlotsWithRenderedInterpolation(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.PolarGraph.PrepareForData(System.Int32)" />
    <member name="M:NationalInstruments.Controls.PolarGraph.Zoom(System.Double)">
      <summary>
            Performs a zoom along the radius axis. 
            </summary>
      <param name="relativeRadiusFactor">The relative amount with which to modify the radius axis.</param>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.RelativeToScreen(System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.PolarGraph.ScreenToRelative(System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.PolarGraph.ContainsAxisCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the ContainsAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.ContainsPlotCore(NationalInstruments.Controls.Primitives.IPlot)">
      <summary>Implements the ContainsPlot method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.DataToRelativeCore(NationalInstruments.Controls.Primitives.IPlot,System.Collections.IList)">
      <summary>Implements the DataToRelative method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.DataToRelativeCore(NationalInstruments.Controls.Primitives.IScale,System.Object)">
      <summary>Implements the DataToRelative method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.RelativeToDataCore(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point)">
      <summary>Implements the RelativeToData method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.RelativeToDataCore(NationalInstruments.Controls.Primitives.IScale,System.Double)">
      <summary>Implements the RelativeToData method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.GetValueCore(NationalInstruments.Controls.Primitives.IPlotObserver,System.Int32)">
      <summary>Implements the GetValue method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.FindValuesCore(NationalInstruments.Controls.Primitives.IPlot,NationalInstruments.Controls.Primitives.IRange,NationalInstruments.Controls.Primitives.IRange,System.Boolean)">
      <summary>Implements the FindValues method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.FindNearestValueCore(NationalInstruments.Controls.Primitives.IPlotObserver,System.Windows.Point,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>Implements the FindNearestValue method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.FindNearestValuesCore(NationalInstruments.Controls.Primitives.IScale,System.Double,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>Implements the FindNearestValues method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.GetOrientationCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the GetOrientation method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.GetPlotsCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the GetPlots method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.GetDefaultAxisCore(System.Windows.Controls.Orientation)">
      <summary>Implements the GetDefaultAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.GetAxisCore(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Controls.Orientation)">
      <summary>Implements the GetAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.GetDefaultPlotCore">
      <summary>Implements the GetDefaultPlot method.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.PolarGraph.RadiusAxisProperty">
      <summary>
            Identifies the RadiusAxis dependency property.
            </summary>
      <returns>
            The identifier for the RadiusAxis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.PolarGraph.AngularAxisProperty">
      <summary>
            Identifies the AngularAxis dependency property.
            </summary>
      <returns>
            The identifier for the AngularAxis dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.PolarGraph.#ctor(NationalInstruments.Controls.Primitives.DataProcessorBase)">
      <summary>
      Initializes a new instance of the PolarGraph class with the specified data processor.
    </summary>
      <param name="dataProcessor">An object used to process data passed to the graph.</param>
    </member>
    <member name="P:NationalInstruments.Controls.PolarGraph.Plots">
      <summary>Gets the collection of plots in the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PolarGraph.AllPlots" />
    <member name="P:NationalInstruments.Controls.PolarGraph.AllScales" />
    <member name="P:NationalInstruments.Controls.PolarGraph.RadiusAxis">
      <summary>Gets or sets the radius axis for the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PolarGraph.AngularAxis">
      <summary>Gets or sets the angular axis for the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PolarGraph.DefaultPlotRenderers">
      <summary>Gets the collection of renderers to use by default, if a plot does not specify a renderer.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PolarGraph.GraphComponentManager">
      <summary>
            Gets or sets the PolarGraphComponentManager.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.PolarGraph.QueryableGraphHelper">
      <summary>
            Gets or sets the QueryableGraphPolarHelper.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.PolarGraph.PlotHitTestHelper">
      <summary>
            Gets or sets the RenderablePlotHitTestHelper.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.PolarPlot">
      <summary>Defines how a plot of data is displayed in a Polar graph.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarPlot.#ctor">
      <summary>Initializes a new instance of the PolarPlot class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarPlot.#ctor(System.Object)">
      <summary>Initializes a new instance of the PolarPlot class with the specified label.</summary>
      <param name="label">A label to describe the plot.</param>
    </member>
    <member name="M:NationalInstruments.Controls.PolarPlot.OnParentRegistered" />
    <member name="F:NationalInstruments.Controls.PolarPlot.AdjustRadiusScaleProperty">
      <summary>
            Identifies the AdjustRadiusScale dependency property.
            </summary>
      <returns>
            The identifier for the AdjustRadiusScale dependency property.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.PolarPlot.AdjustHorizontalScaleCore" />
    <member name="P:NationalInstruments.Controls.PolarPlot.AdjustVerticalScaleCore" />
    <member name="P:NationalInstruments.Controls.PolarPlot.AdjustRadiusScale">
      <summary>Gets or sets a value indicating whether plot data is used to adjust the radius scale.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.PolarPlotCollection">
      <summary>
            Represents a collection of PolarPlot objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PolarPlotCollection.#ctor">
      <summary>
            Initializes a new instance of the PolarPlotCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PolarPlotCollection.ChangeItemsCore(System.Int32,System.Int32,NationalInstruments.Controls.PolarPlot[])">
      <exception cref="T:System.ArgumentException">
            Any elements are null in newItems (parameter).
            </exception>
    </member>
    <member name="T:NationalInstruments.Controls.PolarRadiusAxis">
      <summary>
            Represents the radius axis on a Polar graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.#ctor">
      <summary>Initializes a new instance of the PolarRadiusAxis class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.#ctor(System.Object)">
      <summary>Initializes a new instance of the PolarRadiusAxis class with the specified label.</summary>
      <param name="label">A label to describe the axis.</param>
    </member>
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.GetDataMapper(System.Object)" />
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.Present(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.Present``1(NationalInstruments.Controls.Primitives.ScalePresenter,NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Boolean)" />
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.Clean(NationalInstruments.Controls.Primitives.ScalePresenter)">
      <summary>Implements the Clean method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.NationalInstruments#Controls#Primitives#IGraphChild#RegisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.RegisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.NationalInstruments#Controls#Primitives#IGraphChild#Initialize" />
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.Initialize">
      <summary>Implements the Initialize method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.NationalInstruments#Controls#Primitives#IGraphChild#UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.NationalInstruments#Controls#Primitives#IGraphChild#Uninitialize" />
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.Uninitialize">
      <summary>Implements the Uninitialize method.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.PolarRadiusAxis.RadiusProperty">
      <summary>
            Identifies the Radius dependency property.
            </summary>
      <returns>
            The identifier for the Radius dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.PolarRadiusAxis.AdjusterProperty">
      <summary>
            Identifies the Adjuster dependency property.
            </summary>
      <returns>
            The identifier for the Adjuster dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.PolarRadiusAxis.MajorGridLinesProperty">
      <summary>
            Identifies the MajorGridLines dependency property.
            </summary>
      <returns>
            The identifier for the MajorGridLines dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.PolarRadiusAxis.InteractionModeProperty">
      <summary>
            Identifies the InteractionMode dependency property.
            </summary>
      <returns>
            The identifier for the InteractionMode dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.PolarRadiusAxis.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.PolarRadiusAxis.Radius">
      <summary>Gets or sets the radius of the axis.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is NaN, PositiveInfinity, or less than or equal to zero.
</exception>
    </member>
    <member name="P:NationalInstruments.Controls.PolarRadiusAxis.Adjuster">
      <summary>
      Gets or sets the RangeAdjuster used to update Radius when data is received by the graph.
    </summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.PolarRadiusAxis.MajorGridLines">
      <summary>Gets or sets the major grid lines for the axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PolarRadiusAxis.InteractionMode">
      <summary>Gets or sets the interaction mode for the axis.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.GraphCollectionChangedEventArgs">
      <summary>
            Provides information for the DataChanged event
            on the IGraphDataCollection interface.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphCollectionChangedEventArgs.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the GraphCollectionChangedEventArgs with the specified count of changed elements.
            </summary>
      <param name="changedElementCount">The number of elements that have changed since the last event firing.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">changedElementCount (parameter) is less than zero.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphCollectionChangedEventArgs.ChangedElementCount">
      <summary>
            Gets the number of elements added to the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.WeakGraphEvent.CreateRenderableInvalidatedListener(System.EventHandler{NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs})">
      <summary>
            Adds a weak event listener to the Invalidated event.
            </summary>
      <param name="handler">The handler called when the event is raised.</param>
      <returns>
            An object representing the weak event registration, which can be used to register and unregister the event.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.WeakGraphEvent.CreateGraphComponentObserverChangeListener(System.EventHandler{NationalInstruments.Controls.Primitives.ObservedChangeEventArgs})">
      <summary>
            Adds a weak event listener to the Change event.
            </summary>
      <param name="handler">The handler called when the event is raised.</param>
      <returns>
            An object representing the weak event registration, which can be used to register and unregister the event.
            </returns>
    </member>
    <member name="T:NationalInstruments.Controls.Internal.WeakGraphEvent.RenderableInvalidatedEventManager">
      <summary>Weak event manager for the Invalidated event.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Internal.WeakGraphEvent.GraphComponentObserverChangeEventManager">
      <summary>Weak event manager for the Change event.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.DataCollection">
      <summary>
            Represents the collection of data sources that constitute the plotted data of a graph derived from GraphBase.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataCollection.ChangeItemsCore(System.Int32,System.Int32,System.Object[])" />
    <member name="P:NationalInstruments.Controls.Primitives.DataCollection.Item(System.Int32)">
      <exception cref="T:System.FormatException">The graph cannot process the given data.</exception>
      <exception cref="T:System.InvalidOperationException">
            The DataSource property is set on the parent graph.
            </exception>
    </member>
    <member name="T:NationalInstruments.Controls.Graph">
      <summary>
            Represents a graph control that displays data in a Cartesian coordinate system.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.#ctor">
      <summary>Initializes a new instance of the Graph class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.GetPlotAreaPosition(System.Windows.Input.MouseEventArgs)">
      <summary>
            Returns the position of the mouse click in relation to the plot area.
            </summary>
      <param name="e">
            The MouseButtonEventArgs that define the point that was clicked with the mouse.
            </param>
      <returns>
            Returns the point relative to the plot area of the graph.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.ZoomToFit(NationalInstruments.Controls.Plot)">
      <summary>
            Zooms the visible plot area to fit all available data on the given plot.
            </summary>
      <param name="plot">The plot on the graph that contains the data to zoom to.</param>
      <exception cref="T:System.ArgumentNullException">plot (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">plot (parameter) is not contained in the graph.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.ZoomToFit">
      <summary>
            Zooms the visible plot area to fit all available data on the graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.Zoom(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Zooms the visible plot area by the specified factors.
            </summary>
      <param name="relativeX">The pan factor in the horizontal direction.</param>
      <param name="relativeY">The pan factor in the vertical direction.</param>
      <param name="relativeWidth">The zoom factor in the horizontal direction.</param>
      <param name="relativeHeight">The zoom factor in the vertical direction.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.ZoomInOnPoint(System.Windows.Point)">
      <summary>
            Zooms in on a screen position by a factor of ZoomFactor.
            </summary>
      <param name="screenPoint">The screen position to center on.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.ZoomOutOnPoint(System.Windows.Point)">
      <summary>
            Zooms out on a screen position by a factor of ZoomFactor.
            </summary>
      <param name="screenPoint">The screen position to center on.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.Pan(System.Double,System.Double)">
      <summary>
            Pans the visible plot area by the specified factors.
            </summary>
      <param name="xFactor">The pan factor in the horizontal direction.</param>
      <param name="yFactor">The pan factor in the vertical direction.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.UndoZoomPan">
      <summary>
            Reverts the last zoom or pan operation.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.ResetZoomPan">
      <summary>
            Reverts all zoom and pan operations to restore the plot area to its initial state.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.GetXAxisAt(System.Windows.Point)">
      <summary>
            Searches for a horizontal axis on the graph at the given point.
            </summary>
      <param name="screenPosition">The screen position to check.</param>
      <returns>
            A horizontal ICartesianAxis instance, or null if an axis was not found.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.GetYAxisAt(System.Windows.Point)">
      <summary>
            Searches for a vertical axis on the graph at the specified point.
            </summary>
      <param name="screenPosition">The screen position to check.</param>
      <returns>
            A vertical ICartesianAxis instance, or null if an axis was not found.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.SearchAllAxesForScaleAtPoint(System.Windows.Point,System.Nullable{System.Windows.Controls.Orientation})" />
    <member name="M:NationalInstruments.Controls.Graph.GetHitTestedPlotsWithRenderedInterpolation(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Graph.PrepareForData(System.Int32)" />
    <member name="M:NationalInstruments.Controls.Graph.OnPlotAreaChanged(NationalInstruments.Controls.Primitives.PlotArea,NationalInstruments.Controls.Primitives.PlotArea)" />
    <member name="M:NationalInstruments.Controls.Graph.OnPlotAreaRedrawNeeded(System.Object,System.EventArgs)" />
    <member name="M:NationalInstruments.Controls.Graph.DataToRelativeCore(NationalInstruments.Controls.Primitives.IPlot,System.Collections.IList)">
      <summary>Implements the DataToRelative method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.DataToRelativeCore(NationalInstruments.Controls.Primitives.IScale,System.Object)">
      <summary>Implements the DataToRelative method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.RelativeToDataCore(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point)">
      <summary>Implements the RelativeToData method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.RelativeToDataCore(NationalInstruments.Controls.Primitives.IScale,System.Double)">
      <summary>Implements the RelativeToData method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.GetValueCore(NationalInstruments.Controls.Primitives.IPlotObserver,System.Int32)">
      <summary>Implements the GetValue method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.FindValuesCore(NationalInstruments.Controls.Primitives.IPlot,NationalInstruments.Controls.Primitives.IRange,NationalInstruments.Controls.Primitives.IRange,System.Boolean)">
      <summary>Implements the FindValues method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.FindNearestValueCore(NationalInstruments.Controls.Primitives.IPlotObserver,System.Windows.Point,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>Implements the FindNearestValue method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.FindNearestValuesCore(NationalInstruments.Controls.Primitives.IScale,System.Double,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>Implements the FindNearestValues method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.GetOrientationCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the GetOrientation method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.ContainsAxisCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the ContainsAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.ContainsScaleCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the ContainsScale method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.ContainsPlotCore(NationalInstruments.Controls.Primitives.IPlot)">
      <summary>Implements the ContainsPlot method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.GetPlotsCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the GetPlots method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.GetDefaultAxisCore(System.Windows.Controls.Orientation)">
      <summary>Implements the GetDefaultAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.GetAxisCore(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Controls.Orientation)">
      <summary>Implements the GetAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.GetDefaultPlotCore">
      <summary>Implements the GetDefaultPlot method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
    <member name="F:NationalInstruments.Controls.Graph.InteractionsProperty">
      <summary>
            Identifies the Interactions dependency property.
            </summary>
      <returns>
            The identifier for the Interactions dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.ZoomFactorProperty">
      <summary>
            Identifies the ZoomFactor dependency property.
            </summary>
      <returns>
            The identifier for the ZoomFactor dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.SuppressScaleLayoutProperty">
      <summary>
            Identifies the SuppressScaleLayout dependency property.
            </summary>
      <returns>
            The identifier for the SuppressScaleLayout dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.PreferIndexDataProperty">
      <summary>
            Identifies the PreferIndexData dependency property.
            </summary>
      <returns>
            The identifier for the PreferIndexData dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.DefaultInteractionProperty">
      <summary>
            Identifies the DefaultInteraction dependency property.
            </summary>
      <returns>
            The identifier for the DefaultInteraction dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.InteractionHistoryCountProperty">
      <summary>
            Identifies the InteractionHistoryCount dependency property.
            </summary>
      <returns>
            The identifier for the InteractionHistoryCount dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.PhosphorModeProperty">
      <summary>
            Identifies the PhosphorMode attached property.
            </summary>
      <returns>
            The identifier for the PhosphorMode attached property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.PhosphorColorRampProperty">
      <summary>
            Identifies the PhosphorColorRamp dependency property.
            </summary>
      <returns>
            The identifier for the PhosphorColorRamp dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.HorizontalScrollBarPositionProperty">
      <summary>
            Identifies the HorizontalScrollBarPosition dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalScrollBarPosition dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.VerticalScrollBarPositionProperty">
      <summary>
            Identifies the VerticalScrollBarPosition dependency property.
            </summary>
      <returns>
            The identifier for the VerticalScrollBarPosition dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.HorizontalScrollBarVisibilityProperty">
      <summary>
            Identifies the HorizontalScrollBarVisibility dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalScrollBarVisibility dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.VerticalScrollBarVisibilityProperty">
      <summary>
            Identifies the VerticalScrollBarVisibility dependency property.
            </summary>
      <returns>
            The identifier for the VerticalScrollBarVisibility dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Graph.ScrollBarStyleProperty">
      <summary>
            Identifies the ScrollBarStyle dependency property.
            </summary>
      <returns>
            The identifier for the ScrollBarStyle dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.#ctor(NationalInstruments.Controls.Primitives.DataProcessorBase)">
      <summary>
      Initializes a new instance of the Graph class with the specified data processor.
    </summary>
      <param name="dataProcessor">An object used to process data passed to the graph.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.OnApplyTemplate" />
    <member name="M:NationalInstruments.Controls.Graph.GetPhosphorMode(System.Windows.Media.SolidColorBrush)">
      <summary>
            Gets the value of the PhosphorMode attached property for a specified UIElement.
            </summary>
      <returns>
            The PhosphorMode property value for the element.
            </returns>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element from which the property value is read.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Graph.SetPhosphorMode(System.Windows.Media.SolidColorBrush,NationalInstruments.Controls.GraphPhosphorMode)">
      <summary>
            Sets the value of the PhosphorMode attached property to a specified element.
            </summary>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element to which the attached property is written.
            </param>
      <param name="value">
            The needed GraphPhosphorMode value.
            </param>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.Plots">
      <summary>Gets the collection of plots in the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.Axes">
      <summary>Gets the collection of axes in the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.AllPlots" />
    <member name="P:NationalInstruments.Controls.Graph.AllScales" />
    <member name="P:NationalInstruments.Controls.Graph.Interactions">
      <summary>Gets the collection of interactions that can be performed on the graph using modifier keys.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.ZoomFactor">
      <summary>Gets or sets the default zoom factor for zooming around a point in the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.SuppressScaleLayout">
      <summary>Gets or sets a value indicating whether the displayed scales should update independently of the WPF layout system.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.PreferIndexData">
      <summary>Gets or sets a value indicating whether index data is preferred for multi-sample data sources.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.DefaultPlotRenderers">
      <summary>Gets the collection of renderers to use by default, if a plot does not specify a renderer.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.GraphComponentManager">
      <summary>
            Gets or sets the CartesianGraphComponentManager.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.QueryableGraphHelper">
      <summary>
            Gets or sets the QueryableGraphCartesianHelper.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.DefaultInteraction">
      <summary>Gets or sets the default interaction mode for the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.InteractionHistoryCount">
      <summary>Gets or sets the number of interactions the graph logs.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.PhosphorColorRamp">
      <summary>Gets or sets the color ramp for the phosphor effect on the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.HorizontalScrollBarPosition">
      <summary>Gets or sets the relative position of the horizontal scroll bar.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.VerticalScrollBarPosition">
      <summary>Gets or sets the relative position of the vertical scroll bar.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.HorizontalScrollBarVisibility">
      <summary>Gets or sets the visibility of the horizontal scroll bar.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.VerticalScrollBarVisibility">
      <summary>Gets or sets the visibility of the vertical scroll bar.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.ScrollBarStyle">
      <summary>
      Gets or sets the Style applied to the horizontal and vertical scroll bars.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.Root">
      <summary>Gets the root layout panel for the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Graph.PlotHitTestHelper">
      <summary>
            Gets or sets the RenderablePlotHitTestHelper.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.RenderArea">
      <summary>
            Provides an abstract base class for the rendering area of a graph.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.RenderAreaBase">
      <summary>Represents an abstract base class for a surface that can display IRenderable objects.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderAreaBase.#ctor">
      <summary>Initializes a new instance of the RenderAreaBase class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderAreaBase.OnRenderModeChanged(NationalInstruments.Controls.RenderMode,NationalInstruments.Controls.RenderMode)">
      <summary>
            Called when the value of RenderMode changes.
            </summary>
      <param name="oldMode">The old value of RenderMode.</param>
      <param name="newMode">The new value of RenderMode.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.RenderAreaBase.RenderMode">
      <summary>
            Gets or sets the render mode of the render area.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">value (parameter) is not a valid RenderMode value.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderArea.#ctor">
      <summary>
            Initializes a new instance of the RenderArea class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderArea.CreateRasterRenderTargetArea">
      <summary>
            Creates a new IRasterRenderTarget on which to display raster data.
            </summary>
      <returns>
            A new IRasterRenderTarget object.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderArea.CreateVectorRenderTargetArea">
      <summary>
            Creates a new IVectorRenderTarget on which to display vector data.
            </summary>
      <returns>
            A new IVectorRenderTarget object.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderArea.Invalidate">
      <summary>
            Forces a re-rendering of all children.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.RenderArea.ToString" />
    <member name="M:NationalInstruments.Controls.Primitives.RenderArea.OnRenderModeChanged(NationalInstruments.Controls.RenderMode,NationalInstruments.Controls.RenderMode)" />
    <member name="M:NationalInstruments.Controls.Primitives.RenderArea.Redraw(System.Int32)">
      <summary>
            Redraws the child at the specified index.
            </summary>
      <param name="index">The index of the child to redraw.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.RenderArea.RendererCollection">
      <summary>Gets the collection of child objects to display in the render area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.RenderArea.RendererSynchronizer">
      <summary>
            Gets the synchronizer used to match render targets with renderable objects.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.RenderArea.RendererInvalidatedListener">
      <summary>
            Gets or sets a weak event listener for the plot renderer Invalidated event.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CartesianRenderArea.#ctor(System.Windows.Controls.Control)">
      <summary>
            Initializes a new instance of the CartesianRenderArea with the specified owner.
            </summary>
      <param name="owner">The owner of the plot area.</param>
      <exception cref="T:System.ArgumentNullException">owner (parameter) is null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CartesianRenderArea.CreateRasterRenderTargetArea">
      <summary>
            Creates a raster render target for displaying Cartesian data.
            </summary>
      <returns>
            An IRasterRenderTarget.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CartesianRenderArea.CreateVectorRenderTargetArea">
      <summary>
            Creates a vector render target for displaying Cartesian data.
            </summary>
      <returns>
            An IVectorRenderTarget.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.CartesianRenderArea.Owner">
      <summary>Gets the owner of the plot area.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.IWritableGraph">
      <summary>
            Represents a graph that supports interactive drawing of data.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IWritableGraph.GetWritableAxis(System.Int32,System.Windows.Controls.Orientation)">
      <summary>
            Gets the coordinate scale associated with the specified plot.
            </summary>
      <param name="plotIndex">The index of an input plot.</param>
      <param name="orientation">The orientation of the coordinate scale.</param>
      <returns>
            The orientation (parameter) coordinate scale associated with the plot at plotIndex (parameter) in the plots collection.
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid Orientation value.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IWritableGraph.GetInputPlot(System.Int32)">
      <summary>
            Returns the plot located at the provided index within the collection of plots.
            </summary>
      <param name="plotIndex">The index of the plot to retrieve.</param>
      <returns>The Plot located at plotIndex (parameter) within the collection of plots.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IWritableGraph.GetInputDataAt(System.Windows.Point)">
      <summary>
            Returns the input data closest to the provided screen position.
            </summary>
      <param name="screenPosition">The screen coordinate relative to the plot area.</param>
      <returns>
            The InputData closest to screenPosition (parameter),
            or null if InputData is empty.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.IWritableGraph.RefreshData(NationalInstruments.Controls.Data.InputData)">
      <summary>
            Refreshes the display of the specified input data.
            </summary>
      <param name="data">The data to refresh.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IWritableGraph.InputData">
      <summary>Gets the collection interactively drawn data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IWritableGraph.InputPlots">
      <summary>
            Gets the collection of input plots in the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IWritableGraph.AllInputPlots">
      <summary>
            Gets the collection of all input plots currently contained in the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.IWritableGraph.SelectedPlot">
      <summary>
            Gets or sets the input plot with data that a GraphEditInteraction should modify.
            </summary>
      <exception cref="T:System.InvalidOperationException">value (parameter) is not contained in InputPlots.
            </exception>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.PlotAreaMouseAction">
      <summary>
            Specifies a particular state of the mouse while over the plot area of a graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.PlotAreaMouseAction.None">
      <summary>Indicates the mouse has been released.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.PlotAreaMouseAction.Click">
      <summary>Indicates the left mouse button has been pressed in the plot area.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.PlotAreaMouseAction.Move">
      <summary>Indicates the mouse has moved while the left button was pressed.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.DataPlotArea">
      <summary>
            Represents the area of the graph where data is drawn.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.#ctor">
      <summary>
            Initializes a new instance of the DataPlotArea class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.CachePlotData(NationalInstruments.Controls.Primitives.IQueryableGraph,System.Collections.Generic.IDictionary{System.Int32,NationalInstruments.Controls.Rendering.RelativeDataCollection})">
      <summary>
            Saves the specified relative data for each renderable plot.
            </summary>
      <param name="graph">The parent graph control.</param>
      <param name="plotData">The relative data for each plot to draw.</param>
      <exception cref="T:System.ArgumentNullException">graph (parameter) is null.
              -or-

plotData (parameter) is null.

-or-plotData (parameter) is null.</exception>
      <exception cref="T:System.InvalidOperationException">graph (parameter) does not contain an IRenderablePlot for a plot index in plotData (parameter).
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.RenderPlotData">
      <summary>
            Renders the cached data in the plot area.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.ClearPlotData(System.Int32)">
      <summary>
            Clears the data of the plot at the specified index.
            </summary>
      <param name="plotIndex">The index of a plot in the parent graph.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.CreateVectorRenderTarget">
      <summary>
            Creates an IVectorRenderTarget.
            </summary>
      <returns>
            A new instance of an IVectorRenderTarget.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.CreateRasterRenderTarget">
      <summary>
            Creates an IRasterRenderTarget.
            </summary>
      <returns>
            A new instance of an IRasterRenderTarget.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.RemoveRenderTarget(NationalInstruments.Controls.Rendering.IRenderTarget)">
      <summary>
            Removes the specified render target from the data plot area.
            </summary>
      <param name="renderTarget">
            The IRenderTarget instance to remove.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.ClearRenderTargets">
      <summary>
            Clears all render targets in the data plot area.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.SetRasterRenderTargetVisibility(NationalInstruments.Controls.Rendering.IRasterRenderTarget,System.Windows.Visibility)">
      <summary>
            Shows or hides the specified raster render target.
            </summary>
      <param name="renderTarget">The render target to update.</param>
      <param name="visibility">The desired visibility of the render target.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.ClearRasterRenderTarget(NationalInstruments.Controls.Rendering.IRasterRenderTarget)">
      <summary>
            Clears the specified raster render target.
            </summary>
      <param name="renderTarget">The render target to update.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.OnRenderModeChanged(NationalInstruments.Controls.RenderMode,NationalInstruments.Controls.RenderMode)" />
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.CallCreateVectorTarget">
      <summary>----[Internal for testing]----</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.DataPlotArea.PhosphorColorRampProperty">
      <summary>
            Identifies the PhosphorColorRamp dependency property.
            </summary>
      <returns>
            The identifier for the PhosphorColorRamp dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataPlotArea.OnRedrawNeeded(System.EventArgs)">
      <summary>
            Raises the RedrawNeeded event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of EventArgs that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.DataPlotArea.CachedPlotRenderArgs">
      <summary>
            Gets the collection of render args from the last render call.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.DataPlotArea.ActualRenderMode">
      <summary>
            Gets the actual render mode of the data plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.DataPlotArea.PhosphorColorRamp">
      <summary>Gets or sets the color ramp to use for graph phosphor.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.DataPlotArea.DispatcherTimerTickListener">
      <summary>
            Gets or sets a weak event listener for the Tick event.
            </summary>
    </member>
    <member name="E:NationalInstruments.Controls.Primitives.DataPlotArea.RedrawNeeded">
      <summary>Occurs when the plot area needs to be redrawn.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PolarDataPlotArea.#ctor(System.Windows.Controls.Control)">
      <summary>Initializes a new instance of the PolarDataPlotArea class with the specified owner.</summary>
      <param name="owner">The owner of the data plot area.</param>
      <exception cref="T:System.ArgumentNullException">owner (parameter) is null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PolarDataPlotArea.CreateVectorRenderTarget" />
    <member name="M:NationalInstruments.Controls.Primitives.PolarDataPlotArea.CreateRasterRenderTarget" />
    <member name="M:NationalInstruments.Controls.Primitives.PolarDataPlotArea.RemoveRenderTarget(NationalInstruments.Controls.Rendering.IRenderTarget)" />
    <member name="M:NationalInstruments.Controls.Primitives.PolarDataPlotArea.ClearRenderTargets" />
    <member name="M:NationalInstruments.Controls.Primitives.PolarDataPlotArea.ClearRasterRenderTarget(NationalInstruments.Controls.Rendering.IRasterRenderTarget)">
      <summary>
            Clears the specified raster render target.
            </summary>
      <param name="renderTarget">
            The render target to update.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PolarDataPlotArea.SetRasterRenderTargetVisibility(NationalInstruments.Controls.Rendering.IRasterRenderTarget,System.Windows.Visibility)">
      <summary>
            Shows or hides the specified raster render target.
            </summary>
      <param name="renderTarget">The render target to update.</param>
      <param name="visibility">The visibility of the render target.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PolarDataPlotArea.Owner">
      <summary>Gets the owner of the data plot area.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PolarRenderArea.#ctor(System.Windows.Controls.Control)">
      <summary>
            Initializes a new instance of the PolarRenderArea class with the specified owner.
            </summary>
      <param name="owner">The owner of the plot area.</param>
      <exception cref="T:System.ArgumentNullException">owner (parameter) is null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PolarRenderArea.CreateRasterRenderTargetArea">
      <summary>
            Creates a raster render target for displaying polar data.
            </summary>
      <returns>
            An IRasterRenderTarget.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PolarRenderArea.CreateVectorRenderTargetArea">
      <summary>
            Creates a vector render target for displaying polar data.
            </summary>
      <returns>
            An IVectorRenderTarget.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.PolarRenderArea.Owner">
      <summary>Gets the owner of the plot area.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Internal.PolarRenderTarget">
      <summary>
            Provides a logical surface on which to render vector or raster data or other visual elements.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.IVectorRenderTarget">
      <summary>
            Represents an IRenderTarget that uses UI elements to perform draw operations.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.IRenderTarget">
      <summary>
            Represents a drawing surface that can be used by an IRenderable object to perform rendering.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderTarget.DrawLine(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Point,System.Windows.Point)">
      <summary>
            Draws a line between two relative coordinates.
            </summary>
      <param name="options">The visual settings used in the draw operation.</param>
      <param name="relativeStart">The starting position of the line, in relative coordinates.</param>
      <param name="relativeEnd">The ending position of the line, in relative coordinates.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderTarget.DrawLines(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double})">
      <summary>
            Draws a set of lines with the given relative coordinates.
            </summary>
      <param name="options">The visual settings used in the draw operation.</param>
      <param name="xRelativeValues">The horizontal positions for each point in the line, in relative coordinates.</param>
      <param name="yRelativeValues">The vertical positions for each point in the line, in relative coordinates.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderTarget.DrawConstantLine(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Controls.Orientation,System.Double)">
      <summary>
            Draws a line at the specified relative value that follows the contour of the drawing surface across its entire length.
            </summary>
      <param name="options">The visual settings used in the draw operation.</param>
      <param name="orientation">The orientation of the constant line.</param>
      <param name="relativeValue">The relative value where the constant line is drawn.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderTarget.DrawConstantLine(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Controls.Orientation,System.Windows.Point,System.Double,System.Double,System.Double)">
      <summary>
            Draws a line at the specified relative value that follows the contour of the drawing surface across the specified length.
            </summary>
      <param name="options">The visual settings used in the draw operation.</param>
      <param name="orientation">The orientation of the constant line.</param>
      <param name="relativeStart">The starting position of the line, in relative coordinates.</param>
      <param name="relativeLength">The length of the line, in relative coordinates.</param>
      <param name="startScreenOffset">The offset from relativeStart (parameter) to begin drawing, in screen pixels.</param>
      <param name="endScreenOffset">The offset from relativeLength (parameter) to end drawing, in screen pixels.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderTarget.DrawShape(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Point,NationalInstruments.Controls.PointShape,System.Windows.Size)">
      <summary>
            Draws a shape at the specified relative position.
            </summary>
      <param name="options">The visual settings used in the draw operation.</param>
      <param name="relativePosition">The position of the shape, in relative coordinates.</param>
      <param name="shape">The shape to draw.</param>
      <param name="screenSize">The size of the shape, in screen pixels.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderTarget.DrawShapes(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.Controls.PointShape,System.Windows.Size)">
      <summary>
            Draws a set of shapes at the specified relative positions.
            </summary>
      <param name="options">The visual settings used in the draw operation.</param>
      <param name="xRelativeValues">The horizontal positions for each shape, in relative coordinates.</param>
      <param name="yRelativeValues">The vertical positions for each shape, in relative coordinates.</param>
      <param name="shape">The shape to draw.</param>
      <param name="screenSize">The size of the shape, in screen pixels.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderTarget.DrawArea(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double})">
      <summary>
            Draws a filled area with the given relative coordinates.
            </summary>
      <param name="options">The visual settings used in the draw operation.</param>
      <param name="xRelativeValues">The horizontal positions for each point in the outline of the area, in relative coordinates.</param>
      <param name="yRelativeValues">The vertical positions for each point in the outline of the area, in relative coordinates.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderTarget.RelativeToScreen(System.Windows.Point)">
      <summary>
            Converts a relative position to a screen position on the render surface.
            </summary>
      <param name="relativePosition">A relative position.</param>
      <returns>A Point object representing the screen position of relativePosition (parameter).</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRenderTarget.ScreenToRelative(System.Windows.Point)">
      <summary>
            Converts a screen position to a relative position on the render surface.
            </summary>
      <param name="screenPosition">A screen position.</param>
      <returns>A Point object representing the relative position of screenPosition (parameter).</returns>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.IRenderTarget.Owner">
      <summary>
            Gets the control that owns the render target instance.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IVectorRenderTarget.AddUIElement(System.Windows.UIElement)">
      <summary>
            Adds a UIElement to the visual tree.
            </summary>
      <param name="element">The element to display.</param>
    </member>
    <member name="F:NationalInstruments.Controls.Internal.VectorRenderTargetBase.RendererProperty">
      <summary>
            Identifies the Renderer attached property.
            </summary>
      <returns>
            The identifier for the Renderer attached property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Internal.VectorRenderTargetBase.PlotProperty">
      <summary>
            Identifies the Plot attached property.
            </summary>
      <returns>
            The identifier for the Plot attached property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.#ctor(NationalInstruments.Controls.Primitives.NotifyingCollection{System.Windows.UIElement},NationalInstruments.Controls.Internal.IRenderTargetOwner)">
      <summary>
            Initializes a new instance of the VectorRenderTargetBase class with the specified renderedContent and targetOwner.
            </summary>
      <exception cref="T:System.ArgumentNullException">targetOwner (parameter) is null.
            </exception>
      <param name="renderedContent">
            The rendered UIElements.
            </param>
      <param name="targetOwner">
            The parent control that owns the render target.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.GetRenderer(System.Windows.UIElement)">
      <summary>
            Gets the value of the Renderer attached property for a specified UIElement.
            </summary>
      <returns>
            The Renderer property value for the element.
            </returns>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element from which the property value is read.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.SetRenderer(System.Windows.UIElement,NationalInstruments.Controls.Rendering.IRenderable)">
      <summary>
            Sets the value of the Renderer attached property to a specified element.
            </summary>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element to which the attached property is written.
            </param>
      <param name="value">
            The needed IRenderable value.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.GetPlot(System.Windows.UIElement)">
      <summary>
            Gets the value of the Plot attached property for a specified UIElement.
            </summary>
      <returns>
            The Plot property value for the element.
            </returns>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element from which the property value is read.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.SetPlot(System.Windows.UIElement,NationalInstruments.Controls.Primitives.IPlot)">
      <summary>
            Sets the value of the Plot attached property to a specified element.
            </summary>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element to which the attached property is written.
            </param>
      <param name="value">
            The needed IPlot value.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.AddUIElement(System.Windows.UIElement)" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.DrawLine(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Point,System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.DrawArea(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double})" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.DrawLines(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double})" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.DrawConstantLine(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Controls.Orientation,System.Double)" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.DrawConstantLine(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Controls.Orientation,System.Windows.Point,System.Double,System.Double,System.Double)" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.DrawShape(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Point,NationalInstruments.Controls.PointShape,System.Windows.Size)" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.DrawShapes(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.Controls.PointShape,System.Windows.Size)" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.ScreenToRelative(System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.RelativeToScreen(System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.NationalInstruments#Controls#Internal#IDeferredRenderTarget#BeginDraw" />
    <member name="M:NationalInstruments.Controls.Internal.VectorRenderTargetBase.NationalInstruments#Controls#Internal#IDeferredRenderTarget#EndDraw" />
    <member name="P:NationalInstruments.Controls.Internal.VectorRenderTargetBase.RenderedContent">
      <summary>
            Gets the rendered UIElements.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.VectorRenderTargetBase.TargetOwner">
      <summary>
            Gets the parent control that owns the render target.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.VectorRenderTargetBase.NationalInstruments#Controls#Internal#IDeferredRenderTarget#CanDraw" />
    <member name="T:NationalInstruments.Controls.PlotsToSearch">
      <summary>
            Specifies the plots to conduct a search over.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.PlotsToSearch.Any">
      <summary>Indicates all plots are searched.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.PlotsToSearch.Single">
      <summary>Indicates only the starting plot is searched.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.RangeAnnotation">
      <summary>Represents an annotation that highlights a range in a graph.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.RangeAnnotation.#ctor">
      <summary>
            Initializes a new instance of the RangeAnnotation class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.RangeAnnotation.GetTargetRelativePosition" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.GetArrowHeadRelativePosition" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.RenderGraphCore(NationalInstruments.Controls.Rendering.RenderArgs)" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.OnDragMoveCore(System.Windows.Point,System.Object)" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.OnDragCompleteCore" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.OnParentRegistered" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.OnParentUnregistered(NationalInstruments.Controls.Primitives.IQueryableGraph)" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.OnHorizontalAxisChanged(NationalInstruments.Controls.Primitives.IScale,NationalInstruments.Controls.Primitives.IScale)" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.OnVerticalAxisChanged(NationalInstruments.Controls.Primitives.IScale,NationalInstruments.Controls.Primitives.IScale)" />
    <member name="M:NationalInstruments.Controls.RangeAnnotation.OnArrowHeadSizeChanged(System.Windows.Size,System.Windows.Size)" />
    <member name="F:NationalInstruments.Controls.RangeAnnotation.HorizontalRangeProperty">
      <summary>
            Identifies the HorizontalRange dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalRange dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeAnnotation.VerticalRangeProperty">
      <summary>
            Identifies the VerticalRange dependency property.
            </summary>
      <returns>
            The identifier for the VerticalRange dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeAnnotation.ArrowHeadAlignmentProperty">
      <summary>
            Identifies the ArrowHeadAlignment dependency property.
            </summary>
      <returns>
            The identifier for the ArrowHeadAlignment dependency property.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.RangeAnnotation.HorizontalRange">
      <summary>Gets or sets the location of the annotation along the horizontal axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeAnnotation.VerticalRange">
      <summary>Gets or sets the location of the annotation along the vertical axis.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeAnnotation.ArrowHeadAlignment">
      <summary>Gets or sets the alignment of the arrow head with respect to the data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeAnnotation.ActualHorizontalAxis">
      <summary>
            Gets or sets the scale used for mapping horizontal values.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeAnnotation.ActualVerticalAxis">
      <summary>
            Gets or sets the scale used for mapping vertical values.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeAnnotation.TargetOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for rendering the annotation target.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.RangeCursor">
      <summary>Represents a cursor that is associated with a range of values along axes in a graph.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.HorizontalAxisProperty">
      <summary>
            Identifies the HorizontalAxis dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalAxis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.VerticalAxisProperty">
      <summary>
            Identifies the VerticalAxis dependency property.
            </summary>
      <returns>
            The identifier for the VerticalAxis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.HorizontalRangeProperty">
      <summary>
            Identifies the HorizontalRange dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalRange dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.VerticalRangeProperty">
      <summary>
            Identifies the VerticalRange dependency property.
            </summary>
      <returns>
            The identifier for the VerticalRange dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.IsFillHitTestVisibleProperty">
      <summary>
            Identifies the IsFillHitTestVisible dependency property.
            </summary>
      <returns>
            The identifier for the IsFillHitTestVisible dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.FillBrushProperty">
      <summary>
            Identifies the FillBrush dependency property.
            </summary>
      <returns>
            The identifier for the FillBrush dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.ActualHorizontalAxisProperty">
      <summary>
            Identifies the ActualHorizontalAxis dependency property.
            </summary>
      <returns>
            The identifier for the ActualHorizontalAxis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.ActualVerticalAxisProperty">
      <summary>
            Identifies the ActualVerticalAxis dependency property.
            </summary>
      <returns>
            The identifier for the ActualVerticalAxis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.ActualHorizontalRangeProperty">
      <summary>
            Identifies the ActualHorizontalRange dependency property.
            </summary>
      <returns>
            The identifier for the ActualHorizontalRange dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.RangeCursor.ActualVerticalRangeProperty">
      <summary>
            Identifies the ActualVerticalRange dependency property.
            </summary>
      <returns>
            The identifier for the ActualVerticalRange dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.#ctor">
      <summary>
            Initializes a new instance of the RangeCursor class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.RetrieveValues(NationalInstruments.Controls.Primitives.IPlot)">
      <summary>
            Gets all values in the specified plot within the range of the cursor.
            </summary>
      <param name="plot">The plot to examine.</param>
      <returns>
            All values in the specified plot within the range of the cursor.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.GetRelativeHorizontalRange">
      <summary>Gets the relative position of the cursor on the horizontal axis.</summary>
      <returns>The relative position of the cursor on HorizontalAxis.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.GetRelativeVerticalRange">
      <summary>Gets the relative position of the cursor on the vertical axis.</summary>
      <returns>The relative position of the cursor on VerticalAxis.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.SetRelativeHorizontalRange(NationalInstruments.Controls.Range{System.Double})">
      <summary>Sets the relative horizontal range covered by the cursor.</summary>
      <param name="range">A relative range.</param>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.SetRelativeVerticalRange(NationalInstruments.Controls.Range{System.Double})">
      <summary>Sets the relative vertical range covered by the cursor.</summary>
      <param name="range">A relative range.</param>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.SetRelativeRanges(NationalInstruments.Controls.Range{System.Double},NationalInstruments.Controls.Range{System.Double})">
      <summary>Sets the relative horizontal and vertical range covered by the cursor.</summary>
      <param name="horizontalRange">A relative range.</param>
      <param name="verticalRange">A relative range.</param>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.GetScreenMinimumPosition">
      <summary>
            Gets the screen position of the cursor at the minimum of the range.
            </summary>
      <returns>
            The screen position of the cursor at the minimum of the range.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.GetScreenMaximumPosition">
      <summary>
            Gets the screen position of the cursor at the maximum of the range.
            </summary>
      <returns>
            The screen position of the cursor at the maximum of the range.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.SetScreenRange(System.Windows.Point,System.Windows.Point)">
      <summary>
            Sets the screen range of the cursor to the specified range, or on the nearest data points in the graph.
            </summary>
      <param name="minimum">The minimum range to move the cursor to.</param>
      <param name="maximum">The maximum range to move the cursor to.</param>
    </member>
    <member name="M:NationalInstruments.Controls.RangeCursor.OnParentRegistered" />
    <member name="M:NationalInstruments.Controls.RangeCursor.OnParentUnregistered(NationalInstruments.Controls.Primitives.IQueryableGraph)" />
    <member name="M:NationalInstruments.Controls.RangeCursor.RenderGraphCore(NationalInstruments.Controls.Rendering.RenderArgs)" />
    <member name="M:NationalInstruments.Controls.RangeCursor.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.RangeCursor.OnSnapToDataChangedCore" />
    <member name="M:NationalInstruments.Controls.RangeCursor.GetCursorDragStartScreenPosition(System.Windows.Point,System.Object)" />
    <member name="M:NationalInstruments.Controls.RangeCursor.OnDragMoveCore(System.Windows.Point,System.Object)" />
    <member name="P:NationalInstruments.Controls.RangeCursor.ActualHorizontalAxis">
      <summary>Gets the current horizontal axis the cursor is associated with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.ActualVerticalAxis">
      <summary>Gets the current vertical axis the cursor is associated with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.ActualHorizontalRange">
      <summary>Gets the current horizontal range the cursor is associated with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.ActualVerticalRange">
      <summary>Gets the current vertical range the cursor is associated with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.HorizontalAxis">
      <summary>Gets or sets the desired horizontal axis to associate the cursor with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.VerticalAxis">
      <summary>Gets or sets the desired vertical axis to associate the cursor with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.HorizontalRange">
      <summary>Gets or sets the desired horizontal range to associate the cursor with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.VerticalRange">
      <summary>Gets or sets the desired vertical range to associate the cursor with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.IsFillHitTestVisible">
      <summary>Gets or sets whether the filled area is hit test visible.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.FillBrush">
      <summary>Gets or sets the brush used for the fill.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.DisplayOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for graph and legend rendering.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.MouseFillOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for fill mouse handling.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.MouseTopOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for top mouse handling.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.MouseBottomOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for bottom mouse handling.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.MouseLeftOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for left mouse handling.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.RangeCursor.MouseRightOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for right mouse handling.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs">
      <summary>
            Provides data for the Invalidated event.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs.ToString" />
    <member name="P:NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs.VisualChange">
      <summary>Gets an instance representing a VisualChange invalidation reason.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs.PositionalChange">
      <summary>Gets an instance representing a PositionalChange invalidation reason.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs.VisualAndPositionalChange">
      <summary>Gets an instance representing a VisualAndPositionalChange invalidation reason.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs.Reasons">
      <summary>Gets the reason for raising the Invalidated event.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.LegendRenderArgs">
      <summary>Provides information used to render an IRenderable object in a legend.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.LegendRenderArgs.ToString" />
    <member name="M:NationalInstruments.Controls.Rendering.LegendRenderArgs.#ctor(NationalInstruments.Controls.Rendering.IRenderTarget,System.Windows.Size)">
      <summary>
Initializes a new instance of the LegendRenderArgs class
with the specified render target and glyph size.
</summary>
      <param name="renderTarget">The surface to render to.</param>
      <param name="glyphSize">The size of the legend glyph.</param>
      <exception cref="T:System.ArgumentNullException">renderTarget (parameter) is null.</exception>
      <exception cref="T:System.ArgumentException">IRenderTarget does not implement IVectorRenderTarget or IRasterRenderTarget.-or-glyphSize (parameter) is empty.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LegendRenderArgs.GlyphSize">
      <summary>Gets the size of the legend glyph.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.RenderInvalidatedReasons">
      <summary>
            Specifies the reasons that an Invalidated was raised.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderInvalidatedReasons.VisualChange">
      <summary>Indicates invalidation was caused by a change in appearance.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderInvalidatedReasons.PositionalChange">
      <summary>Indicates invalidation was caused by a change of position only (the appearance has not changed).</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderInvalidatedReasons.VisualAndPositionalChange">
      <summary>Indicates invalidation was caused by a change in both appearance and position.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent">
      <summary>
            Specifies the events that can be set in RenderTargetOptions.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent.RegisterEventHandler(System.Windows.Shapes.Shape,System.EventHandler)">
      <summary>Registers a handler for the event represented by the object on the specified shape.</summary>
      <param name="shape">The source of the event.</param>
      <param name="handler">The handler to call when the event is raised.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent.UnregisterEventHandler(System.Windows.Shapes.Shape,System.EventHandler)">
      <summary>Unregisters a handler from the event represented by the object on the specified shape.</summary>
      <param name="shape">The shape passed to RegisterEventHandler.</param>
      <param name="handler">The handler passed to RegisterEventHandler.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent.LostMouseCapture">
      <summary>
      Gets a value representing the LostMouseCapture event.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent.MouseEnter">
      <summary>
      Gets a value representing the MouseEnter event.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent.MouseLeave">
      <summary>
      Gets a value representing the MouseLeave event.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent.MouseLeftButtonDown">
      <summary>
      Gets a value representing the MouseLeftButtonDown event.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent.MouseLeftButtonUp">
      <summary>
      Gets a value representing the MouseLeftButtonUp event.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent.MouseMove">
      <summary>
      Gets a value representing the MouseMove event.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsEvent.UnderlyingType" />
    <member name="T:NationalInstruments.Controls.AxisDateTime">
      <summary>
            Represents an Axis&lt;T&gt; of type DateTime.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.WritableGraph">
      <summary>
            Represents a graph that allows data to be drawn interactively in the graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.WritableGraph.#ctor">
      <summary>
            Initializes a new instance of the WritableGraph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.WritableGraph.GetWritableAxis(System.Int32,System.Windows.Controls.Orientation)" />
    <member name="M:NationalInstruments.Controls.WritableGraph.GetInputPlot(System.Int32)" />
    <member name="M:NationalInstruments.Controls.WritableGraph.GetInputDataAt(System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.WritableGraph.RefreshData(NationalInstruments.Controls.Data.InputData)">
      <summary>
            Forces the specified input data to be rendered, if that input data exists in the graph.
            </summary>
      <param name="data">The input data to render.</param>
    </member>
    <member name="M:NationalInstruments.Controls.WritableGraph.#ctor(NationalInstruments.Controls.Primitives.DataProcessorBase)">
      <summary>
      Initializes a new instance of the WritableGraph class.
    </summary>
      <param name="dataProcessor">An object used to process data passed to the graph.</param>
    </member>
    <member name="M:NationalInstruments.Controls.WritableGraph.OnApplyTemplate" />
    <member name="M:NationalInstruments.Controls.WritableGraph.OnInputDataChanged(System.EventArgs)">
      <summary>
            Raises the InputDataChanged event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of EventArgs that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.Controls.WritableGraph.InputPlots" />
    <member name="P:NationalInstruments.Controls.WritableGraph.AllInputPlots" />
    <member name="P:NationalInstruments.Controls.WritableGraph.SelectedPlot" />
    <member name="P:NationalInstruments.Controls.WritableGraph.InputData">
      <summary>Gets the collection of data that is generated through edit interactions.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.WritableGraph.Target">
      <summary>
            Gets or sets the target for the component manager and input data processor.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.WritableGraph.InputDataProcessor">
      <summary>
            Gets or sets the target for the input data processor.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.WritableGraph.WritableGraphComponentManager">
      <summary>
            Gets or sets the WritableGraphComponentManager.
            </summary>
    </member>
    <member name="E:NationalInstruments.Controls.WritableGraph.InputDataChanged">
      <summary>
      Occurs when InputData has changed.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.WritableGraph.InputPlotArea">
      <summary>Gets the plot area template part for input data.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.GraphLayerPosition">
      <summary>
            Specifies the visual layer of a graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.GraphLayerPosition.BelowPlots">
      <summary>
            Indicates the layer below the plotted data.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.GraphLayerPosition.AbovePlots">
      <summary>
            Indicates the layer above the plotted data.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Plot">
      <summary>
            Defines how a plot of data is scaled and displayed in a Cartesian graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Plot.#ctor">
      <summary>Initializes a new instance of the Plot class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Plot.#ctor(System.Object)">
      <summary>Initializes a new instance of the Plot class with the specified label.</summary>
      <param name="label">A label to describe the plot.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Plot.ToString" />
    <member name="F:NationalInstruments.Controls.Plot.HorizontalScaleProperty">
      <summary>
            Identifies the HorizontalScale dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalScale dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Plot.VerticalScaleProperty">
      <summary>
            Identifies the VerticalScale dependency property.
            </summary>
      <returns>
            The identifier for the VerticalScale dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Plot.AdjustHorizontalScaleProperty">
      <summary>
            Identifies the AdjustHorizontalScale dependency property.
            </summary>
      <returns>
            The identifier for the AdjustHorizontalScale dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Plot.AdjustVerticalScaleProperty">
      <summary>
            Identifies the AdjustVerticalScale dependency property.
            </summary>
      <returns>
            The identifier for the AdjustVerticalScale dependency property.
            </returns>
    </member>
    <member name="P:NationalInstruments.Controls.Plot.AdjustVerticalScaleCore" />
    <member name="P:NationalInstruments.Controls.Plot.AdjustHorizontalScaleCore" />
    <member name="P:NationalInstruments.Controls.Plot.HorizontalScale">
      <summary>Gets or sets the horizontal scale associated with the plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Plot.VerticalScale">
      <summary>Gets or sets the vertical scale associated with the plot.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Plot.AdjustHorizontalScale">
      <summary>Gets or sets a value indicating whether plot data is used to adjust the horizontal scale.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Plot.AdjustVerticalScale">
      <summary>Gets or sets a value indicating whether plot data is used to adjust the vertical scale.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.SearchDirections">
      <summary>
            Specifies the search directions for GraphQueryArgs.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.SearchDirections.None">
      <summary>
            No direction.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.SearchDirections.Forward">
      <summary>
            The forward direction only.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.SearchDirections.Reverse">
      <summary>
            The reverse direction only.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.SearchDirections.ForwardAndReverse">
      <summary>
            Both forward and reverse directions.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.DataProcessedEventArgs">
      <summary>
            Provides the information related to the DataProcessed event.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.DataProcessedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
            Initializes a new instance of the DataProcessedEventArgs class with the specified updated plots.
            </summary>
      <param name="updatedPlots">The indices of all plots that are modified due to data being processed.</param>
      <exception cref="T:System.ArgumentNullException">updatedPlots (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">updatedPlots (parameter) is empty.
            </exception>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.DataProcessedEventArgs.UpdatedPlots">
      <summary>
            Gets the collection of plots that have updated data.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.GraphQueryArgs">
      <summary>
            Provides the settings used when querying a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphQueryArgs.#ctor(NationalInstruments.Controls.PlotsToSearch,NationalInstruments.Controls.Primitives.SearchDimensions,NationalInstruments.Controls.Primitives.SearchDirections,System.Boolean)">
      <summary>
      Initializes a new instance of the GraphQueryArgs with the specified plots, dimension, direction, and inclusion.
    </summary>
      <param name="plots">The plots to search.</param>
      <param name="dimension">The dimensions of graph data to search.</param>
      <param name="direction">The direction to search.</param>
      <param name="isInclusive">A value indicating whether the starting position is included in the search.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">plots (parameter) is not a valid PlotsToSearch value.-or-dimension (parameter) is not a valid SearchDimensions value.-or-direction (parameter) is not a valid SearchDirections value.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphQueryArgs.Plots">
      <summary>Gets the plots to search.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphQueryArgs.Dimension">
      <summary>Gets the dimensions of graph data to search.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphQueryArgs.Direction">
      <summary>Gets whether to search forwards or backwards from a starting data position.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphQueryArgs.IsInclusive">
      <summary>Gets a value indicating whether the starting position is included in the search.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.PlotValue">
      <summary>
            Represents a raw data value from a plot in a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.PlotValue.GetRelativePosition">
      <summary>
            Gets the relative position of the raw data value.
            </summary>
      <returns>
            A Point that is the relative position of Value in Graph.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.PlotValue.#ctor(NationalInstruments.Controls.Primitives.IPlotObserver,System.Collections.IList,System.Int32)">
      <summary>
      Initializes a new instance of the PlotValue class with the specified observer, value, and index.
    </summary>
      <param name="plotObserver">An observer for the plot that owns the data value.</param>
      <param name="value">The raw data dimension values.</param>
      <param name="valueIndex">The index of the data value in the plot.</param>
      <exception cref="T:System.ArgumentException">plotObserver (parameter) is not valid.-or-plotObserver (parameter) is not in a queryable graph.</exception>
      <exception cref="T:System.ArgumentNullException">plotObserver (parameter) is null.
      -or-value (parameter) is null.
      </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">valueIndex (parameter) is less than zero.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.PlotValue.Graph">
      <summary>
            Gets the graph that contains the data value.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.PlotValue.PlotObserver">
      <summary>Gets an observer for the plot that owns the data value.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PlotValue.Value">
      <summary>Gets the dimensions of raw data values.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.PlotValue.ValueIndex">
      <summary>Gets the index of the data value in the plot.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.SearchDimensions">
      <summary>
            Specifies the direction of a search dimension.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.SearchDimensions.None">
      <summary>
            Neither dimension.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.SearchDimensions.Horizontal">
      <summary>
            The horizontal dimension only.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.SearchDimensions.Vertical">
      <summary>
            The vertical dimension only.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Primitives.SearchDimensions.HorizontalAndVertical">
      <summary>
            Both horizontal and vertical dimensions.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty">
      <summary>
            Specifies the shape properties that can be set in RenderTargetOptions.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.Cursor">
      <summary>Indicates an assignment to the Cursor property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.Fill">
      <summary>Indicates an assignment to the Fill property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.IsHitTestVisible">
      <summary>Indicates an assignment to the IsHitTestVisible property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.Stroke">
      <summary>Indicates an assignment to the Stroke property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.StrokeDashArray">
      <summary>Indicates an assignment to the StrokeDashArray property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.StrokeDashCap">
      <summary>Indicates an assignment to the StrokeDashCap property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.StrokeDashOffset">
      <summary>Indicates an assignment to the StrokeDashOffset property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.StrokeEndLineCap">
      <summary>Indicates an assignment to the StrokeEndLineCap property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.StrokeLineJoin">
      <summary>Indicates an assignment to the StrokeLineJoin property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.StrokeMiterLimit">
      <summary>Indicates an assignment to the StrokeMiterLimit property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.StrokeStartLineCap">
      <summary>Indicates an assignment to the StrokeStartLineCap property.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty.StrokeThickness">
      <summary>Indicates an assignment to the StrokeThickness property.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting">
      <summary>
            Specifies the settings that can be set in RenderTargetOptions.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting.IsValid(System.Object)">
      <summary>
            Determines whether the specified value can be used for the setting.
            </summary>
      <param name="value">A setting value.</param>
      <returns>true if value (parameter) can be used to assign the setting; otherwise, false.</returns>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting.FillRule">
      <summary>Gets an object representing the FillRule setting.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting.IsClosed">
      <summary>Gets an object representing the IsClosed setting.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting.EnableHitTesting">
      <summary>Gets an object representing the hit testing setting.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting.ZIndex">
      <summary>Gets an object representing the ZIndex setting.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting.UnderlyingType" />
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting.DefaultValue">
      <summary>Gets the default value for the setting.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.RenderMode">
      <summary>
            Specifies how plot visuals are drawn within a graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.RenderMode.Auto">
      <summary>Indicates the graph automatically adjusts how plot visuals are drawn.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.RenderMode.Raster">
      <summary>Indicates the graph displays plot visuals via raster rendering to a bitmap.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.RenderMode.Vector">
      <summary>Indicates the graph displays plot visuals via vector rendering to UI objects.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.IRasterRenderTarget">
      <summary>
            Represents an IRenderTarget that uses a pixel buffer to perform draw operations.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRasterRenderTarget.DrawRectangle(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a solid color rectangle covering the specified area.</summary>
      <param name="options">The visual settings used in the draw operation.</param>
      <param name="left">The left position of the rectangle, in screen pixels.</param>
      <param name="top">The top position of the rectangle, in screen pixels.</param>
      <param name="width">The width of the rectangle, in screen pixels.</param>
      <param name="height">The height of the rectangle, in screen pixels.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IRasterRenderTarget.DrawRectangle(System.Windows.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a solid color rectangle covering the specified area.</summary>
      <param name="color">The color of the rectangle.</param>
      <param name="left">The left position of the rectangle, in screen pixels.</param>
      <param name="top">The top position of the rectangle, in screen pixels.</param>
      <param name="width">The width of the rectangle, in screen pixels.</param>
      <param name="height">The height of the rectangle, in screen pixels.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.IRasterRenderTarget.PixelWidth">
      <summary>Gets the screen width of the render target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.IRasterRenderTarget.PixelHeight">
      <summary>Gets the screen height of the render target.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.LinePlotRenderer">
      <summary>Displays plot data using lines.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.PlotRenderer">
      <summary>Represents an abstract base class for plot renderers.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderer.#ctor">
      <summary>
            Initializes a new instance of the PlotRenderer class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderer.GetDataRequirements">
      <summary>
            Gets information on the required data for the PlotRenderer to render properly.
            </summary>
      <returns>The data requirements for the PlotRenderer.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderer.ToString" />
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderer.Render(NationalInstruments.Controls.Rendering.RenderArgs)" />
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderer.RenderGraphCore(NationalInstruments.Controls.Rendering.PlotRenderArgs)">
      <summary>
            Called to render the data for a plot in a graph on the specified target.
            </summary>
      <param name="renderArgs">
            A PlotRenderArgs instance containing the relative data to draw and the target to draw to.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderer.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)">
      <summary>
            Called to draw the glyph for the renderer in a legend on the specified target.
            </summary>
      <param name="renderArgs">
            A LegendRenderArgs instance containing the size of the glyph to draw and the target to draw to.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderer.OnVisualPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Raises an Invalidated event based on an appearance change.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderer.OnPositionalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Raises an Invalidated event based on a positional change.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRenderer.OnInvalidated(NationalInstruments.Controls.Rendering.RenderInvalidatedEventArgs)">
      <summary>
            Raises the Invalidated event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of RenderInvalidatedEventArgs that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PlotRenderer.SupportedRenderModes" />
    <member name="P:NationalInstruments.Controls.Rendering.PlotRenderer.FallbackRenderers">
      <summary>
            Gets the set of fallback renderers to use when the parent graph does not specify any default plot renderers.
            </summary>
    </member>
    <member name="E:NationalInstruments.Controls.Rendering.PlotRenderer.Invalidated" />
    <member name="M:NationalInstruments.Controls.Rendering.LinePlotRenderer.GetDataRequirements" />
    <member name="M:NationalInstruments.Controls.Rendering.LinePlotRenderer.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.Rendering.LinePlotRenderer.RenderGraphCore(NationalInstruments.Controls.Rendering.PlotRenderArgs)" />
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeProperty">
      <summary>
            Identifies the Stroke dependency property.
            </summary>
      <returns>
            The identifier for the Stroke dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeDashArrayProperty">
      <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashArray dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeDashOffsetProperty">
      <summary>
            Identifies the StrokeDashOffset dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashOffset dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeDashCapProperty">
      <summary>
            Identifies the StrokeDashCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeEndLineCapProperty">
      <summary>
            Identifies the StrokeEndLineCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeEndLineCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeStartLineCapProperty">
      <summary>
            Identifies the StrokeStartLineCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeStartLineCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeLineJoinProperty">
      <summary>
            Identifies the StrokeLineJoin dependency property.
            </summary>
      <returns>
            The identifier for the StrokeLineJoin dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeMiterLimitProperty">
      <summary>
            Identifies the StrokeMiterLimit dependency property.
            </summary>
      <returns>
            The identifier for the StrokeMiterLimit dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeThicknessProperty">
      <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
      <returns>
            The identifier for the StrokeThickness dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.LinePlotRenderer.LineStepProperty">
      <summary>
            Identifies the LineStep dependency property.
            </summary>
      <returns>
            The identifier for the LineStep dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.LinePlotRenderer.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.Stroke">
      <summary>Gets or sets the brush that specifies how the lines are painted.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeDashArray">
      <summary>
      Gets or sets a collection of Double values that indicate the pattern of dashes and gaps used for the lines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeDashOffset">
      <summary>
      Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeDashCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that specifies how the ends of a dash are drawn for the lines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeEndLineCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that describes the shape at the end of a line.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeStartLineCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that describes the shape at the start of a line.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeLineJoin">
      <summary>
      Gets or sets a PenLineJoin enumeration value that specifies the type of join that is used at the vertices of a line.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeMiterLimit">
      <summary>
      Gets or sets a limit on the ratio of the miter length to half the stroke thickness of a line.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.StrokeThickness">
      <summary>Gets or sets the width of the brush used to paint the line.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.LineStep">
      <summary>Gets or sets the interpolation algorithm used to draw lines between each point.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.
      </exception>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.SupportedRenderModes" />
    <member name="P:NationalInstruments.Controls.Rendering.LinePlotRenderer.Options">
      <summary>
            Gets or sets the RenderTargetOptions.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.PointPlotRenderer">
      <summary>Displays plot data using points.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PointPlotRenderer.GetDataRequirements" />
    <member name="M:NationalInstruments.Controls.Rendering.PointPlotRenderer.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.Rendering.PointPlotRenderer.RenderGraphCore(NationalInstruments.Controls.Rendering.PlotRenderArgs)" />
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
      <returns>
            The identifier for the Fill dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeProperty">
      <summary>
            Identifies the Stroke dependency property.
            </summary>
      <returns>
            The identifier for the Stroke dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeDashArrayProperty">
      <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashArray dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeDashCapProperty">
      <summary>
            Identifies the StrokeDashCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeEndLineCapProperty">
      <summary>
            Identifies the StrokeEndLineCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeEndLineCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeStartLineCapProperty">
      <summary>
            Identifies the StrokeStartLineCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeStartLineCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeLineJoinProperty">
      <summary>
            Identifies the StrokeLineJoin dependency property.
            </summary>
      <returns>
            The identifier for the StrokeLineJoin dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeDashOffsetProperty">
      <summary>
            Identifies the StrokeDashOffset dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashOffset dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeMiterLimitProperty">
      <summary>
            Identifies the StrokeMiterLimit dependency property.
            </summary>
      <returns>
            The identifier for the StrokeMiterLimit dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeThicknessProperty">
      <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
      <returns>
            The identifier for the StrokeThickness dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.SizeProperty">
      <summary>
            Identifies the Size dependency property.
            </summary>
      <returns>
            The identifier for the Size dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PointPlotRenderer.ShapeProperty">
      <summary>
            Identifies the Shape dependency property.
            </summary>
      <returns>
            The identifier for the Shape dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PointPlotRenderer.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.Fill">
      <summary>Gets or sets the brush that specifies how the point interiors are painted.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.Stroke">
      <summary>Gets or sets the brush that specifies how the point outlines are painted.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeDashArray">
      <summary>
      Gets or sets a collection of Double values that indicate the pattern of dashes and gaps used for the point outlines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeDashCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that specifies how the ends of a dash are drawn for the point outlines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeEndLineCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that describes the shape at the end of a point outlines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeStartLineCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that describes the shape at the start of a point outlines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeLineJoin">
      <summary>
      Gets or sets a PenLineJoin enumeration value that specifies the type of join that is used at the vertices of a bar.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeDashOffset">
      <summary>
      Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeMiterLimit">
      <summary>
      Gets or sets a limit on the ratio of the miter length to half the stroke thickness of a point outlines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.StrokeThickness">
      <summary>Gets or sets the width of the brush used to paint the point outlines.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.Size">
      <summary>Gets or sets the size of each point.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.Shape">
      <summary>Gets or sets the shape of each point.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.
      </exception>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.SupportedRenderModes" />
    <member name="P:NationalInstruments.Controls.Rendering.PointPlotRenderer.Options">
      <summary>
            Gets or sets the RenderTargetOptions.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.RelativeDataCollection">
      <summary>
            Represents a read-only collection of relative data values for a set of graph dimensions.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RelativeDataCollection.Empty">
      <summary>Gets a value representing an empty collection of relative data.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RelativeDataCollection.#ctor(NationalInstruments.DataInfrastructure.Buffer{System.Double}[])">
      <summary>
            Initializes a new instance of the RelativeDataCollection class.
            </summary>
      <param name="data">The relative data buffers to form the collection with.</param>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">data (parameter) contains a null buffer.
              -or-

data (parameter) contains buffers of different sizes.

-or-data (parameter) contains buffers of different sizes.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RelativeDataCollection.#ctor(System.Collections.Generic.IEnumerable{NationalInstruments.DataInfrastructure.Buffer{System.Double}})">
      <param name="data">The relative data buffers to form the collection with.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RelativeDataCollection.ToString" />
    <member name="P:NationalInstruments.Controls.Rendering.RelativeDataCollection.Size">
      <summary>
            Gets the size of each buffer in the collection.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.SupportedRenderModes">
      <summary>
            Specifies when a plot renderer draws, based on the RenderMode of the parent graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.SupportedRenderModes.None">
      <summary>The renderer does not draw in either Vector or Raster.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.SupportedRenderModes.Raster">
      <summary>The renderer draws in Raster.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.SupportedRenderModes.Vector">
      <summary>The renderer draws in Vector.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.SupportedRenderModes.VectorAndRaster">
      <summary>The renderer draws in both Vector and Raster.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.AxisCollection">
      <summary>
            Represents a collection of ICartesianAxis objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.AxisCollection.#ctor">
      <summary>Initializes a new instance of the AxisCollection class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.AxisCollection.ChangeItemsCore(System.Int32,System.Int32,NationalInstruments.Controls.Primitives.ICartesianAxis[])" />
    <member name="T:NationalInstruments.Controls.IntensityGraph">
      <summary>
            Represents a graph control that displays three-dimensional data in a two-dimensional Cartesian coordinate system,
            with color representing the third dimension. 
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.IntensityGraph.HorizontalAxisProperty">
      <summary>
            Identifies the HorizontalAxis dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalAxis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.IntensityGraph.VerticalAxisProperty">
      <summary>
            Identifies the VerticalAxis dependency property.
            </summary>
      <returns>
            The identifier for the VerticalAxis dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.IntensityGraph.ColorScaleProperty">
      <summary>
            Identifies the ColorScale dependency property.
            </summary>
      <returns>
            The identifier for the ColorScale dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.IntensityGraph.DefaultHorizontalIntervalProperty">
      <summary>
            Identifies the DefaultHorizontalInterval dependency property.
            </summary>
      <returns>
            The identifier for the DefaultHorizontalInterval dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.IntensityGraph.DefaultVerticalIntervalProperty">
      <summary>
            Identifies the DefaultVerticalInterval dependency property.
            </summary>
      <returns>
            The identifier for the DefaultVerticalInterval dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.#ctor(NationalInstruments.Controls.Primitives.DataProcessorBase)">
      <summary>
      Initializes a new instance of the IntensityGraph class with the specified data processor.
    </summary>
      <param name="dataProcessor">An object used to process data passed to the graph.</param>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.#ctor">
      <summary>
            Initializes a new instance of the IntensityGraph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.GetHitTestedPlotsWithRenderedInterpolation(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.IntensityGraph.PrepareForData(System.Int32)" />
    <member name="M:NationalInstruments.Controls.IntensityGraph.OnPlotAreaRedrawNeeded(System.Object,System.EventArgs)" />
    <member name="M:NationalInstruments.Controls.IntensityGraph.OnApplyTemplate" />
    <member name="M:NationalInstruments.Controls.IntensityGraph.ContainsAxisCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the ContainsAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.DataToRelativeCore(NationalInstruments.Controls.Primitives.IPlot,System.Collections.IList)">
      <summary>Implements the DataToRelative method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.DataToRelativeCore(NationalInstruments.Controls.Primitives.IScale,System.Object)">
      <summary>Implements the DataToRelative method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.RelativeToDataCore(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Point)">
      <summary>Implements the RelativeToData method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.RelativeToDataCore(NationalInstruments.Controls.Primitives.IScale,System.Double)">
      <summary>Implements the RelativeToData method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.GetValueCore(NationalInstruments.Controls.Primitives.IPlotObserver,System.Int32)">
      <summary>Implements the GetValue method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.FindValuesCore(NationalInstruments.Controls.Primitives.IPlot,NationalInstruments.Controls.Primitives.IRange,NationalInstruments.Controls.Primitives.IRange,System.Boolean)">
      <summary>Implements the FindValues method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.FindNearestValueCore(NationalInstruments.Controls.Primitives.IPlotObserver,System.Windows.Point,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>Implements the FindNearestValue method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.FindNearestValuesCore(NationalInstruments.Controls.Primitives.IScale,System.Double,NationalInstruments.Controls.Primitives.GraphQueryArgs)">
      <summary>Implements the FindNearestValues method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.GetOrientationCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the GetOrientation method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.GetPlotsCore(NationalInstruments.Controls.Primitives.IScale)">
      <summary>Implements the GetPlots method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.GetDefaultAxisCore(System.Windows.Controls.Orientation)">
      <summary>Implements the GetDefaultAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.GetAxisCore(NationalInstruments.Controls.Primitives.IPlot,System.Windows.Controls.Orientation)">
      <summary>Implements the GetAxis method.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.IntensityGraph.GetDefaultPlotCore">
      <summary>Implements the GetDefaultPlot method.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.HorizontalAxis">
      <summary>Gets or sets the horizontal coordinate scale for the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.VerticalAxis">
      <summary>Gets or sets the vertical coordinate scale for the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.ColorScale">
      <summary>
      Gets or sets the ColorScale for the graph.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.DefaultHorizontalInterval">
      <summary>Gets or sets the default data interval to use for the horizontal dimension.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.DefaultVerticalInterval">
      <summary>Gets or sets the default data interval to use for the vertical dimension.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.IntensityRenderer">
      <summary>
            Gets or sets the IntensityPlotRenderer for the intensity plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.GraphComponentManager">
      <summary>
            Gets or sets the CartesianGraphComponentManager.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.QueryableGraphHelper">
      <summary>
            Gets or sets the QueryableGraphCartesianHelper.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.PlotHitTestHelper">
      <summary>
            Gets or sets the RenderablePlotHitTestHelper.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.IntensityGraph.AllPlots" />
    <member name="P:NationalInstruments.Controls.IntensityGraph.AllScales" />
    <member name="T:NationalInstruments.Controls.Legend">
      <summary>
            Represents a legend control used to display symbols and descriptions of another object, such as the plots or cursors of a graph. 
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Legend.ItemsSourceProperty">
      <summary>
            Identifies the ItemsSource dependency property.
            </summary>
      <returns>
            The identifier for the ItemsSource dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Legend.GlyphSizeProperty">
      <summary>
            Identifies the GlyphSize dependency property.
            </summary>
      <returns>
            The identifier for the GlyphSize dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Legend.ItemBackgroundProperty">
      <summary>
            Identifies the ItemBackground dependency property.
            </summary>
      <returns>
            The identifier for the ItemBackground dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Legend.#ctor">
      <summary>
            Initializes a new instance of the Legend class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Legend.OnApplyTemplate" />
    <member name="M:NationalInstruments.Controls.Legend.OnItemsSourceChanged(System.Object,System.Object)">
      <summary>
            Called when the ItemsSource property changes.
            </summary>
      <param name="oldValue">
            Old value of the ItemsSource property.
            </param>
      <param name="newValue">
            New value of the ItemsSource property.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Legend.ItemsFilter(System.Object)">
      <summary>
            Acts as a filter for which objects are displayed in the legend.
            </summary>
      <param name="item">An item to filter.</param>
      <returns>true if item (parameter) should be displayed in the legend; otherwise, false.</returns>
    </member>
    <member name="P:NationalInstruments.Controls.Legend.Items">
      <summary>Gets the items displayed in the legend.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Legend.ItemsSource">
      <summary>Gets or sets the source of the items displayed in the legend.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Legend.GlyphSize">
      <summary>Gets or sets the size of the glyph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Legend.ItemBackground">
      <summary>Gets or sets the background of each displayed item.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Legend.ItemsControl" />
    <member name="T:NationalInstruments.Controls.Cursor">
      <summary>Represents a cursor that can display a single value in a graph.</summary>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.PlotProperty">
      <summary>
            Identifies the Plot dependency property.
            </summary>
      <returns>
            The identifier for the Plot dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.IndexProperty">
      <summary>
            Identifies the Index dependency property.
            </summary>
      <returns>
            The identifier for the Index dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.AllowablePlotsProperty">
      <summary>
            Identifies the AllowablePlots dependency property.
            </summary>
      <returns>
            The identifier for the AllowablePlots dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.HorizontalCrosshairLengthProperty">
      <summary>
            Identifies the HorizontalCrosshairLength dependency property.
            </summary>
      <returns>
            The identifier for the HorizontalCrosshairLength dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.VerticalCrosshairLengthProperty">
      <summary>
            Identifies the VerticalCrosshairLength dependency property.
            </summary>
      <returns>
            The identifier for the VerticalCrosshairLength dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.LabelAlignmentProperty">
      <summary>
            Identifies the LabelAlignment dependency property.
            </summary>
      <returns>
            The identifier for the LabelAlignment dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.TargetBrushProperty">
      <summary>
            Identifies the TargetBrush dependency property.
            </summary>
      <returns>
            The identifier for the TargetBrush dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.TargetSizeProperty">
      <summary>
            Identifies the TargetSize dependency property.
            </summary>
      <returns>
            The identifier for the TargetSize dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.TargetShapeProperty">
      <summary>
            Identifies the TargetShape dependency property.
            </summary>
      <returns>
            The identifier for the TargetShape dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.ActualPlotProperty">
      <summary>
            Identifies the ActualPlot dependency property.
            </summary>
      <returns>
            The identifier for the ActualPlot dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Cursor.ValueProperty">
      <summary>
            Identifies the Value dependency property.
            </summary>
      <returns>
            The identifier for the Value dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Cursor.GetRelativePosition">
      <summary>
            Gets the relative position of the center of the cursor.
            </summary>
      <returns>
            The relative position of the center of the cursor.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Cursor.SetRelativePosition(System.Windows.Point)">
      <summary>
            Centers the cursor on the specified relative position, or on the nearest data point in the graph.
            </summary>
      <param name="relativePosition">The relative position to move the cursor to.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Cursor.GetScreenPosition">
      <summary>
            Gets the screen position of the center of the cursor.
            </summary>
      <returns>
            The screen position of the center of the cursor.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Cursor.SetScreenPosition(System.Windows.Point)">
      <summary>
            Centers the cursor on the specified screen position, or on the nearest data point in the graph.
            </summary>
      <param name="screenPosition">The screen position to move the cursor to.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Cursor.SetDataPosition(System.Collections.IList)">
      <summary>
            Centers the cursor on the specified data value, or on the nearest data point in the graph.
            </summary>
      <param name="dataValue">The data value to move the cursor to.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Cursor.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.Cursor.RenderGraphCore(NationalInstruments.Controls.Rendering.RenderArgs)" />
    <member name="M:NationalInstruments.Controls.Cursor.OnSnapToDataChangedCore" />
    <member name="M:NationalInstruments.Controls.Cursor.OnParentRegistered" />
    <member name="M:NationalInstruments.Controls.Cursor.OnParentUnregistered(NationalInstruments.Controls.Primitives.IQueryableGraph)" />
    <member name="M:NationalInstruments.Controls.Cursor.GetCursorDragStartScreenPosition(System.Windows.Point,System.Object)" />
    <member name="M:NationalInstruments.Controls.Cursor.OnDragMoveCore(System.Windows.Point,System.Object)" />
    <member name="P:NationalInstruments.Controls.Cursor.ActualPlot">
      <summary>Gets the current plot the cursor is associated with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.Plot">
      <summary>Gets or sets the desired plot to associate the cursor with.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.Index">
      <summary>Gets or sets the index of the data point in the associated plot the cursor is centered over.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.Value">
      <summary>Gets the data values for each dimension of the position the cursor is centered over.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.AllowablePlots">
      <summary>Gets or sets a value indicating whether a cursor is associated with a single plot or any plot.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is not a valid PlotsToSearch value.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.HorizontalCrosshairLength">
      <summary>Gets or sets the length of the horizontal crosshairs.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is NaN, or is less than zero.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.VerticalCrosshairLength">
      <summary>Gets or sets the length of the vertical crosshairs.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is NaN, or is less than zero.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.LabelAlignment">
      <summary>Gets or sets the cursor label alignment.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.
      </exception>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.TargetBrush">
      <summary>Gets or sets the brush used to fill the target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.TargetSize">
      <summary>Gets or sets the screen size of the target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.TargetShape">
      <summary>Gets or sets the shape used for the target.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.MouseTargetOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for the graph target mouse interactions.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.MouseHorizontalOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for the graph horizontal crosshairs mouse interactions.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.MouseVerticalOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for the graph vertical crosshairs mouse interactions.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Cursor.DisplayOptions">
      <summary>
            Gets or sets the RenderTargetOptions used for rendering the display in the graph and legend.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.ColorScaleMarkerCollection">
      <summary>
            Represents a collection of ColorScaleMarker objects.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.InputData">
      <summary>
            Represents an abstract base class used for the interactive generation of data in an IWritableGraph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.InputData.AddData(System.Windows.Point,NationalInstruments.Controls.Primitives.PlotAreaMouseAction)">
      <summary>
            Called when the user interacts with the plot area of a writable graph.
            </summary>
      <param name="relativeValue">The relative position of the mouse within the plot area.</param>
      <param name="mouseAction">A Click or Move value indicating the type of user interaction.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.InputData.GetData">
      <summary>
            Retrieves the data this object creates.
            </summary>
      <returns>
            Retrieves the data for this instance, where each buffer represents a dimension of raw data values.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Data.InputData.NationalInstruments#Controls#Primitives#IGraphChild#RegisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Data.InputData.NationalInstruments#Controls#Primitives#IGraphChild#Initialize" />
    <member name="M:NationalInstruments.Controls.Data.InputData.NationalInstruments#Controls#Primitives#IGraphChild#UnregisterParent(NationalInstruments.Controls.Primitives.IGraph)" />
    <member name="M:NationalInstruments.Controls.Data.InputData.NationalInstruments#Controls#Primitives#IGraphChild#Uninitialize" />
    <member name="F:NationalInstruments.Controls.Data.InputData.DataIntervalProperty">
      <summary>
            Identifies the DataInterval attached property.
            </summary>
      <returns>
            The identifier for the DataInterval attached property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Data.InputData.GetDataInterval(System.Windows.DependencyObject)">
      <summary>
            Gets the value of the DataInterval attached property for a specified UIElement.
            </summary>
      <returns>
            The DataInterval property value for the element.
            </returns>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element from which the property value is read.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Data.InputData.SetDataInterval(System.Windows.DependencyObject,System.Object)">
      <summary>
            Sets the value of the DataInterval attached property to a specified element.
            </summary>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element to which the attached property is written.
            </param>
      <param name="value">
            The needed Object value.
            </param>
    </member>
    <member name="P:NationalInstruments.Controls.Data.InputData.Parent">
      <summary>
            Gets the parent of the input data.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Data.WaveformInputData">
      <summary>
            Represents the input data for the EditWaveform interaction.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Data.WaveformInputData.GetData" />
    <member name="M:NationalInstruments.Controls.Data.WaveformInputData.AddData(System.Windows.Point,NationalInstruments.Controls.Primitives.PlotAreaMouseAction)" />
    <member name="M:NationalInstruments.Controls.Primitives.CartesianDataPlotArea.#ctor(System.Windows.Controls.Control)">
      <summary>Initializes a new instance of the CartesianDataPlotArea class with the specified owner.
            </summary>
      <param name="owner">The owner of the data plot area.</param>
      <exception cref="T:System.ArgumentNullException">owner (parameter) is null.</exception>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CartesianDataPlotArea.CreateVectorRenderTarget" />
    <member name="M:NationalInstruments.Controls.Primitives.CartesianDataPlotArea.CreateRasterRenderTarget">
      <summary>
            Returns a raster target capable of rendering Cartesian data.
            </summary>
      <returns>
            An IRasterRenderTarget.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.CartesianDataPlotArea.RemoveRenderTarget(NationalInstruments.Controls.Rendering.IRenderTarget)" />
    <member name="M:NationalInstruments.Controls.Primitives.CartesianDataPlotArea.ClearRenderTargets" />
    <member name="M:NationalInstruments.Controls.Primitives.CartesianDataPlotArea.SetRasterRenderTargetVisibility(NationalInstruments.Controls.Rendering.IRasterRenderTarget,System.Windows.Visibility)" />
    <member name="M:NationalInstruments.Controls.Primitives.CartesianDataPlotArea.ClearRasterRenderTarget(NationalInstruments.Controls.Rendering.IRasterRenderTarget)" />
    <member name="P:NationalInstruments.Controls.Primitives.CartesianDataPlotArea.Owner">
      <summary>Gets the owner of the data plot area.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.GridLines">
      <summary>
            Represents a set of grid lines in the plot area of a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.GridLines.TryGetRenderer``1(NationalInstruments.Controls.Data.IDataMapper{``0},System.Boolean,System.Boolean,NationalInstruments.Controls.Primitives.GridLinesRenderer{``0}@)">
      <summary>
            Builds a renderer to display the grid lines represented by the object.
            </summary>
      <typeparam name="TData">The data type of the divisions on the scale.</typeparam>
      <param name="dataMapper">The data mapper for the scale.</param>
      <param name="drawMinimumGridLine">The visibility of the minimum gridline.</param>
      <param name="drawMaximumGridLine">The visibility of the maximum gridline.</param>
      <param name="gridLinesRenderer">
            When this method returns, contains a renderer for drawing the gridlines object,
            or null if the gridlines are not visible.
            </param>
      <returns>true if gridLinesRenderer (parameter) was set to a non-null value;
             otherwise, false.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.GridLines.StrokeProperty">
      <summary>
            Identifies the Stroke dependency property.
            </summary>
      <returns>
            The identifier for the Stroke dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.GridLines.StrokeDashArrayProperty">
      <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashArray dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.GridLines.StrokeDashCapProperty">
      <summary>
            Identifies the StrokeDashCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.GridLines.StrokeDashOffsetProperty">
      <summary>
            Identifies the StrokeDashOffset dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashOffset dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.GridLines.StrokeThicknessProperty">
      <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
      <returns>
            The identifier for the StrokeThickness dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.GridLines.VisibilityProperty">
      <summary>
            Identifies the Visibility dependency property.
            </summary>
      <returns>
            The identifier for the Visibility dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.GridLines.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.GridLines.Stroke">
      <summary>Gets or sets the brush that specifies how the gridlines are painted.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.GridLines.StrokeDashArray">
      <summary>
      Gets or sets a collection of Double values that indicate the pattern of dashes and gaps used for the gridlines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GridLines.StrokeDashCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that specifies how the ends of a dash are drawn for the gridlines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GridLines.StrokeDashOffset">
      <summary>
      Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.GridLines.StrokeThickness">
      <summary>Gets or sets the width of the brush used to paint the gridline.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.GridLines.Visibility">
      <summary>
      Gets or sets the visibility of the grid lines.
    </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Internal.RasterRenderTarget.PhosphorColorRampProperty">
      <summary>
            Identifies the PhosphorColorRamp dependency property.
            </summary>
      <returns>
            The identifier for the PhosphorColorRamp dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.#ctor(NationalInstruments.Controls.Internal.IRenderTargetOwner)">
      <summary>
            Initializes a new instance of the RasterRenderTarget class with the specified targetOwner.
            </summary>
      <exception cref="T:System.ArgumentNullException">targetOwner (parameter) is null.
            </exception>
      <param name="targetOwner">
            The parent control that owns the render target.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawRectangle(System.Windows.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawRectangleCore(System.Windows.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            color must be pre-multiplied
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawRectangle(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Int32,System.Int32,System.Int32,System.Int32)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawLine(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Point,System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawArea(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double})" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawLines(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double})" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawConstantLine(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Controls.Orientation,System.Double)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawConstantLine(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Controls.Orientation,System.Windows.Point,System.Double,System.Double,System.Double)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawShape(NationalInstruments.Controls.Rendering.RenderTargetOptions,System.Windows.Point,NationalInstruments.Controls.PointShape,System.Windows.Size)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.DrawShapes(NationalInstruments.Controls.Rendering.RenderTargetOptions,NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.DataInfrastructure.Buffer{System.Double},NationalInstruments.Controls.PointShape,System.Windows.Size)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.ScreenToRelative(System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.RelativeToScreen(System.Windows.Point)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.Clear" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.FlushRenderBuffer" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.GetRegionClippedPoints(System.Windows.Rect,NationalInstruments.Controls.Internal.RasterRenderTarget.Point2D@,NationalInstruments.Controls.Internal.RasterRenderTarget.Point2D@)">
      <summary>----[Internal for testing]----</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.InitBitmapFields(System.Windows.Size)">
      <summary>----[Internal for testing]----</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.TryRelativeToScreenRect(System.Double,System.Double,System.Windows.Size,System.Int32,System.Int32,System.Windows.Int32Rect@)">
      <summary>----[Internal for testing]----</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.Shift(System.Double,System.Double)" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.NationalInstruments#Controls#Internal#IDeferredRenderTarget#BeginDraw" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.NationalInstruments#Controls#Internal#IDeferredRenderTarget#EndDraw" />
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.#ctor(System.Windows.Size,System.Collections.Generic.IEnumerable{NationalInstruments.Controls.Primitives.IPlot})">
      <summary>Used only when in hit-testing mode.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.SetCurrentPlot(NationalInstruments.Controls.Primitives.IPlot)">
      <summary>Used only when in hit-testing mode.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Internal.RasterRenderTarget.HitTestPlots(System.Windows.Point)">
      <summary>Used only when in hit-testing mode.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.RasterRenderTarget.TargetOwner">
      <summary>
            Gets the parent control that owns the render target.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.RasterRenderTarget.PhosphorColorRamp">
      <summary>
            Gets or sets the color ramp to use for graph phosphor.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Internal.RasterRenderTarget.HasCleared" />
    <member name="P:NationalInstruments.Controls.Internal.RasterRenderTarget.NationalInstruments#Controls#Internal#IShiftableRenderTarget#HasShifted" />
    <member name="P:NationalInstruments.Controls.Internal.RasterRenderTarget.NationalInstruments#Controls#Internal#IDeferredRenderTarget#CanDraw" />
    <member name="T:NationalInstruments.Controls.Rendering.FillBaseline">
      <summary>
            Defines the target of a renderer fill.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.FillBaseline.GetDataSource">
      <summary>
            Gets the source to use for the baseline target data.
            </summary>
      <returns>A DataDimensionSource to fill to.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.FillBaseline.GetExampleData(NationalInstruments.Controls.Rendering.RelativeDataCollection)">
      <summary>Gets data used to exemplify the shape of the baseline.</summary>
      <param name="initialData">A collection of data to work from.</param>
      <returns>
            A RelativeDataCollection containing example data.
            </returns>
      <exception cref="T:System.ArgumentNullException">initialData (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.FillBaseline.GetExampleDataCore(NationalInstruments.DataInfrastructure.Buffer{System.Double}[])">
      <summary>Implements the GetExampleData method.</summary>
      <param name="copiedData">A collection of data to work from.</param>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.FillBaseline.NegativeInfinity">
      <summary>Gets a value representing a fill in the direction of negative infinity.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.FillBaseline.PositiveInfinity">
      <summary>Gets a value representing a fill in the direction of positive infinity.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.FillBaseline.Zero">
      <summary>Gets a value representing a fill to a data value of zero.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.FillBaseline.UnderlyingType" />
    <member name="T:NationalInstruments.Controls.Rendering.PlotRendererGroup">
      <summary>
            Represents a PlotRenderer composed of other PlotRenderer instances.
            </summary>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.PlotRendererGroup.PlotRenderersProperty">
      <summary>
            Identifies the PlotRenderers dependency property.
            </summary>
      <returns>
            The identifier for the PlotRenderers dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRendererGroup.CreateInstanceCore" />
    <member name="M:NationalInstruments.Controls.Rendering.PlotRendererGroup.#ctor">
      <summary>
            Initializes a new instance of the PlotRendererGroup class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRendererGroup.GetDataRequirements" />
    <member name="M:NationalInstruments.Controls.Rendering.PlotRendererGroup.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.Rendering.PlotRendererGroup.RenderGraphCore(NationalInstruments.Controls.Rendering.PlotRenderArgs)" />
    <member name="P:NationalInstruments.Controls.Rendering.PlotRendererGroup.PlotRenderers">
      <summary>Gets the collection of renderers that defines this group.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PlotRendererGroup.RendererInvalidatedListener">
      <summary>
            Gets or sets a weak event listener for the IRenderable.Invalidated event.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.PlotRendererGroup.SupportedRenderModes" />
    <member name="T:NationalInstruments.Controls.ColorScale">
      <summary>Represents the third axis on an intensity plot, where colors are used to represent data values.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScale.RelativeValueToColor(System.Double)">
      <summary>Returns the color corresponding to the specified relative value.</summary>
      <param name="relativeValue">A relative value.</param>
      <returns>The color corresponding to the specified relative value on the color scale.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScale.GetDataMapper(System.Object)" />
    <member name="M:NationalInstruments.Controls.ColorScale.GetDataMapper">
      <summary>Gets a data mapper for the scale.</summary>
      <returns>An IDataMapper that can be used for mapping data values.</returns>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScale.IsVisible(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="M:NationalInstruments.Controls.ColorScale.Present(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="M:NationalInstruments.Controls.ColorScale.Clean(NationalInstruments.Controls.Primitives.ScalePresenter)" />
    <member name="F:NationalInstruments.Controls.ColorScale.LowColorProperty">
      <summary>
            Identifies the LowColor dependency property.
            </summary>
      <returns>
            The identifier for the LowColor dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.HighColorProperty">
      <summary>
            Identifies the HighColor dependency property.
            </summary>
      <returns>
            The identifier for the HighColor dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.MajorDivisionsProperty">
      <summary>
            Identifies the MajorDivisions dependency property.
            </summary>
      <returns>
            The identifier for the MajorDivisions dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.IsInterpolatedProperty">
      <summary>
            Identifies the IsInterpolated dependency property.
            </summary>
      <returns>
            The identifier for the IsInterpolated dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.IsInvertedProperty">
      <summary>
            Identifies the IsInverted dependency property.
            </summary>
      <returns>
            The identifier for the IsInverted dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.AdjusterProperty">
      <summary>
            Identifies the Adjuster dependency property.
            </summary>
      <returns>
            The identifier for the Adjuster dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.LocationProperty">
      <summary>
            Identifies the Location dependency property.
            </summary>
      <returns>
            The identifier for the Location dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.InteractionModeProperty">
      <summary>
            Identifies the InteractionMode dependency property.
            </summary>
      <returns>
            The identifier for the InteractionMode dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.ScaleKindProperty">
      <summary>
            Identifies the ScaleKind dependency property.
            </summary>
      <returns>
            The identifier for the ScaleKind dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.PresentVisualsProperty">
      <summary>
            Identifies the PresentVisuals attached property.
            </summary>
      <returns>
            The identifier for the PresentVisuals attached property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.ColorScale.RangeProperty">
      <summary>
            Identifies the Range dependency property.
            </summary>
      <returns>
            The identifier for the Range dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScale.#ctor">
      <summary>
            Initializes a new instance of the ColorScale class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScale.OnRangeChanged(System.EventArgs)">
      <summary>
            Raises the RangeChanged event.
            </summary>
      <exception cref="T:System.ArgumentNullException">e (parameter) is null.
            </exception>
      <param name="e">
            An instance of EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScale.GetPresentVisuals(NationalInstruments.Controls.Primitives.ScalePresenter)">
      <summary>
            Gets the value of the PresentVisuals attached property for a specified UIElement.
            </summary>
      <returns>
            The PresentVisuals property value for the element.
            </returns>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element from which the property value is read.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScale.SetPresentVisuals(NationalInstruments.Controls.Primitives.ScalePresenter,System.Tuple{NationalInstruments.Controls.Primitives.Regions.EdgeDefinition,NationalInstruments.Controls.Primitives.Regions.IRegionChild[]})">
      <summary>
            Sets the value of the PresentVisuals attached property to a specified element.
            </summary>
      <exception cref="T:System.ArgumentNullException">element (parameter) is null.
            </exception>
      <param name="element">
            The element to which the attached property is written.
            </param>
      <param name="value">
            The needed Tuple&lt;T1,T2&gt; value.
            </param>
    </member>
    <member name="M:NationalInstruments.Controls.ColorScale.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.ColorScale.Markers">
      <summary>Gets the collection of color scale markers that determine how values are mapped to colors by the scale.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.LowColor">
      <summary>
      Gets or sets the color to display for values that fall below Range.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.HighColor">
      <summary>
      Gets or sets the color to display for values that fall above Range.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.Range">
      <summary>
      Gets the range of values defined by the Markers collection.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.MajorDivisions">
      <summary>
      Gets or set the settings for major divisions on the scale.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.IsInterpolated">
      <summary>
      Gets or sets the interpolation behavior indicating how a value maps to a color if the value does not match an entry in the Markers collection.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.IsInverted">
      <summary>
      Gets or sets a value indicating whether the scale should display inverted.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.Adjuster">
      <summary>
      Gets or sets the RangeAdjuster used to update Range when data is received by the graph.
    </summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.</exception>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.Location">
      <summary>
      Gets or sets the relative location of the scale.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.InteractionMode">
      <summary>
      Gets or sets the interaction mode for the scale.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.ScaleKind">
      <summary>Gets or sets the method used to map values in the scale.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.</exception>
    </member>
    <member name="E:NationalInstruments.Controls.ColorScale.RangeChanged">
      <summary>Occurs when Range changes.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.ColorScale.DataMapperProxy">
      <summary>
            Gets or sets the proxy for the data mapper for the axis.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Primitives.GraphInteractionArgs">
      <summary>
            Provides information regarding mouse interaction with a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.GraphInteractionArgs.ToString" />
    <member name="M:NationalInstruments.Controls.Primitives.GraphInteractionArgs.#ctor(NationalInstruments.Controls.Primitives.PlotAreaMouseAction,System.Windows.FrameworkElement,System.Windows.Size,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
      <summary>
      Initializes a new instance of the GraphInteractionArgs class.
    </summary>
      <param name="mouseAction">The mouse action.</param>
      <param name="interactionVisual">A visual that you can use to indicate the interaction on the graph.</param>
      <param name="plotAreaSize">The size of the plot area.</param>
      <param name="dragStart">The screen position where the mouse was first pressed.</param>
      <param name="dragEnd">The screen position where the mouse is currently located.</param>
      <param name="lastMousePosition">The screen position where the mouse was previously located.</param>
      <exception cref="T:System.ArgumentNullException">interactionVisual (parameter) is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">mouseAction (parameter) is not a valid PlotAreaMouseAction value.
</exception>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphInteractionArgs.IsMouseLeftButtonDown">
      <summary>
            Gets a value indicating whether the left mouse button is currently pressed.
            </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphInteractionArgs.MouseAction">
      <summary>Gets the mouse action.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphInteractionArgs.InteractionVisual">
      <summary>Gets a visual that you can use to indicate the interaction on the graph.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphInteractionArgs.PlotAreaSize">
      <summary>Gets the size of the plot area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphInteractionArgs.DragStart">
      <summary>Gets the screen position where the mouse was first pressed.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphInteractionArgs.DragEnd">
      <summary>Gets the screen position where the mouse is currently located.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Primitives.GraphInteractionArgs.LastMousePosition">
      <summary>Gets the screen position where the mouse was previously located.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.AreaPlotRenderer">
      <summary>Displays plot data using a filled area.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.AreaPlotRenderer.GetDataRequirements" />
    <member name="M:NationalInstruments.Controls.Rendering.AreaPlotRenderer.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.Rendering.AreaPlotRenderer.RenderGraphCore(NationalInstruments.Controls.Rendering.PlotRenderArgs)" />
    <member name="F:NationalInstruments.Controls.Rendering.AreaPlotRenderer.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
      <returns>
            The identifier for the Fill dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.AreaPlotRenderer.FillBaselineProperty">
      <summary>
            Identifies the FillBaseline dependency property.
            </summary>
      <returns>
            The identifier for the FillBaseline dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.AreaPlotRenderer.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.Rendering.AreaPlotRenderer.Fill">
      <summary>Gets or sets the brush used to fill the area.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.AreaPlotRenderer.FillBaseline">
      <summary>Gets or sets the reference line for the fill.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.
      </exception>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.AreaPlotRenderer.SupportedRenderModes" />
    <member name="P:NationalInstruments.Controls.Rendering.AreaPlotRenderer.Options">
      <summary>
            Gets or sets the RenderTargetOptions.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.BarPlotRenderer">
      <summary>Displays plot data using bars.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.BarPlotRenderer.GetDataRequirements" />
    <member name="M:NationalInstruments.Controls.Rendering.BarPlotRenderer.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.Rendering.BarPlotRenderer.RenderGraphCore(NationalInstruments.Controls.Rendering.PlotRenderArgs)" />
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.FillProperty">
      <summary>
            Identifies the Fill dependency property.
            </summary>
      <returns>
            The identifier for the Fill dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeProperty">
      <summary>
            Identifies the Stroke dependency property.
            </summary>
      <returns>
            The identifier for the Stroke dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeDashArrayProperty">
      <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashArray dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeDashCapProperty">
      <summary>
            Identifies the StrokeDashCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeEndLineCapProperty">
      <summary>
            Identifies the StrokeEndLineCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeEndLineCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeStartLineCapProperty">
      <summary>
            Identifies the StrokeStartLineCap dependency property.
            </summary>
      <returns>
            The identifier for the StrokeStartLineCap dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeLineJoinProperty">
      <summary>
            Identifies the StrokeLineJoin dependency property.
            </summary>
      <returns>
            The identifier for the StrokeLineJoin dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeDashOffsetProperty">
      <summary>
            Identifies the StrokeDashOffset dependency property.
            </summary>
      <returns>
            The identifier for the StrokeDashOffset dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeMiterLimitProperty">
      <summary>
            Identifies the StrokeMiterLimit dependency property.
            </summary>
      <returns>
            The identifier for the StrokeMiterLimit dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeThicknessProperty">
      <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
      <returns>
            The identifier for the StrokeThickness dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.BarWidthProperty">
      <summary>
            Identifies the BarWidth dependency property.
            </summary>
      <returns>
            The identifier for the BarWidth dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.BarPlotRenderer.FillBaselineProperty">
      <summary>
            Identifies the FillBaseline dependency property.
            </summary>
      <returns>
            The identifier for the FillBaseline dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.BarPlotRenderer.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.Fill">
      <summary>Gets or sets the brush used to fill the bars.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.Stroke">
      <summary>Gets or sets the brush that specifies how the bar outlines are painted.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeDashArray">
      <summary>
      Gets or sets a collection of Double values that indicate the pattern of dashes and gaps used for the bar outlines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeDashCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that specifies how the ends of a dash are drawn for the bar outlines.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeEndLineCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that describes the shape at the end of a bar outline.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeStartLineCap">
      <summary>
      Gets or sets a PenLineCap enumeration value that describes the shape at the start of a bar outline.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeLineJoin">
      <summary>
      Gets or sets a PenLineJoin enumeration value that specifies the type of join that is used at the vertices of a bar outline.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeDashOffset">
      <summary>
      Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeMiterLimit">
      <summary>
      Gets or sets a limit on the ratio of the miter length to half the stroke thickness of a bar.
    </summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.StrokeThickness">
      <summary>Gets or sets the width of the brush used to paint the bar outline.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.BarWidth">
      <summary>Gets or sets the relative width of the bar.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.FillBaseline">
      <summary>Gets or sets the reference line for the fill.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.
      </exception>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.SupportedRenderModes" />
    <member name="P:NationalInstruments.Controls.Rendering.BarPlotRenderer.Options">
      <summary>
            Gets or sets the RenderTargetOptions.
            </summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.IntensityPlotRenderer">
      <summary>Displays three dimensional data on a two dimensional surface, with color representing the third dimension.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.#ctor">
      <summary>Initializes a new instance of the IntensityPlotRenderer class.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.GetDataRequirements" />
    <member name="M:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.RenderLegendCore(NationalInstruments.Controls.Rendering.LegendRenderArgs)" />
    <member name="M:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.RenderGraphCore(NationalInstruments.Controls.Rendering.PlotRenderArgs)" />
    <member name="F:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.ColorScaleProperty">
      <summary>
            Identifies the ColorScale dependency property.
            </summary>
      <returns>
            The identifier for the ColorScale dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.DefaultHorizontalIntervalProperty">
      <summary>
            Identifies the DefaultHorizontalInterval dependency property.
            </summary>
      <returns>
            The identifier for the DefaultHorizontalInterval dependency property.
            </returns>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.DefaultVerticalIntervalProperty">
      <summary>
            Identifies the DefaultVerticalInterval dependency property.
            </summary>
      <returns>
            The identifier for the DefaultVerticalInterval dependency property.
            </returns>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.CreateInstanceCore" />
    <member name="P:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.ColorScale">
      <summary>Gets or sets the scale used for mapping data values to colors.</summary>
      <exception cref="T:System.ArgumentException">value (parameter) is null.
      </exception>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.DefaultHorizontalInterval">
      <summary>Gets or sets the default interval to use for horizontal data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.DefaultVerticalInterval">
      <summary>Gets or sets the default interval to use for vertical data.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.IntensityPlotRenderer.SupportedRenderModes" />
    <member name="T:NationalInstruments.Controls.Rendering.RenderTargetOptions">
      <summary>
            Represents a collection of options to apply to rendered objects created by an IRenderTarget.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOptions.#ctor(System.Windows.DependencyObject,NationalInstruments.Controls.Rendering.RenderTargetOption[])">
      <summary>
            Initializes a new instance of the RenderTargetOptions class with the specified render options.
            </summary>
      <param name="owner">The owner of any dependency property options.</param>
      <param name="options">A collection of render options.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOptions.SetPropertiesAndCallbacks(System.Windows.Shapes.Shape)">
      <summary>
            Assigns all properties and registers all callbacks on the specified shape.
            </summary>
      <param name="shape">The shape to initialize.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOptions.RemoveBindingsAndCallbacks(System.Windows.Shapes.Shape)">
      <summary>
            Removes all assigned bindings and unregisters all callbacks from the specified shape.
            </summary>
      <param name="shape">The shape to de-initialize.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOptions.GetSetting``1(NationalInstruments.Controls.Rendering.RenderTargetOptionsSetting)">
      <summary>
            Retrieves the value of the specified setting.
            </summary>
      <typeparam name="T">The type of the setting value.</typeparam>
      <param name="setting">The setting to retrieve.</param>
      <returns>
            The value of the specified setting, or the DefaultValue if the setting is not present.
            </returns>
      <exception cref="T:System.ArgumentNullException">setting (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidCastException">
              The type of the setting (parameter) value does not match T (generic type parameter).
            </exception>
    </member>
    <member name="F:NationalInstruments.Controls.Rendering.RenderTargetOptions.FallbackColor">
      <summary>[PRIVATE] internal for testing.</summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.RenderTargetOptions.GetValue``1(NationalInstruments.Controls.Rendering.RenderTargetOptionsProperty)">
      <summary>[PRIVATE] internal for testing.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptions.Owner">
      <summary>Gets the owner of the settings object.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptions.FillColor">
      <summary>Gets a color from the Fill option.</summary>
    </member>
    <member name="P:NationalInstruments.Controls.Rendering.RenderTargetOptions.StrokeColor">
      <summary>Gets a color from the Stroke option.</summary>
    </member>
    <member name="T:NationalInstruments.Controls.Rendering.PlotRendererCollection">
      <summary>
            Represents a collection of PlotRenderer objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRendererCollection.#ctor">
      <summary>
            Initializes a new instance of the PlotRendererCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRendererCollection.#ctor(System.Collections.Generic.IEnumerable{NationalInstruments.Controls.Rendering.PlotRenderer})">
      <summary>
            Initializes a new instance of the PlotRendererCollection class with the specified items.
            </summary>
      <param name="items">A collection of PlotRenderer objects.</param>
    </member>
    <member name="M:NationalInstruments.Controls.Rendering.PlotRendererCollection.ChangeItemsCore(System.Int32,System.Int32,NationalInstruments.Controls.Rendering.PlotRenderer[])" />
    <member name="T:NationalInstruments.Controls.Primitives.PlotCollection">
      <summary>
            Represents a collection of Plot objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotCollection.#ctor">
      <summary>
            Initializes a new instance of the PlotCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.Controls.Primitives.PlotCollection.ChangeItemsCore(System.Int32,System.Int32,NationalInstruments.Controls.Plot[])" />
  </members>
</doc>