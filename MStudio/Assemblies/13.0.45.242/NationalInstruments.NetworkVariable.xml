<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:ni="urn:ni">
  <assembly>
    <name>NationalInstruments.NetworkVariable</name>
  </assembly>
  <members>
    <member name="M:NationalInstruments.Internal.Design.TimeSpanUI.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:NationalInstruments.Internal.Design.TimeSpanUI.InitializeComponent">
      <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.BindingConnectionBehavior">
      <summary>
            Specifies the behavior of a Windows Forms
            NetworkVariableBinding when it
            connects to a network variable for the first time.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BindingConnectionBehavior.DoNothing">
      <summary>
            The binding does not automatically read or write a value upon connection. After connection, the binding can read or write a value.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BindingConnectionBehavior.Read">
      <summary>
            The binding reads the current value of the network variable after it connects.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BindingConnectionBehavior.Write">
      <summary>
            The binding writes an InitialValue to the network variable after it connects.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.SubscriberConnectionBehavior">
      <summary>
            Specifies the connection behavior of a NetworkVariableSubscriber&lt;T&gt;.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.SubscriberConnectionBehavior.DoNothing">
      <summary>
            No action is taken when the NetworkVariableSubscriber&lt;T&gt;
            connects.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.SubscriberConnectionBehavior.UpdateOnConnect">
      <summary>
            When the NetworkVariableSubscriber&lt;T&gt; connects,
            the current value of the network variable is published through the
            DataUpdated
            event.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.GetSubitemsCompletedEventArgs">
      <summary>
            Provides data for the GetSubitemsCompleted
            event.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.GetSubitemsCompletedEventArgs.#ctor(NationalInstruments.NetworkVariable.BrowserItem[],System.Exception,System.Boolean,System.Object)">
      <summary>
            Initializes a new instance of the GetSubitemsCompletedEventArgs
            class with the specified data, error, whether the operation is cancelled, and user-supplied state object.
            </summary>
      <param name="items">
            An array of BrowserItem objects that are the
            result of the asynchronous browsing operation.
            </param>
      <param name="error">
            An Exception or an object derived from the exception that represents any errors that occur
            during the asynchronous browse operation.
            </param>
      <param name="canceled">
            A value indicating whether the asynchronous operation is canceled.
            </param>
      <param name="userState">
            The user-supplied state object.
            </param>
      <exception cref="T:System.ArgumentNullException">error (parameter) is null and items (parameter) is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.GetSubitemsCompletedEventArgs.Items">
      <summary>
            Gets the results of an asynchronous browse operation.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            The Error property is not null.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.Browser">
      <summary>
            Provides methods to discover information about what network variable items are available on the
            network.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.#ctor">
      <summary>
            Initializes a new instance of the Browser class.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.GetItem(System.String)">
      <summary>
            Gets a BrowserItem that represents the item at
            the specified location.
            </summary>
      <param name="location">
            The location of the network variable item.
            </param>
      <returns>
            A BrowserItem that represents the network
            variable item.
            </returns>
      <exception cref="T:System.ArgumentNullException">location (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">location (parameter) is an empty string.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The path specified by location (parameter) is invalid.
            
            -or-
            
            No item was found at the path specified by location (parameter).
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error.  Check the  
            Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.TryGetItem(System.String,NationalInstruments.NetworkVariable.BrowserItem@)">
      <summary>
            Gets a BrowserItem that represents the item at
            the specified location.  A return value indicates if the item was found.
            </summary>
      <param name="location">
            The location of the network variable item.
            </param>
      <param name="item">
            When this method returns and the item was found, contains a 
            BrowserItem that represents the network
            variable item.  Otherwise, it will be null.
            </param>
      <returns>true if the item was found; otherwise false.
            </returns>
      <exception cref="T:System.ArgumentNullException">location (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The path specified by location (parameter) is invalid.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error.  Check the exception's 
            Message property for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.ToString">
      <summary>
            Gets the string representation of a Browser
            object.
            </summary>
      <returns>
            A string representation of a Browser object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.Dispose">
      <summary>
            Releases the resources used by a Browser
            object.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.GetRegisteredMachineNames">
      <summary>
            Gets a list of machine names that have been registered for browsing.
            </summary>
      <returns>
            An array of machine names.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.RegisterMachine(System.String)">
      <summary>
            Registers a machine with the browser.
            </summary>
      <param name="machineName">
            The name or IP address of a machine to register.
            </param>
      <exception cref="T:System.ArgumentException">machineName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.UnregisterMachine(System.String)">
      <summary>
            Unregisters a machine.
            </summary>
      <param name="machineName">
            The name or IP address of a machine that should be unregistered.
            </param>
      <exception cref="T:System.ArgumentException">machineName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.GetSubitems(NationalInstruments.NetworkVariable.BrowserItem)">
      <summary>
            Gets the subitems of a specific item.
            </summary>
      <param name="parent">
            The BrowserItem that has subitems listed.
            </param>
      <returns>
            An array of BrowserItem objects that represent
            the subitems of parent (parameter).  This array has zero elements if there are no subitems.
            </returns>
      <exception cref="T:System.ArgumentNullException">parent (parameter) is null.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.TimeoutException">
            The browse operation timed out.
            
            -or-
            
            The specified item could not be found.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.GetSubitems(System.String)">
      <summary>
            Gets the subitems of the network variable item at the specified path.
            </summary>
      <param name="path">
            The path of a network variable item.
            </param>
      <returns>
            An array of BrowserItem objects that
            represent the subitems of the item at path (parameter).
            </returns>
      <exception cref="T:System.ArgumentNullException">path (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The item specified by path (parameter) does not exist.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.TimeoutException">
            The browse operation timed out.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.GetSubitemsAsync(NationalInstruments.NetworkVariable.BrowserItem,System.Object)">
      <summary>
            Asynchronously gets the subitems of the specified network variable item.
            </summary>
      <param name="parent">
            The BrowserItem that has subitems listed.
            </param>
      <param name="userState">
            An object that is passed to the method that is invoked when the asynchronous operation completes.
            </param>
      <exception cref="T:System.ArgumentNullException">parent (parameter) is null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Browser.GetSubitemsAsync(System.String,System.Object)">
      <summary>
            Asynchronously gets the subitems of the network variable item at the specified path.
            </summary>
      <param name="path">
            The path to a network variable item.
            </param>
      <param name="userState">
            An object that uniquely identifies a browse operation.
            </param>
      <exception cref="T:System.ArgumentNullException">path (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            An operation that uses the same userState (parameter) is already in progress.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Browser.LocalRoot">
      <summary>
            Gets a BrowserItem object that represents the
            local machine.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Browser.RemoteRoot">
      <summary>
            Gets a BrowserItem object that represents
            the root of the browsing hierarchy.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Browser.SynchronizeCallbacks">
      <summary>
            Gets or sets a value that indicates how events and callback delegates are invoked.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Browser.IsDisposed">
      <summary>
            Gets a value indicating whether the object has been disposed.
            </summary>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.Browser.GetSubitemsCompleted">
      <summary>
            Occurs when an asynchronous browsing operation is complete.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            An attempt was made to access the 
            Items
            property when there has been an error.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.AddMachineString">
      <summary>
              Looks up a localized string similar to Add Machine.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.BrowserDialogTitle">
      <summary>
              Looks up a localized string similar to Select Network Item.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.CancelButtonString">
      <summary>
              Looks up a localized string similar to Cancel.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.LocationString">
      <summary>
              Looks up a localized string similar to Location.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.NetworkNeighborhoodString">
      <summary>
              Looks up a localized string similar to Network Neighborhood.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.OKButtonString">
      <summary>
              Looks up a localized string similar to OK.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.RegisterMachineDialogTitle">
      <summary>
              Looks up a localized string similar to Add Machine.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.RegisterMachineLabel">
      <summary>
              Looks up a localized string similar to Machine Name or IP Address.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.RemoveMachineString">
      <summary>
              Looks up a localized string similar to Remove.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.ToolBarAddMachine">
      <summary>
              Looks up a localized string similar to Add Machine.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.ToolBarCollapseAll">
      <summary>
              Looks up a localized string similar to Collapse All.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.ToolBarExpandAll">
      <summary>
              Looks up a localized string similar to Expand All.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.Internal.NetworkVariableStrings.ToolBarRefresh">
      <summary>
              Looks up a localized string similar to Refresh.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.DataUpdatedEventArgs`1">
      <summary>
            Provides data for the DataUpdated
            event.
            </summary>
      <typeparam name="TValue">
            The type of the variable that is read. The following types are supported by TValue (generic type parameter):
            Object;
            Byte, Byte[], Byte[,];
            UInt16, UInt16[], UInt16[,];
            UInt32, UInt32[], UInt32[,];
            UInt64, UInt64[], UInt64[,];
            SByte, SByte[], SByte[,];
            Int16, Int16[], Int16[,];
            Int32, Int32[], Int32[,];
            Int64, Int64[], Int64[,];
            Boolean, Boolean[], Boolean[,];
            Single, Single[], Single[,];
            Double, Double[], Double[,];
            String, String[], String[,]; and
            AnalogWaveform&lt;T&gt;, AnalogWaveform&lt;T&gt;[].
            			</typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.DataUpdatedEventArgs`1.#ctor(NationalInstruments.NetworkVariable.NetworkVariableData{`0})">
      <summary>
            Initializes a new instance of the DataUpdatedEventArgs&lt;T&gt;
            class with the specified data.
            </summary>
      <param name="data">
            The NetworkVariableData&lt;T&gt; that contains information about
            the read data.
            </param>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.DataUpdatedEventArgs`1.Data">
      <summary>
            Gets a NetworkVariableData&lt;T&gt; that contains information about
            the read data.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableBindingBase">
      <summary>
            Provides an abstract base class for bindings.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBindingBase.ToString">
      <summary>
            Overrides ToString.</summary>
      <returns>
            Returns a string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingBase.Name">
      <summary>
            Gets or sets the name used to bind network variables to controls.  
            </summary>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingBase.Location">
      <summary>
            Gets or sets the path name of the network variable.
            </summary>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingBase.BindingMode">
      <summary>
            Gets or sets the permission mode of the network variable connection.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The specified value is not a NetworkVariableBindingMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingBase.ConnectionTimeout">
      <summary>
            Gets or sets the timeout for connecting to the network variable.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            		value is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the value is greater than the maximum integer value.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingBase.WriteTimeout">
      <summary>
            Gets or sets the timeout for writing to the network variable.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            		value is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the value is greater than the maximum integer value.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingBase.DefaultReadValue">
      <summary>
            Gets or sets the value that the data source returns
            if a read cannot be successfully completed from the network variable.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingBase.ConnectionStatus">
      <summary>
            Gets the current status of the connection to the network variable.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.BindingStatusUpdatedEventArgs`1">
      <summary>
            Provides data for binding updated
            events.
            </summary>
      <typeparam name="TBinding">
            The associated binding class.
            </typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.BindingStatusUpdatedEventArgs`1.#ctor(`0)">
      <summary>
            Initializes a new instance of BindingStatusUpdatedEventArgs&lt;T&gt;
            with the specified binding.
            </summary>
      <param name="binding">
            The binding that corresponds to the updated connection status.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.BindingStatusUpdatedEventArgs`1.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.BindingStatusUpdatedEventArgs`1.Binding">
      <summary>
            Gets the binding that corresponds to the updated connection status.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.BufferedSubscriberDataStatus">
      <summary>
            Defines the buffer status when you read a NetworkVariableData&lt;T&gt; item from the buffer.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BufferedSubscriberDataStatus.New">
      <summary>
            The read data is new.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BufferedSubscriberDataStatus.None">
      <summary>
            No data.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BufferedSubscriberDataStatus.Stale">
      <summary>
            The data is stale because the buffer is read faster than it is filled.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BufferedSubscriberDataStatus.Dropped">
      <summary>
            The buffer overflowed because to the buffer is filling up faster than it is read.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ConnectCompletedEventArgs">
      <summary>
            Provides data for the ConnectCompleted event.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ConnectCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
      <summary>
            Initializes a new instance of the ConnectCompletedEventArgs
            class with the specified error, whether the operation is canceled, and the state object.
            </summary>
      <param name="error">
            Any error that occurs during the asynchronous operation.
            </param>
      <param name="canceled">
            A value indicating whether the asynchronous operation is cancelled.
            </param>
      <param name="userState">
            The optional user-supplied state object.
            </param>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ConnectionStatus">
      <summary>
            Specifies the status of a network connection.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.ConnectionStatus.Connecting">
      <summary>
            The connection is trying to connect.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.ConnectionStatus.Connected">
      <summary>
            The connection is connected.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.ConnectionStatus.Disconnected">
      <summary>
            The connection is disconnected.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.Internal.WindowsForms.RegisterMachineDialog.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Internal.WindowsForms.RegisterMachineDialog.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Internal.WindowsForms.RegisterMachineDialog.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.Internal.WindowsForms.BrowserDialog.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.BrowserItem">
      <summary>
            Represents a network variable item.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.BrowserItem.GetVariableType">
      <summary>
            Gets the type of an object that represents a network variable.
            </summary>
      <returns>
            A Type that represents the type of the network variable.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            The item is not a network variable.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.BrowserItem.ToString">
      <summary>
            Gets a string that represents an object.
            </summary>
      <returns>
            A string that represents a BrowserItem object.
            </returns>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.BrowserItem.Path">
      <summary>
            Gets the path to a network variable item.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.BrowserItem.ParentItem">
      <summary>
            Gets a BrowserItem that represents the item
            that contains this item.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.BrowserItem.ItemType">
      <summary>
            Gets a value that indicates what kind of network variable item this object represents.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.BrowserItem.IsRegistered">
      <summary>
            Gets a value that indicates if an item that represents a machine is a registered machine.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.BrowserItem.IsLeaf">
      <summary>
            Gets a value that indicates whether this item is a leaf item.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.BrowserItem.Name">
      <summary>
            Gets the name of the network variable item.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.BrowserItemType">
      <summary>
            Specifies the type of network variable item that a 
            BrowserItem represents.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BrowserItemType.Undefined">
      <summary>
            The type of the item is undefined.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BrowserItemType.Machine">
      <summary>
            A machine.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BrowserItemType.Process">
      <summary>
            A process.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BrowserItemType.Folder">
      <summary>
            A folder.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BrowserItemType.Item">
      <summary>
            A network variable.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BrowserItemType.Range">
      <summary>
            A range item.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BrowserItemType.ImplicitItem">
      <summary>
            An implicit item. To connect to this item, specify the path name of the parent item.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.BrowserItemType.Root">
      <summary>
            The root of a network variable structure.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableStringConverter">
      <summary>
            Provides methods that assist with reading and writing String values that contain characters that are not supported
            by NetworkVariable.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableStringConverter.DefaultEncoding">
      <summary>
            The default encoding used by NetworkVariableStringConverter
            to convert String values to Byte arrays and back to String values.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableStringConverter.RequiresConversion(System.String)">
      <summary>
            Determines if you must convert a String to a Byte array, to prevent data loss, before using it with a network variable.
            </summary>
      <param name="value">
            The string to test.
            </param>
      <returns>true if the string will lose data if written to a network variable; otherwise, false.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableStringConverter.GetBytes(System.String)">
      <summary>
            Converts a String to a Byte array that you can send
            to a network variable without data loss.
            </summary>
      <param name="value">
            The string to convert.
            </param>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.Text.EncoderFallbackException">DefaultEncoding
            cannot convert  to a Byte array without a loss of data.
            </exception>
      <returns>
            A Byte array that represents the string using DefaultEncoding.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableStringConverter.GetBytes(System.String,System.Text.Encoding)">
      <summary>
            Converts a String to a Byte array that you can send
            to a network variable without data loss and with the specified Encoding.
            </summary>
      <param name="value">
            The string to convert.
            </param>
      <param name="encoding">
            The Encoding to use when converting value (parameter).
            </param>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
             - or - encoding (parameter) is null.
            </exception>
      <exception cref="T:System.Text.EncoderFallbackException">encoding (parameter)
            cannot convert  to a Byte array without a loss of data.
            </exception>
      <returns>
            A Byte array that represents the string using DefaultEncoding.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableStringConverter.GetString(System.Byte[])">
      <summary>
            Converts a Byte array into a String using
            DefaultEncoding.
            </summary>
      <param name="bytes">
            The array to convert.
            </param>
      <exception cref="T:System.ArgumentNullException">bytes (parameter) is null.
            </exception>
      <exception cref="T:System.Text.DecoderFallbackException">DefaultEncoding cannot
            convert bytes (parameter) into a string without a loss of data.
            </exception>
      <returns>
            The string that bytes (parameter) represents.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableStringConverter.GetString(System.Byte[],System.Text.Encoding)">
      <summary>
            Converts a Byte array into a String with the specified
            Encoding.
            </summary>
      <param name="bytes">
            The array to convert.
            </param>
      <param name="encoding">
            The Encoding to use when converting bytes (parameter) into a String.
            </param>
      <exception cref="T:System.ArgumentNullException">bytes (parameter) is null.
            </exception>
      <exception cref="T:System.Text.DecoderFallbackException">encoding (parameter) cannot
            convert bytes (parameter) into a string without a loss of data.
            </exception>
      <returns>
            The string that bytes (parameter) represents.
            </returns>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ServerProcess">
      <summary>
            Provides methods to create, manipulate, and examine the properties of network variable processes. 
            

</summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcess.Create(System.String)">
      <summary>
            Creates a network variable process.
            </summary>
      <param name="name">
            The name of the created process.
            </param>
      <returns>
            A new ServerProcessInfo instance that represents
            the process that is created.
            </returns>
      <exception cref="T:System.ArgumentException">name (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">name (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the name specified in name (parameter) already exists.
            
            -or-
            
            The process name is a reserved name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The network variable class library encountered an error.  Details about this error are in the Message property of the exception.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcess.Create(System.String,System.Boolean)">
      <summary>
            Creates a network variable process and specifies whether the process should be started after creation.
            </summary>
      <param name="name">
            The name of the created process.
            </param>
      <param name="start">
            If true, the process starts after creation.  If 
            false, the process is not started.
            </param>
      <returns>
            A new ServerProcessInfo instance that represents
            the created process.
            </returns>
      <exception cref="T:System.ArgumentException">name (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">name (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the name specified in name (parameter) already exists.
            
            -or-
            
            The process name is a reserved name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The network variable class library encountered an error.  Details about this error are in the
            Message property of the exception.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcess.Delete(System.String)">
      <summary>
            Deletes a network variable process.
            </summary>
      <param name="name">
            The name of the deleted process.
            </param>
      <returns>true if the process existed and is deleted.  If the process did
            not exist when this method is called, false is returned.
            </returns>
      <exception cref="T:System.ArgumentException">name (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">name (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process name is a reserved name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcess.Exists(System.String)">
      <summary>
            Indicates if a network variable process exists on the local machine.
            </summary>
      <param name="name">
            The name of the process.
            </param>
      <returns>true if the process exists, otherwise false.
            </returns>
      <exception cref="T:System.ArgumentException">name (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">name (parameter) was null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process name is a reserved name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcess.GetAll">
      <summary>
            Retrieves information about all network variable processes that exist on the local machine.
            </summary>
      <returns>
            An array of ServerProcessInfo
            instances that represents the processes that exist on the local machine.
            </returns>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcess.IsRunning(System.String)">
      <summary>
            Indicates if a network variable process is started.
            </summary>
      <param name="name">
            The name of the process.
            </param>
      <returns>true if the process is started.  false if the process is stopped.
            </returns>
      <exception cref="T:System.ArgumentException">name (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">name (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the specified name does not exist.
            
            -or-
            
            The process name is a reserved name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcess.Start(System.String)">
      <summary>
            Starts a network variable process.
            </summary>
      <param name="name">
            The name of the process that is started.
            </param>
      <exception cref="T:System.ArgumentException">name (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">name (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the specified name does not exist.
            
            -or-
            
            The process name is a reserved name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcess.Stop(System.String)">
      <summary>
            Stops a network variable process.
            </summary>
      <param name="name">
            The name of the process that is stopped.
            </param>
      <exception cref="T:System.ArgumentException">name (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">name (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the specified name does not exist.
            
            -or-
            
            The process name is a reserved name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ServerProcessInfo">
      <summary>
            Represents a network variable process and provides methods for creating, deleting, and manipulating the process.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.#ctor(System.String)">
      <summary>
            Initializes a new instance of the ServerProcessInfo
            class that represents a process with the specified name.
            </summary>
      <param name="name">
            The name of the process.
            </param>
      <exception cref="T:System.ArgumentNullException">name (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">name (parameter) is a reserved process name.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.Create">
      <summary>
            Creates a network variable process.
            </summary>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the same name already exists.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.Create(System.Boolean)">
      <summary>
            Creates a network variable process and ensures the process are either started or stopped.
            </summary>
      <param name="start">
            If true, the process is started after the process is created.
            </param>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the same name already exists.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.CreateVariable(System.String)">
      <summary>
            Creates a network variable under the process represented by this instance.
            </summary>
      <param name="variableName">
            The name of the variable that is created.
            </param>
      <returns>
            A ServerVariableInfo instance that represents the
            variable that is created.
            </returns>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">variableName (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the same name as this instance does not exist.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the exception's Message property for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.CreateVariable(System.String,System.Boolean,System.Int32)">
      <summary>
            Creates a network variable in the process represented by this instance.
            </summary>
      <param name="variableName">
            The name of the variable.
            </param>
      <param name="singleWriter">
            If true, the variable only accepts connections from one writer at a time.
            </param>
      <param name="maxItems">
            The number of items the variables buffer should contain.
            </param>
      <returns>
            A ServerVariableInfo instance that represents the
            variable that is created.
            </returns>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">variableName (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">maxItems (parameter) is negative.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the same name as this instance does not exist.
            
            -or-
            
            A variable with the same name already exists in this process.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred. Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.CreateVariable(NationalInstruments.NetworkVariable.VariableCreationOptions)">
      <summary>
            Creates a network variable with the specified configuration in the process represented by this instance.
            </summary>
      <param name="creationOptions">
            A VariableCreationOptions object that represents
            the variable that will be created.
            </param>
      <returns>
            A ServerVariableInfo object  that represents the
            variable that is created.
            </returns>
      <exception cref="T:System.ArgumentException">creationOptions (parameter) indicates a process or variable name that contains 
            characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">creationOptions (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the same name as this instance does not exist.
            
            -or-
            
            A variable with the same name already exists in this process.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred. Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.CreateVariables(System.String[])">
      <summary>
            Creates multiple network variables under the process this instance represents.
            </summary>
      <param name="variableNames">
            An array of names for network variables.
            </param>
      <returns>
            An array of ServerVariableInfo instances that
            represent each variable that is created.
            </returns>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">variableNames (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the same name as this instance does not exist.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.CreateVariables(System.String[],System.Boolean,System.Int32)">
      <summary>
            Creates and configures multiple network variables under the process this instance represents.
            </summary>
      <param name="variableNames">
            An array of names for network variables.
            </param>
      <param name="singleWriter">
            If true, the variable only accepts connections from one writer at a time.
            </param>
      <param name="maxItems">
            The total number of items contained in the variable buffer.
            </param>
      <returns>
            An array of ServerVariableInfo instances that
            represent each variable that is created.
            </returns>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">variableNames (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">maxItems (parameter) is a negative number.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the same name as this instance does not exist.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.CreateVariables(System.Collections.Generic.IEnumerable{NationalInstruments.NetworkVariable.VariableCreationOptions})">
      <summary>
            Creates and configures multiple network variables under the process this instance represents.
            </summary>
      <param name="creationOptions">
            A collection of VariableCreationOptions
            objects that describe the variables that will be created.
            </param>
      <returns>
            An array of ServerVariableInfo instances that
            represent each created variable.
            </returns>
      <exception cref="T:System.ArgumentException">
            A VariableCreationOptions object in creationOptions (parameter)
            indicates a process name that contains characters that cannot be converted using the system default code
            page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">creationOptions (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            A process with the same name as one of the specified processes does not exist.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.Delete">
      <summary>
            Deletes a network variable process.
            </summary>
      <returns>true if the process existed and is successfully deleted.
            false if the process did not exist when this method is called.
            </returns>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of this exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.DeleteVariable(System.String)">
      <summary>
            Deletes a network variable contained within this process.
            </summary>
      <param name="variableName">
            The name of the variable.
            </param>
      <returns>true if the variable existed and is deleted.  false if 
            either the process or variable did not exist when the method is called.
            </returns>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">variableName (parameter) is null.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.GetVariable(System.String)">
      <summary>
            Gets a ServerVariableInfo instance for the specified
            variable.
            </summary>
      <param name="variableName">
            The name of the variable.
            </param>
      <returns>
            A ServerVariableInfo instance that represents the 
            variable.
            </returns>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">variableName (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process or variable does not exist.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.GetVariables">
      <summary>
            Gets the list of variables in a process.
            </summary>
      <returns>
            An array of ServerVariableInfo instances that
            represent each network variable.
            </returns>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process or variable does not exist.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.HasVariable(System.String)">
      <summary>
            Determines if a variable exists in a process.
            </summary>
      <param name="variableName">
            The name of the variable.
            </param>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <returns>true if the variable exists.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.Start">
      <summary>
            Starts a network variable process.
            </summary>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.Stop">
      <summary>
            Stops a network variable process.
            </summary>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerProcessInfo.ToString">
      <summary>
            Gets a string representation of the object.
            </summary>
      <returns>
            The string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerProcessInfo.Exists">
      <summary>
            Gets a value indicating whether a network variable process exists.
            </summary>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerProcessInfo.FullPath">
      <summary>
            Gets the full path to a network variable process.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerProcessInfo.Name">
      <summary>
            Gets a value that indicates the name of the network variable process this instance represents.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerProcessInfo.IsRunning">
      <summary>
            Gets a value indicating whether a network variable process is started.
            </summary>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerProcessInfo.RelativePath">
      <summary>
            Gets the path to a network variable process relative to the local machine.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ServerVariable">
      <summary>
            Defines methods to create and configure network variables.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.Create(System.String,System.String)">
      <summary>
            Creates a network variable in the specified process with default configuration values.
            </summary>
      <param name="processName">
            The process that contains the variable.
            </param>
      <param name="variableName">
            The name of the variable.
            </param>
      <returns>
            A ServerVariableInfo that represents
            the new variable.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null</exception>
      <exception cref="T:System.InvalidOperationException">
            The specified process does not exist.
            
            -or-
            
            A variable with the same name already exists in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.Create(System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            Creates a network variable in the specified process with the specified configuration.
            </summary>
      <param name="processName">
            The name of the process that contains the variable.
            </param>
      <param name="variableName">
            The name of the variable.
            </param>
      <param name="singleWriter">
            If true, the variable only accepts connections from one writer at a time.
            </param>
      <param name="maxItems">
            The number of items the variable buffer holds.
            </param>
      <returns>
            A ServerVariableInfo that represents the variable.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">maxItems (parameter) is negative.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The specified process does not exist.
            
            -or-
            
            A variable with the same name already exists in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.Create(NationalInstruments.NetworkVariable.VariableCreationOptions)">
      <summary>
            Creates a network variable with the specified configuration.
            </summary>
      <param name="options">
            A VariableCreationOptions object that specifies
            the location, name, and configuration of a network variable.
            </param>
      <returns>
            A ServerVariableInfo that represents the variable.
            </returns>
      <exception cref="T:System.ArgumentException">
            The VariableCreationOptions indicates a process name or
            variable name that contains characters that cannot be converted using the system default code page.
            Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">options (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The specified process does not exist.
            
            -or-
            
            A variable with the same name already exists in the specified process.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.CreateMultiple(System.String,System.String[])">
      <summary>
            Creates multiple network variables with the default configuration in the specified process.
            </summary>
      <param name="processName">
            The name of the process that contains the variables.
            </param>
      <param name="variableNames">
            An array of variable names.
            </param>
      <returns>
            An array of ServerVariableInfo objects that
            represent each created variable.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableNames (parameter) is null</exception>
      <exception cref="T:System.InvalidOperationException">
            The specified process does not exist.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.CreateMultiple(System.String,System.String[],System.Boolean,System.Int32)">
      <summary>
            Creates and configures multiple network variables in the specified process with the specified configuration.
            </summary>
      <param name="processName">
            The name of the process that contains the variables.
            </param>
      <param name="variableNames">
            An array of variable names.
            </param>
      <param name="singleWriter">
            If true, each network variable only accepts connections from one writer at a time.
            </param>
      <param name="maxItems">
            The number of items each network variable buffer holds.
            </param>
      <returns>
            An array of ServerVariableInfo objects
            that represent each variable that is created.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableNames (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableNames (parameter) is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">maxItems (parameter) is negative.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The specified process does not exist.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.CreateMultiple(System.Collections.Generic.IEnumerable{NationalInstruments.NetworkVariable.VariableCreationOptions})">
      <summary>
            Creates and configures multiple network variables using a collection of
            VariableCreationOptions objects.
            </summary>
      <param name="options">
            A collection of VariableCreationOptions objects
            that describes the variables that should be created.
            </param>
      <returns>
            An array of ServerVariableInfo objects
            that represent each variable that is created.
            </returns>
      <exception cref="T:System.ArgumentException">
            	A process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">options (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The specified process does not exist.
            
            -or-
            A ProcessName in 
            		options (parameter) is reserved.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.Delete(System.String,System.String)">
      <summary>
            Deletes the specified network variable contained within the specified process.
            </summary>
      <param name="processName">
            The name of the process that contains the variable.
            </param>
      <param name="variableName">
            The name of the variable.
            </param>
      <returns>true if the variable existed and is deleted; false if
            either the process or variable did not exist when the method is called.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the same name already exists in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.Exists(System.String,System.String)">
      <summary>
            Determines if a network variable exists.
            </summary>
      <param name="processName">
            The name of the process that contains the variable.
            </param>
      <param name="variableName">
            The name of the variable.
            </param>
      <returns>true if the specified process contains a network variable with the specified name.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.InvalidOperationException">processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.GetDescription(System.String,System.String)">
      <summary>
            Gets the description of a network variable.
            </summary>
      <param name="processName">
            The name of the process that contains the network variable.
            </param>
      <param name="variableName">
            The name of the network variable.
            </param>
      <returns>
            The description of the network variable.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null</exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the specified name does not exist in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.GetItemCapacity(System.String,System.String)">
      <summary>
            Gets the maximum number of items a network variable server-side buffer can hold.
            </summary>
      <param name="processName">
            The name of the process that contains the variable.
            </param>
      <param name="variableName">
            The name of the variable.
            </param>
      <returns>
            The maximum number of items the network variable server-side buffer can hold.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null</exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the specified name does not exist in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.GetSingleWriter(System.String,System.String)">
      <summary>
            Indicates whether a variable is configured to accept connections from only one writer at a time.
            </summary>
      <param name="processName">
            The name of the process that contains the variable.
            </param>
      <param name="variableName">
            The name of the variable.
            </param>
      <returns>true if the variable is configured to refuse writer connections if a writer is already connected.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null</exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the specified name is not contained in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.GetVariableType(System.String,System.String)">
      <summary>
            Gets the data type of a network variable.
            </summary>
      <param name="processName">
            The name of the process that contains the variable.
            </param>
      <param name="variableName">
            The name of the variable.
            </param>
      <returns>
            	The data type of the network variable.
            </returns>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null</exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the specified name is not contained in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.IsTypeSupported(System.Type)">
      <summary>
            Determines if a type is supported by network variables.
            </summary>
      <param name="variableType">
            A data type.
            </param>
      <returns>true if the type is supported by network variables; otherwise false.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.SetDescription(System.String,System.String,System.String)">
      <summary>
            Sets the description of a network variable.
            </summary>
      <param name="processName">
            The name of the process that contains the network variable.
            </param>
      <param name="variableName">
            The name of the network variable.
            </param>
      <param name="description">
            The description of the network variable.
            </param>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-description (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null
            -or-
            description (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the specified name is not contained in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.SetItemCapacity(System.String,System.String,System.Int32)">
      <summary>
            Sets the number of items a network variable server-side buffer can hold.
            </summary>
      <param name="processName">
            The name of the process that contains the network variable.
            </param>
      <param name="variableName">
            The name of the network variable.
            </param>
      <param name="maxItems">
            The number of items the buffer holds.
            </param>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">maxItems (parameter) is negative.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the specified name is not contained in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.SetSingleWriter(System.String,System.String,System.Boolean)">
      <summary>
            Sets a value that determines if a network variable supports connections from multiple writers.
            </summary>
      <param name="processName">
            The name of the process that contains the network variable.
            </param>
      <param name="variableName">
            The name of the network variable.
            </param>
      <param name="isSingleWriter">
            If true, the network variable refuses connections from writers if a
            writer is already connected.
            </param>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null</exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the specified name is not found in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariable.SetVariableType(System.String,System.String,System.Type)">
      <summary>
            Sets the data type of a network variable.
            </summary>
      <param name="processName">
            The name of the process that contains the network variable.
            </param>
      <param name="variableName">
            The name of the network variable.
            </param>
      <param name="variableType">
            The new type of the network variable.
            </param>
      <exception cref="T:System.ArgumentException">processName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-variableName (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            variableName (parameter) is null</exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the specified name is not found in the specified process.
            
            -or-
            processName (parameter) is a reserved process name.
            
            -or-
            variableType (parameter) is not supported by network variables.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ServerVariableInfo">
      <summary>
            Represents a network variable and provides methods to create, delete, and configure the variable.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariableInfo.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the 
            ServerVariableInfo class with default
            property values.
            </summary>
      <param name="processName">
            The name of the process that contains the variable.
            </param>
      <param name="name">
            The name of the variable.
            </param>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            name (parameter) is null</exception>
      <exception cref="T:System.InvalidOperationException">processName (parameter) is a reserved process name.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariableInfo.#ctor(System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            Initializes a new ServerVariableInfo object with
            the specified property values.
            </summary>
      <param name="processName">
            The name of the process that contains the variable.
            </param>
      <param name="name">
            The name of the variable.
            </param>
      <param name="singleWriter">
            If true, the network variable rejects connections from writers if another
            writer is already connected.
            </param>
      <param name="maxItems">
            The maximum number of items the variable server-side buffer can hold.
            </param>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -or-
            name (parameter) is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">maxItems (parameter) is negative.
            </exception>
      <exception cref="T:System.InvalidOperationException">processName (parameter) is a reserved process name.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariableInfo.#ctor(NationalInstruments.NetworkVariable.VariableCreationOptions)">
      <summary>
            Initializes a new instance of the 
            ServerVariableInfo class using a
            VariableCreationOptions object to specify the
            network variable's attributes.
            </summary>
      <param name="creationOptions">
            A VariableCreationOptions object that describes
            the network variable and its attributes.
            </param>
      <exception cref="T:System.ArgumentNullException">creationOptions (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariableInfo.Create">
      <summary>
            Creates a network variable with the configuration specified by this object.
            </summary>
      <exception cref="T:System.ArgumentException">
            The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-
            The variable name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The process does not exist.
            
            -or-
            
            A variable with the same name already exists in the specified process.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariableInfo.Delete">
      <summary>
            Deletes a network variable.
            </summary>
      <returns>true if the network variable existed and is deleted; false
            if the network variable did not exist when the method is called.
            </returns>
      <exception cref="T:System.ArgumentException">
            The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-
            The variable name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ServerVariableInfo.ToString">
      <summary>
            Gets a String that represents the current 
            ServerVariableInfo object.
            </summary>
      <returns>
            This method returns a human-readable string that represents a 
            ServerVariableInfo object.
            </returns>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerVariableInfo.Description">
      <summary>
            Gets or sets the description of a network variable.
            </summary>
      <exception cref="T:System.ArgumentException">
            	The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-
            The variable name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-
            The description contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">
                The description is set to null</exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred. Check the Message  property of the exception for more information.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerVariableInfo.Exists">
      <summary>
            Gets a value that indicates if a network variable exists on the local machine.
            </summary>
      <exception cref="T:System.ArgumentException">
            The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-
            The variable name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerVariableInfo.FullPath">
      <summary>
            Gets the full path to a network variable.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerVariableInfo.Name">
      <summary>
            Gets the name of a network variable.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerVariableInfo.Process">
      <summary>
            Gets an object that represents the process that contains a network variable.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerVariableInfo.RelativePath">
      <summary>
            Gets the path to a network variable relative to the local machine.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerVariableInfo.SingleWriter">
      <summary>
            Gets or sets a value that determines whether the variable accepts connections from multiple writers.
            </summary>
      <exception cref="T:System.ArgumentException">
            The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-
            The variable name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the exception's Message property for more information.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerVariableInfo.ItemCapacity">
      <summary>
            Gets or sets a value that determines the size of the network variable server-side buffer.
            </summary>
      <exception cref="T:System.ArgumentException">
            The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-
            The variable name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            A negative buffer size is specified.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error occurred.  Check the Message property of the exception for more information.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ServerVariableInfo.VariableType">
      <summary>
            Gets or sets the data type of a network variable.
            </summary>
      <exception cref="T:System.ArgumentException">
            The process name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            -or-
            The variable name contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The specified type is not supported.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.VariableCreationOptions">
      <summary>
            Represents information needed to create and configure a network variable.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.VariableCreationOptions.#ctor(System.String,System.String)">
      <summary>
            Initializes a new VariableCreationOptions object
            that you use to create a network variable with the specified name in the specified process.
            </summary>
      <param name="processName">
            The name of the process that will contain the network variable.
            </param>
      <param name="variableName">
            The name of the network variable.
            </param>
      <exception cref="T:System.ArgumentNullException">processName (parameter) is null.
            
            -OR-
            variableName (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">processName (parameter) is a reserved process name.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.VariableCreationOptions.ToString">
      <summary>
            Gets the string representation of an object.
            </summary>
      <returns>
            The string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.VariableCreationOptions.Description">
      <summary>
            Gets or sets the description of a network variable.
            </summary>
      <exception cref="T:System.ArgumentNullException">
                The description is set to null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.VariableCreationOptions.SingleWriter">
      <summary>
            Gets or sets a value that determines whether the network variable accepts connections from multiple writers.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.VariableCreationOptions.ItemCapacity">
      <summary>
            Gets or sets a value that determines the number of items in the network variable server-side buffer .
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            A negative buffer size is specified.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.VariableCreationOptions.ProcessName">
      <summary>
            Gets the name of the network variable process that contains the variable.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.VariableCreationOptions.VariableName">
      <summary>
            Gets the name of the network variable.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.VariableCreationOptions.VariableType">
      <summary>
            Gets or sets the data type of the network variable.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            The specified type is not supported.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding">
      <summary>
            Represents the information required to manage the connection to a single network variable. 
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding.#ctor">
      <summary>
            Initializes a new instance of 
            NetworkVariableBinding.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding.GetData">
      <summary>
            Gets the current value of the underlying network variable and data about the status of the read operation.
            </summary>
      <returns>
            A NetworkVariableData&lt;T&gt; that contains the
            read data.  The only valid type for TValue is 
            Object.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            The NetworkVariableBinding is not added
            to a NetworkVariableBindingCollection.
            	
            -or-
            
            The underlying network variable connection is unable to get data, and no value is provided through the
            ReadFailed event or
            the DefaultReadValue property.
            	</exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding.GetValue">
      <summary>
            Gets the current value of the underlying network variable.
            </summary>
      <returns>
            The current value of the underlying network variable.
            </returns>
      <exception cref="T:System.InvalidOperationException">NetworkVariableBinding is not included in
            Bindings.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding.SetValue(System.Object)">
      <summary>
            Sets the value of the underlying network variable.
            </summary>
      <param name="value">
            The value to set.
            </param>
      <exception cref="T:System.ArgumentException">value (parameter) is a string that contains characters that cannot be converted using the system
            default code page.  For more information, refer to Unicode Support in the Network Variable Class Library.
            </exception>
      <exception cref="T:System.InvalidOperationException">NetworkVariableBinding is not included in
            Bindings.
            
            -or-
            BindingMode is
            Read.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding.BindingType">
      <summary>
            Gets or sets the type for the data received from the network variable. 
            The data source attempts to convert the received data to this type when data binding.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection">
      <summary>
            Represents a strongly typed collection of 
            NetworkVariableBinding objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.Add(NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding)">
      <summary>
            Adds an item to the end of the collection.
            </summary>
      <param name="value">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.NotSupportedException">value (parameter) has been disposed.
            
            -or-
            value (parameter) is in another 
                    NetworkVariableBindingCollection.
            
            -or-
            value (parameter) is already in this collection.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.AddRange(NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding[])">
      <summary>
            Adds an array of NetworkVariableBinding
            objects to the end of the collection.
            </summary>
      <param name="value">
            Array of NetworkVariableBinding objects 
            to add to the collection.
            </param>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            
            -or-
            
            An element in value (parameter) is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            		An element in value (parameter) has been disposed.
            
            -or-
            
            		An element in value (parameter) is in another 
            NetworkVariableBindingCollection.
            
            -or-
            
            		An element in value (parameter) is already in this collection.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.Contains(NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding)">
      <summary>
            Determines whether the specified element is in the collection.
            </summary>
      <param name="value">Item to locate in the collection.</param>
      <returns>true if the collection contains value (parameter).
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.CopyTo(NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection.
            </param>
      <exception cref="T:System.ArgumentNullException">array (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">array (parameter) is multidimensional.
            
            - or -
            index (parameter) is equal to or greater than the length of array (parameter).
            
            -or-
            
            The number of elements in the collection is greater than the available space between
            index (parameter) and the end of array (parameter).
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is less than the lower bound of array (parameter).
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.IndexOf(NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="value">
            Item to locate in the collection.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.Insert(System.Int32,NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="value">
            Item to insert into the collection.
            </param>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.NotSupportedException">value (parameter) has been disposed.
            
            -or-
            value (parameter) is in another NetworkVariableBindingCollection.
            
            -or-
            value (parameter) is already in this collection.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is less than zero.
            
            -or-
            

index (parameter) is greater than 
            Count.
            


            -or-
            index (parameter) is greater than 
            Count.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.Remove(NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding)">
      <summary>
            Removes the first occurrence of the specified value.
            </summary>
      <param name="value">
            Value to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is less than zero.
            
            -or-
            

index (parameter) is greater than or equal to 
            Count.
            


            -or-
            index (parameter) is greater than or equal to 
            Count.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.Item(System.Int32)">
      <summary>
            Gets or sets the NetworkVariableBinding
            at the specified index. In Visual C#, this property is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the network variable to locate in the collection.
            </param>
      <exception cref="T:System.ArgumentNullException">
            	The value is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            		The value has been disposed.
            
            -or-
            
            		The value is in another 
                    NetworkVariableBindingCollection.
            
            -or-
            
            		The value is already in this collection.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is less than zero.
            
            -or-
            

index (parameter) is greater than the last index of the collection.
            


            -or-
            index (parameter) is greater than the last index of the collection.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.Item(System.String)">
      <summary>
            Gets the NetworkVariableBinding
            with the specified name. In Visual C#, this property is the indexer.
            </summary>
      <param name="name">
            The name of the NetworkVariableBinding
            to locate in the collection.
            </param>
      <exception cref="T:System.ArgumentNullException">
            	The value is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            No binding with the given name (parameter) exists in the 
            NetworkVariableBindingCollection</exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WebForms.NetworkVariableBindingCollection.Count">
      <summary>
            Gets the number of elements in the NetworkVariableBindingCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableBindingMode">
      <summary>
            Specifies whether binding to a network variable is one way or two way.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableBindingMode.Read">
      <summary>
            The binding is one-way. The user only has permission to 
            read the value of the network variable.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableBindingMode.ReadWrite">
      <summary>
            The binding is two-way.  The user has permission to read from and write to the network variable.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableBindingType">
      <summary>
            Represents the data type of the property you are binding to.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBindingType.#ctor">
      <summary>
            Initializes a new instance of 
            NetworkVariableBindingType.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBindingType.Convert(System.Object)">
      <summary>
            Converts the given object to an instance of the 
            TargetType.
            </summary>
      <param name="data">
            The object to convert.
            </param>
      <returns>
            The converted data with a data type that is equal to or is a subclass of the
            TargetType.
            </returns>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingType.UnderlyingType">
      <summary>
            Overrides the method in EnumObject.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingType.Boolean">
      <summary>
            Gets a Boolean binding type.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingType.Int32">
      <summary>
            Gets an Int32 binding type.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingType.Double">
      <summary>
            Gets a Double binding type.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingType.String">
      <summary>
            Gets a String binding type.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingType.DateTime">
      <summary>
            Gets a DateTime binding type.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingType.Object">
      <summary>
            Gets an Object binding type.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingType.TargetType">
      <summary>
            Gets the data type represented by this
            NetworkVariableBindingType.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBindingType.Name">
      <summary>
            Gets the name of the binding type.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableBufferedSubscriber`1">
      <summary>
            Provides a way to read network variable data from a client side buffer.
            </summary>
      <typeparam name="TValue">
            The type of the variable to read. The following types are supported by TValue (generic type parameter):
            Object;
            Byte, Byte[], Byte[,];
            UInt16, UInt16[], UInt16[,];
            UInt32, UInt32[], UInt32[,];
            UInt64, UInt64[], UInt64[,];
            SByte, SByte[], SByte[,];
            Int16, Int16[], Int16[,];
            Int32, Int32[], Int32[,];
            Int64, Int64[], Int64[,];
            Boolean, Boolean[], Boolean[,];
            Single, Single[], Single[,];
            Double, Double[], Double[,];
            String, String[], String[,]; and 
            AnalogWaveform&lt;T&gt;, AnalogWaveform&lt;T&gt;[].
            	</typeparam>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableManager">
      <summary>
            Provides an abstract base class for all network variable reader and writer functionality. 
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.Connect">
      <summary>
            Connects to the Location of the
            NetworkVariableManager.
            </summary>
      <exception cref="T:System.ArgumentException">Location contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.Connect(System.TimeSpan)">
      <summary>
            Connects to the Location of the
            NetworkVariableManager with the specified timeout.
            </summary>
      <param name="timeout">
            The TimeSpan value specifying how long the connection waits.
            </param>
      <exception cref="T:System.ArgumentException">Location contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">timeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the timeout (parameter) is greater than the maximum integer value.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.Dispose">
      <summary>
            Releases the resources used by NetworkVariableManager.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.Disconnect">
      <summary>
            Disconnects the NetworkVariableManager from the
            Location.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the NetworkVariableManager
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.FlushAllConnections">
      <summary>
            Flushes all pending writes to network variables.
            </summary>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error happened.  Check the exception's message property for more information.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.FlushAllConnections(System.TimeSpan)">
      <summary>
            Flushes all pending writes to network variables with the specified timeout.
            </summary>
      <param name="timeout">
            The amount of time to wait for the flush operation to complete. If the flush operation
            does not complete within this time period, a TimeoutException is
            thrown.  To block until the flush completes, specify MaxValue.
            If you do not want to wait for the flush to complete, specify Zero.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The specified timeout was less than Zero.
            
            -or-
            
            The specified timeout is too large.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error happened.  Check the Message property of the exception for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The specified timeout elapsed before the flush operation could complete.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.ThrowExceptionIfDisposed">
      <summary>
            Throws an ObjectDisposedException if the component has been disposed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.ConnectAsync">
      <summary>
            Asynchronously connects to the Location of the
            NetworkVariableManager.
            </summary>
      <exception cref="T:System.ArgumentException">Location contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.InvalidOperationException">NetworkVariableManager has a 
            ConnectAsync call in progress.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.ConnectAsync(System.TimeSpan)">
      <summary>
            Asynchronously connects to the Location of the
            NetworkVariableManager with the specified timeout.
            </summary>
      <param name="timeout">
            The TimeSpan value specifying how long to wait before the operation times out.
            </param>
      <exception cref="T:System.ArgumentException">Location contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.InvalidOperationException">NetworkVariableManager has a 
            ConnectAsync call in progress.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">timeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the timeout (parameter) is greater than the maximum integer value.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.ToString">
      <summary>
            Gets a string representation of the object.
            </summary>
      <returns>
            Returns a string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.OnConnectCompleted(NationalInstruments.NetworkVariable.ConnectCompletedEventArgs)">
      <summary>
            Raises the ConnectCompleted event.
            </summary>
      <param name="e">
            A ConnectCompletedEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableManager.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="e">
            A PropertyChangedEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableManager.SynchronizeCallbacks">
      <summary>
            Gets or sets how events and callback delegates are invoked.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableManager.IsDisposed">
      <summary>
            Gets a value indicating whether the component has been disposed.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableManager.ConnectionStatus">
      <summary>
            Gets a value indicating the connection status of the NetworkVariableManager.
            </summary>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableManager.Location">
      <summary>
            Gets the file path  NetworkVariableManager is connected to.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.NetworkVariableManager.ConnectCompleted">
      <summary>
            Occurs when an asynchronous connect completes or raises an exception.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.NetworkVariableManager.PropertyChanged">
      <summary>
            Occurs when a property changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBufferedSubscriber`1.#ctor(System.String)">
      <summary>
            Initializes a new instance of the NetworkVariableBufferedSubscriber&lt;T&gt;
            class with the specified path name.
            </summary>
      <param name="location">
            The path name of the network variable. 
            </param>
      <exception cref="T:System.ArgumentException">location (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.ArgumentNullException">location (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of the NetworkVariableReader&lt;T&gt; is invalid.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBufferedSubscriber`1.ReadData">
      <summary>
            Reads the next value from the client side buffer.
            </summary>
      <returns>
            A NetworkVariableData&lt;T&gt; that contains information about
            the read data.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            The type of the data being read does not match the type of the
            NetworkVariableReader&lt;T&gt;.
            
            - or -
            Connect has not been called successfully.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The type of the data being read cannot be converted to an equivalent .NET type.
            
            - or -
            
            The array dimension of the read data is not supported.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBufferedSubscriber`1.ReadData(NationalInstruments.NetworkVariable.BufferedSubscriberDataStatus@)">
      <summary>
            Reads the next value from the client side buffer with
            BufferedSubscriberDataStatus describing the state of the buffer.
            </summary>
      <param name="status">
            Upon return, contains a BufferedSubscriberDataStatus describing
            the state of the buffer.
            </param>
      <returns>
            A NetworkVariableData&lt;T&gt; that contains information about
            the read data.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            The type of the data being read does not match the type of the
            NetworkVariableReader&lt;T&gt;.
            
            - or -
            Connect has not been called successfully.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The type of the data being read cannot be converted to an equivalent .NET type.
            
            - or -
            
            The array dimension of the data being read is not supported.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBufferedSubscriber`1.ItemCapacity">
      <summary>
            Gets or sets the size of the client side buffer.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than or equal to 1.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBufferedSubscriber`1.ItemCount">
      <summary>
            Gets the number of items in the client side buffer.
            </summary>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1">
      <summary>
            Provides a way to write network variable data to a client side buffer.
            </summary>
      <typeparam name="TValue">
            The type of the variable to write. The following types are supported by TValue (generic type parameter):
            Object;
            Byte, Byte[], Byte[,];
            UInt16, UInt16[], UInt16[,];
            UInt32, UInt32[], UInt32[,];
            UInt64, UInt64[], UInt64[,];
            SByte, SByte[], SByte[,];
            Int16, Int16[], Int16[,];
            Int32, Int32[], Int32[,];
            Int64, Int64[], Int64[,];
            Boolean, Boolean[], Boolean[,];
            Single, Single[], Single[,];
            Double, Double[], Double[,];
            String, String[], String[,]; and AnalogWaveform&lt;T&gt;, AnalogWaveform&lt;T&gt;[].
            			</typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1.#ctor(System.String)">
      <summary>
            Initializes a new instance of the NetworkVariableBufferedWriter&lt;T&gt;
            class with the specified path name.
            </summary>
      <param name="location">
            The path name of the network variable. 
            </param>
      <exception cref="T:System.ArgumentNullException">location (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of the NetworkVariableReader&lt;T&gt; is invalid.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1.WriteData(NationalInstruments.NetworkVariable.NetworkVariableData{`0})">
      <summary>
            Writes data to the client side buffer.
            </summary>
      <param name="data">
            A NetworkVariableData&lt;T&gt; containing the value to write
            to the buffer.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and the value of data (parameter) contains characters 
            that cannot be converted using the system default ANSI code page.  
            Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The buffer is full and remained full for the duration of the timeout.
            </exception>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1.WriteData(NationalInstruments.NetworkVariable.NetworkVariableData{`0},System.TimeSpan)">
      <summary>
            Writes data to the client side buffer with the specified timeout.
            </summary>
      <param name="data">
            A NetworkVariableData&lt;T&gt; containing the value to write
            to the buffer.
            </param>
      <param name="bufferFullTimeout">
            The TimeSpan value specifying how long the write waits if the client buffer is full.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and the value of data (parameter) contains characters 
            that cannot be converted using the system default ANSI code page.   
            Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The buffer is full and remains full for the duration of the timeout.
            </exception>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">bufferFullTimeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of bufferFullTimeout (parameter) is greater than the maximum integer value.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1.WriteValue(`0)">
      <summary>
            Writes a value to the client side buffer.
            </summary>
      <param name="value">
            The value to write to the buffer.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and value (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The buffer is full and remains full for the duration of the timeout.
            </exception>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1.WriteValue(`0,System.TimeSpan)">
      <summary>
            Writes a value to the client side buffer with the specified timeout.
            </summary>
      <param name="value">
            The value to write to the buffer.
            </param>
      <param name="bufferFullTimeout">
            The TimeSpan value specifying how long the write waits if the client buffer is full.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and value (parameter) contains characters that cannot be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The buffer is full and remains full for the duration of the timeout.
            </exception>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">bufferFullTimeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of bufferFullTimeout (parameter) is greater than the maximum integer value.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1.OnDataTransferred(System.EventArgs)">
      <summary>
            Raises the DataTransferred event.
            </summary>
      <param name="args">
            An  EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1.ItemCapacity">
      <summary>
            Gets or sets the size of the client side buffer.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than or equal to 1.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1.ItemCount">
      <summary>
            Gets the number of items in the client side buffer.
            </summary>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.NetworkVariableBufferedWriter`1.DataTransferred">
      <summary>
            Occurs when data from the client side buffer is written to the server.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableData`1">
      <summary>
            Encapsulates the raw data value.
            </summary>
      <typeparam name="TValue">
            The type of the data. The following types are supported by TValue (generic type parameter):
            Object;
            Byte, Byte[], Byte[,];
            UInt16, UInt16[], UInt16[,];
            UInt32, UInt32[], UInt32[,];
            UInt64, UInt64[], UInt64[,];
            SByte, SByte[], SByte[,];
            Int16, Int16[], Int16[,];
            Int32, Int32[], Int32[,];
            Int64, Int64[], Int64[,];
            Boolean, Boolean[], Boolean[,];
            Single, Single[], Single[,];
            Double, Double[], Double[,];
            String, String[], String[,]; and 
            AnalogWaveform&lt;T&gt;, AnalogWaveform&lt;T&gt;[].
            			</typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableData`1.#ctor(`0)">
      <summary>
            Initializes a new instance of the NetworkVariableData&lt;T&gt; class
            with the specified value.
            </summary>
      <param name="value">
            The raw data value.
            </param>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of the NetworkVariableData&lt;T&gt; is invalid.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableData`1.GetValue">
      <summary>
            Returns the raw value of the network variable.
            </summary>
      <returns>
            The raw value of the network variable.
            </returns>
      <exception cref="T:System.InvalidOperationException">HasValue is false.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableData`1.HasValue">
      <summary>
            Gets a value indicating whether the value is available.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableData`1.HasTimeStamp">
      <summary>
            Gets a value indicating whether the TimeStamp is available.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableData`1.TimeStamp">
      <summary>
            Gets the timestamp of the network variable data.
            </summary>
      <exception cref="T:System.InvalidOperationException">HasTimeStamp is false.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableData`1.HasQuality">
      <summary>
            Gets a value indicating whether Quality is available.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableData`1.Quality">
      <summary>
            Gets the quality value of the data.
            </summary>
      <exception cref="T:System.InvalidOperationException">HasQuality is false.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableData`1.IsQualityGood">
      <summary>
            Gets a value indicating whether the Quality value
            is good.
            </summary>
      <exception cref="T:System.InvalidOperationException">HasQuality is false.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableData`1.HasServerError">
      <summary>
            Gets a value indicating whether ServerError is available.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableData`1.ServerError">
      <summary>
            Gets any server or device error associated with the network variable data.
            </summary>
      <exception cref="T:System.InvalidOperationException">HasServerError is false.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableDataQualities">
      <summary>
            Specifies quality values.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.Good">
      <summary>
            The quality is good.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.Stale">
      <summary>
            The value might not be the most current value from the data source.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.SensorFailure">
      <summary>
            The sensor failed.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.DeviceFailure">
      <summary>
            A general device error.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.ServerFailure">
      <summary>
            Server failure.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.NetworkFailure">
      <summary>
            A general communications failure.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.NonExistent">
      <summary>
            Unable to locate variable in the Shared Variable Engine.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.NoKnownValue">
      <summary>
            The network variable has no value.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.Inactive">
      <summary>
            The network variable is inactive.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.Forced">
      <summary>
            The PLC registers can be forced to a user specified value.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.LowLimited">
      <summary>
            The value has been coerced to a range.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.HighLimited">
      <summary>
            The value has been coerced to a range.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.Constant">
      <summary>
            The constant value.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.SensorInaccurate">
      <summary>
            Sensor inaccurate.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.EULimitsExceeded">
      <summary>
            The value has exceeded the defined engineering units defined for the point.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.Subnormal">
      <summary>
            This is a generic error.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.MathException">
      <summary>
            A math error has occurred.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.CommLinkFailure">
      <summary>
            The communications link failed.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.Connecting">
      <summary>
            Connecting to the server.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.DnsFailure">
      <summary>
            The DNS lookup failed for the server.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.HostUnreachable">
      <summary>
            The server is not reachable.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.ServiceLookupFailure">
      <summary>
            The service lookup failed for the server.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.Disconnected">
      <summary>
            The connection to the server was disconnected.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.ProcessFailure">
      <summary>
            The process was not found or is not responding.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.ResolveUrlFailure">
      <summary>
            Failed to resolve URL for the network variable.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.AccessDenied">
      <summary>
            Read access is denied to the network variable.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.InvalidUrl">
      <summary>
            An invalid URL for this network variable.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.AppDefined1">
      <summary>
            The meaning is specific to the server.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.AppDefined2">
      <summary>
            The meaning is specific to the server.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.AppDefined3">
      <summary>
            The meaning is specific to the server.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.InAlarm">
      <summary>
            An alarm has been triggered on this network variable.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.SubscribeFailed">
      <summary>
            The subscribe failed.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.ExtendedInfo">
      <summary>
            Extended information is available.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.ReadBufferFull">
      <summary>
            The client side read buffer is full. The next value will overflow buffer.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.ReadBufferOverflow">
      <summary>
            The client side read buffer overflowed. The oldest value in the buffer was lost.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.ServerWriteBufferFull">
      <summary>
            The server side write buffer is full. The next write will overflow buffer.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.NetworkVariableDataQualities.ServerWriteBufferOverflow">
      <summary>
            The server side write buffer overflowed. The oldest value in the buffer was lost.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ReadDataCompletedEventArgs`1">
      <summary>
            Provides data for the ReadDataCompleted event.
            </summary>
      <typeparam name="TValue">
            The type of the variable that was read. The following types are supported by TValue (generic type parameter):
            Object;
            Byte, Byte[], Byte[,];
            UInt16, UInt16[], UInt16[,];
            UInt32, UInt32[], UInt32[,];
            UInt64, UInt64[], UInt64[,];
            SByte, SByte[], SByte[,];
            Int16, Int16[], Int16[,];
            Int32, Int32[], Int32[,];
            Int64, Int64[], Int64[,];
            Boolean, Boolean[], Boolean[,];
            Single, Single[], Single[,];
            Double, Double[], Double[,];
            String, String[], String[,]; and
            AnalogWaveform&lt;T&gt;, AnalogWaveform&lt;T&gt;[].
            			</typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ReadDataCompletedEventArgs`1.#ctor(NationalInstruments.NetworkVariable.NetworkVariableData{`0},System.Exception,System.Boolean,System.Object)">
      <summary>
            Initializes a new instance of the ReadDataCompletedEventArgs&lt;T&gt;
            class with the specified data, error, whether the asynchronous operation was canceled, and the optional user-supplied state object.
            </summary>
      <param name="data">
            The NetworkVariableData&lt;T&gt; that contains the read data.
            </param>
      <param name="error">
            An error, if an error occurred, during the asynchronous operation.
            </param>
      <param name="canceled">
            A value indicating whether the asynchronous operation was canceled.
            </param>
      <param name="userState">
            The optional user-supplied state object.
            </param>
      <exception cref="T:System.ArgumentNullException">error (parameter) is null and data (parameter) is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ReadDataCompletedEventArgs`1.Data">
      <summary>
            Gets a NetworkVariableData&lt;T&gt; that contains information about
            the read data.
            </summary>
      <exception cref="T:System.Reflection.TargetInvocationException">
            The Error property has been set by the asynchronous
            operation.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ReadFailureCause">
      <summary>
            Specifies the cause of the read failure.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.ReadFailureCause.Unconnected">
      <summary>
            Read failed because the connection has not been made.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.ReadFailureCause.NoData">
      <summary>
            Read failed because there is no data.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ConnectionFailedEventArgs">
      <summary>
            Provides information when a data source connection fails.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ConnectionFailedEventArgs.#ctor(NationalInstruments.NetworkVariable.NetworkVariableBindingBase,System.Exception)">
      <summary>
            Creates a new instance of the ConnectionFailedEventArgs
            class.
            </summary>
      <param name="binding">
            The NetworkVariableBindingBase for which the
            connection failed.
            </param>
      <param name="error">
            The Exception that describes why the connection failed, or 
            null if the connection failed without throwing an exception.
            </param>
      <exception cref="T:System.ArgumentNullException">binding (parameter) is null.
            -OR-error (parameter) is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ConnectionFailedEventArgs.Binding">
      <summary>
            Gets the binding for which the connection failed.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ConnectionFailedEventArgs.Error">
      <summary>
            Gets the error that describes why the connection failed.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.ReadFailedEventArgs`1">
      <summary>
            Provides data when a data source read fails.
            </summary>
      <typeparam name="TBinding">
            The associated binding class.
            </typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.ReadFailedEventArgs`1.#ctor(`0,NationalInstruments.NetworkVariable.ReadFailureCause)">
      <summary>
            Initializes a new instance of ReadFailedEventArgs&lt;T&gt; with the specified
            binding and failure cause.
            </summary>
      <param name="binding">
            The binding that describes the network variable which failed to read. 
            </param>
      <param name="failureCause">
            The ReadFailureCause of the read failure.
            </param>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ReadFailedEventArgs`1.Binding">
      <summary>
            Gets the binding that describes the network variable which failed to read.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ReadFailedEventArgs`1.FailureCause">
      <summary>
            Gets the cause of the read failure.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.ReadFailedEventArgs`1.Value">
      <summary>
            Gets or sets the value that is returned when attempting to 
            read the value of the unconnected network variable.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WindowsForms.BeforeTypeToolTipEventArgs">
      <summary>
            Provides a way to customize the text displayed in the tooltip.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.BeforeTypeToolTipEventArgs.#ctor(System.Type,System.String)">
      <summary>
            Initializes a new instance of BeforeTypeToolTipEventArgs
            with the specified type and tooltip text.
            </summary>
      <param name="type">
            The network variable type for the tooltip.
            </param>
      <param name="toolTipText">
            The tooltip text.
            </param>
      <exception cref="T:System.ArgumentNullException">toolTipText (parameter) is null.
            
                    -or-
                     type (parameter) is null. 
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.BeforeTypeToolTipEventArgs.#ctor(System.Type,System.String,System.String)">
      <summary>
            Initializes a new instance of BeforeTypeToolTipEventArgs
            with the specified type and tooltip text.
            </summary>
      <param name="type">
            The network variable type for the tooltip.
            </param>
      <param name="toolTipText">
            The tooltip text.
            </param>
      <param name="itemPath">
            The path to the network variable item.
            </param>
      <exception cref="T:System.ArgumentNullException">toolTipText (parameter) is null.
            
                    -or-
                     type (parameter) is null. 
            
            -or-
            itemPath (parameter) is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.BeforeTypeToolTipEventArgs.ItemPath">
      <summary>
            Gets the path to the network variable displayed in the tooltip.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.BeforeTypeToolTipEventArgs.Type">
      <summary>
            Gets the type, such as a float or double, of the network variable displayed in the tooltip.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.BeforeTypeToolTipEventArgs.ToolTipText">
      <summary>
            Gets or sets the tooltip text.
            </summary>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding">
      <summary>
            Represents the information required to manage the connection to a single network variable. 
            The binding also provides information about the current status of the network variable connection.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding.#ctor">
      <summary>
            Initializes a new instance of NetworkVariableBinding.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding.Dispose">
      <summary>
            Releases all resources used by the NetworkVariableBinding object.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding.Connect">
      <summary>
            Connects the NetworkVariableBinding 
            object to a network variable.
            </summary>
      <exception cref="T:System.ArgumentException">Location contains
            characters that cannot be converted using the system default code page.  
            Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.DllNotFoundException">
            The ninetv.dll file is not present on the system.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The Location property is not specified.
            -or-
            The ConnectionBehavior
            property indicates a write should be performed and
            InitialValue
            is null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object is disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding.Disconnect">
      <summary>
            Disconnects the NetworkVariableBinding 
            object from the network variable to which it is currently connected.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding.ConnectionBehavior">
      <summary>
            Gets or sets a value that specifies the NetworkVariableBinding
            behavior when it connects to the specified network variable for the first time.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding.InitialValue">
      <summary>
            Gets or sets a value that is written to the network variable when the binding connects.
            </summary>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection">
      <summary>
            Represents a strongly-typed collection of NetworkVariableBinding
            objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.ToString">
      <summary>
            Overrides ToString.
            </summary>
      <returns>
            Returns a string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.Add(NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding)">
      <summary>
            Adds an item to the end of the collection.
            </summary>
      <param name="value">
            The item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.AddRange(NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding[])">
      <summary>
            Adds an array of NetworkVariableBinding objects 
            to the end of the collection.
            </summary>
      <param name="value">
            The array of NetworkVariableBinding objects to
            add to the collection.
            </param>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            
            -or-
            
            An element in value (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.Contains(NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding)">
      <summary>
            Determines whether the specified element is in the collection.
            </summary>
      <param name="value">
            The item to locate in the collection.
            </param>
      <returns>true if the collection contains value (parameter).
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.CopyTo(NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            The destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection.
            </param>
      <exception cref="T:System.ArgumentException">array (parameter) is multi-dimensional.
            
            -or-
            index (parameter) is greater than or equal to the array length.
            
            -or-
            
            The number of elements in the collection is greater than the available space
            between index (parameter) and the end of array (parameter).
            </exception>
      <exception cref="T:System.ArgumentNullException">array (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is less than zero.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.IndexOf(NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="value">
            The item to search for.
            </param>
      <returns>
            The index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.Insert(System.Int32,NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            The index to insert the item at.
            </param>
      <param name="value">
            The item to insert into the collection.
            </param>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is outside the valid range of indexes for the collection.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.Remove(NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="value">
            The item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is outside the valid range of indexes for the collection.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.Item(System.Int32)">
      <summary>
            Gets or sets the NetworkVariableBinding at 
            the specified index. In Visual C#, this property is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">index (parameter) is outside the valid range of indexes for the collection.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.Item(System.String)">
      <summary>
            Gets the NetworkVariableBinding with the
            specified name. In Visual C#, this property is the indexer.
            </summary>
      <param name="name">
            The name of the NetworkVariableBinding to find
            in the collection.
            </param>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The binding with the specified name was not found in the collection.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBindingCollection.Count">
      <summary>
            Gets the number of elements in the collection.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource">
      <summary>
            Represents a set of connections to network variables that can be bound to 
            Windows Forms controls.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.#ctor">
      <summary>
            Initializes a new instance of NetworkVariableDataSource.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Initializes a new instance of the NetworkVariableDataSource 
            class with the specified container.
            </summary>
      <param name="container">IContainer that represents the object container.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the 
            NetworkVariableDataSource object.
            </summary>
      <param name="disposing">
            If true, this method releases managed and unmanaged resources.
            If false, this method releases only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.ToString">
      <summary>
            Represents a string representation of an object.
            </summary>
      <returns>
            Returns a string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.Connect">
      <summary>
            Calls Connect 
            on all bindings in the 
            Bindings collection.
            </summary>
      <exception cref="T:System.DllNotFoundException">
            The ninetv.dll file is not present on the system.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The NetworkVariableDataSource
            has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.Disconnect">
      <summary>
            Calls Disconnect 
            on all bindings in the 
            Bindings collection.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.OnConnectionFailed(NationalInstruments.NetworkVariable.ConnectionFailedEventArgs)">
      <summary>
            Raises the 
            ConnectionFailed
            event.
            </summary>
      <param name="e">
            A ConnectionFailedEventArgs that contains
            the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.OnReadFailed(NationalInstruments.NetworkVariable.ReadFailedEventArgs{NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding})">
      <summary>
            Raises the ReadFailed event.
            </summary>
      <param name="e">
            A ReadFailedEventArgs&lt;T&gt; object that 
            contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.OnWriteFailed(NationalInstruments.NetworkVariable.WriteFailedEventArgs{NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding})">
      <summary>
            Raises the WriteFailed event.
            </summary>
      <param name="e">
            A WriteFailedEventArgs&lt;T&gt; object that 
            contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.OnBindingStatusUpdated(NationalInstruments.NetworkVariable.BindingStatusUpdatedEventArgs{NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBinding})">
      <summary>
            Raises the 
            BindingStatusUpdated event.
            </summary>
      <param name="e">
            A BindingStatusUpdatedEventArgs&lt;T&gt; object that 
            contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.AutoConnect">
      <summary>
            Gets or sets if all bindings in the Bindings 
            collection connect to associated network variables when the form loads.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The NetworkVariableDataSource has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.ConnectionTimeout">
      <summary>
            Gets or sets the amount of time to wait for the network variable connection to be established before timing out.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The NetworkVariableDataSource has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.WriteTimeout">
      <summary>
            Gets or sets the amount of time to wait for a write to a network variable to complete before timing out.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The NetworkVariableDataSource has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.Bindings">
      <summary>
            Gets the collection of bindings in the network variable data source..
            </summary>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.ConnectionFailed">
      <summary>
            Occurs when the NetworkVariableDataSource
            attempts to connect to a network variable and fails.
            </summary>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.ReadFailed">
      <summary>
            Occurs when the data binding framework requests data from a network variable and the read fails.
            </summary>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.WriteFailed">
      <summary>
            Occurs when the data binding framework attempts to update the data of a network variable 
            to which a connection cannot be established.
            </summary>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableDataSource.BindingStatusUpdated">
      <summary>
            Occurs when a network variable connection associated with a 
            binding changes its ConnectionStatus.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WriteFailedEventArgs`1">
      <summary>
            Provides data when a data source write fails.
            </summary>
      <typeparam name="TBinding">
            The associated binding class.
            </typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WriteFailedEventArgs`1.#ctor(`0,NationalInstruments.NetworkVariable.WriteFailureCause)">
      <summary>
            Initializes a new instance of WriteFailedEventArgs&lt;T&gt; with
            the specified binding and failure cause.
            </summary>
      <param name="binding">
            The binding that describes the network variable which failed to write.
            </param>
      <param name="failureCause">
            A WriteFailureCause indicating the cause of the write failure.
            </param>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WriteFailedEventArgs`1.Binding">
      <summary>
            Gets the binding that describes the network variable which failed to write.
            </summary>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WriteFailedEventArgs`1.FailureCause">
      <summary>
            Gets the cause of the write failure.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource">
      <summary>
            Represents a set of connections to network variables that can be bound to ASP.NET controls.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.#ctor">
      <summary>
            Initializes a new instance of NetworkVariableDataSource.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.GetView(System.String)">
      <summary>
            Gets the named data source view that is associated with this data source control.
            </summary>
      <param name="viewName">Because there is only one view supported by the 
            NetworkVariableDataSource, this parameter
            is ignored.
            </param>
      <returns>The default view.</returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.GetViewNames">
      <summary>
            Gets a list containing the name of the default view supported by this data source.
            </summary>
      <returns>A collection containing the name of the default view 
            supported by this data source.</returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.ToString">
      <summary>
            Provides a String representation of the object.
            </summary>
      <returns>
            Returns a String representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.GetService(System.Type)">
      <summary>
            Gets the service object of the specified type.
            </summary>
      <param name="serviceType">
            An object that specifies the type of service object to get.
            </param>
      <returns>
            A service object of type serviceType (parameter). A null is returned if there is no service object of type 
                   serviceType (parameter).
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.Dispose">
      <summary>
            Overrides Dispose.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the 
            NetworkVariableDataSource and optionally 
            releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.OnLoad(System.EventArgs)">
      <summary>
            Raises the Load event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.OnPreRender(System.EventArgs)">
      <summary>
            Raises the PreRender event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.SaveViewState">
      <summary>
            Saves any server control view-state changes that have occurred since the time the page was posted back to the server. 
            </summary>
      <returns>
            Returns the current view state of the server control.  If there is no view state
            associated with the control, this method returns null.
            </returns>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.LoadViewState(System.Object)">
      <summary>
            Restores view-state information from a previous page request that was saved by the Control.LoadViewState
              method. 
            </summary>
      <param name="savedState">
            An Object that represents the control state to restore.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.TrackViewState">
      <summary>
            Causes tracking of view-state changes to the server control so they can be stored in the server control's StateBag Class 
              object. This object is accessible through the Control.ViewState  property. 
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.OnBindingStatusUpdated(NationalInstruments.NetworkVariable.BindingStatusUpdatedEventArgs{NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding})">
      <summary>
            Raises the BindingStatusUpdated
            event.
            </summary>
      <param name="e">
            A BindingStatusUpdatedEventArgs&lt;T&gt; that 
            contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.OnConnectionFailed(NationalInstruments.NetworkVariable.ConnectionFailedEventArgs)">
      <summary>
            Raises the 
            ConnectionFailed
            event.
            </summary>
      <param name="e">
            A ConnectionFailedEventArgs that contains
            the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.OnReadFailed(NationalInstruments.NetworkVariable.ReadFailedEventArgs{NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding})">
      <summary>
            Raises the ReadFailed
            event.
            </summary>
      <param name="e">
            A ReadFailedEventArgs&lt;T&gt; that 
            contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.OnWriteFailed(NationalInstruments.NetworkVariable.WriteFailedEventArgs{NationalInstruments.NetworkVariable.WebForms.NetworkVariableBinding})">
      <summary>
            Raises the WriteFailed
            event.
            </summary>
      <param name="e">
            A WriteFailedEventArgs&lt;T&gt; that 
            contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.ConnectionCacheExpiration">
      <summary>
            Gets or sets the amount of time the network variable should remain
            in the ASP.NET cache. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.ConnectionTimeout">
      <summary>
            Gets or sets the timeout for connecting to the network variable.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            		value is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the value is greater than the maximum integer value.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.WriteTimeout">
      <summary>
            Gets or sets the timeout for writing to the network variable.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            		value is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the value is greater than the maximum integer value.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.Bindings">
      <summary>
            Gets the collection of bindings.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.IsDisposed">
      <summary>
            Gets a value indicating whether the component has been disposed.
            </summary>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.BindingStatusUpdated">
      <summary>
            Occurs when a network variable connection associated with one of the 
            Bindings
            changes its ConnectionStatus.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.ConnectionFailed">
      <summary>
            Occurs when the NetworkVariableDataSource
            attempts to connect to a network variable and fails.
            </summary>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.ReadFailed">
      <summary>
            Occurs when the data binding framework requests data from a network variable and the read
            fails.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WebForms.NetworkVariableDataSource.WriteFailed">
      <summary>
            Occurs when the data binding framework tries to write to the network variable, but fails.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog">
      <summary>
            Prompts the user to select a network variable location on the network.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Initializes a new instance of NetworkVariableBrowserDialog
            with the specified container.
            </summary>
      <param name="container">
            An IContainer that represents the container for the
            object.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.#ctor">
      <summary>
            Initializes a new instance of the NetworkVariableBrowserDialog class.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.Reset">
      <summary>
            Resets properties to their default values. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the NetworkVariableBrowserDialog
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.RunDialog(System.IntPtr)">
      <summary>
            Specifies a common dialog box. 
            </summary>
      <param name="hwndOwner">
            The window handle of the owner window for the common dialog box. 
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <returns>true if the dialog box was successfully run; otherwise, false.
            </returns>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.SelectedLocation">
      <summary>
            Gets or sets the network variable location selected by the user.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.SelectedLocations">
      <summary>
            Gets the selected network variable locations when the user selects more than one location in the network variable browser dialog box.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.MultipleSelect">
      <summary>
            Gets or sets whether more than one network variable location can be selected in the network variable browser dialog box.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.Text">
      <summary>
            Gets or sets the text displayed in the title bar of the dialog.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.ShowTypeToolTip">
      <summary>
            Gets or sets whether a tooltip is displayed. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.PropertyChanged">
      <summary>
            Occurs when the value of a property changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.WindowsForms.NetworkVariableBrowserDialog.BeforeTypeToolTip">
      <summary>
            Occurs before a tooltip is displayed for a network variable.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableException">
      <summary>
            Represents an error code received from the underlying driver.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableException.#ctor">
      <summary>
            Initializes a new instance of the NetworkVariableException class.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the NetworkVariableException class using the
            given error message.
            </summary>
      <param name="message">
            An error message describing this exception.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the NetworkVariableException class using the
            given error message and inner exception.
            </summary>
      <param name="message">
            An error message describing this exception.
            </param>
      <param name="inner">
            The exception that caused this exception to be thrown.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableException.#ctor(System.String,System.Int32)">
      <summary>
            Initializes a new instance of the NetworkVariableException
            class with the given error message and error code.
            </summary>
      <param name="message">
            An error message describing this exception.
            </param>
      <param name="errorCode">
            The error code associated with this exception.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableException.#ctor(System.String,System.Exception,System.Int32)">
      <summary>
            Initializes a new instance of the NetworkVariableException class with the 
            given error message, inner exception, and error code.
            </summary>
      <param name="message">
            An error message describing this exception.
            </param>
      <param name="inner">
            The exception that caused this exception to be thrown.
            </param>
      <param name="errorCode">
            The error code associated with this exception.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the NetworkVariableException object using serialized data.
            </summary>
      <param name="info">
            Object that holds the serialized object data.
            </param>
      <param name="context">
            Contextual information about the source or destination.
            </param>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Sets the SerializationInfo object with information about the exception.
            </summary>
      <param name="info">
            The object that holds the serialized object data.
            </param>
      <param name="context">
            Contextual information about the source or destination.
            </param>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableException.ErrorCode">
      <summary>
            Gets the error code associated with the error.
            </summary>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableReader`1">
      <summary>
            Provides a way to read network variable data on demand.
            </summary>
      <typeparam name="TValue">
            The type of the variable to read. The following types are supported by TValue (generic type parameter):
            Object;
            Byte, Byte[], Byte[,];
            UInt16, UInt16[], UInt16[,];
            UInt32, UInt32[], UInt32[,];
            UInt64, UInt64[], UInt64[,];
            SByte, SByte[], SByte[,];
            Int16, Int16[], Int16[,];
            Int32, Int32[], Int32[,];
            Int64, Int64[], Int64[,];
            Boolean, Boolean[], Boolean[,];
            Single, Single[], Single[,];
            Double, Double[], Double[,];
            String, String[], String[,]; and
            AnalogWaveform&lt;T&gt;, AnalogWaveform&lt;T&gt;[].
            			</typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableReader`1.#ctor(System.String)">
      <summary>
            Initializes a new instance of the NetworkVariableReader&lt;T&gt; class
            with the specified path name.
            </summary>
      <param name="location">
            The path name of the network variable. 
            </param>
      <exception cref="T:System.ArgumentNullException">location (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of NetworkVariableReader&lt;T&gt; is invalid.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableReader`1.ReadData">
      <summary>
            Reads the next value from the network variable on the server.
            </summary>
      <returns>
            A NetworkVariableData&lt;T&gt; that contains the read data.
            </returns>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of the data being read does not match the type of 
            NetworkVariableReader&lt;T&gt;.
            
            - or -
            Connect has not been called successfully.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The type of the data being read cannot be converted to an equivalent .NET type.
            
            - or -
            
            The array dimension of the read data is not supported.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableReader`1.ReadData(System.TimeSpan)">
      <summary>
            Reads the next value from the network variable on the server with the specified timeout.
            </summary>
      <param name="timeout">
            The TimeSpan value specifying how long the read waits.
            </param>
      <returns>
            A NetworkVariableData&lt;T&gt; that contains information about
            the read data.
            </returns>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">timeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the timeout (parameter) is greater than the maximum integer value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of the data being read does not match the type of 
            NetworkVariableReader&lt;T&gt;.
            
            - or -
            Connect has not been called successfully.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The type of the data being read cannot be converted to an equivalent .NET type.
            
            - or -
            
            The array dimension of the read data is not supported.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableReader`1.ReadDataAsync(System.Object)">
      <summary>
            Asynchronously reads the next value from the server.
            </summary>
      <param name="userState">
            An object that is passed to the method invoked when the asynchronous operation completes.
            </param>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of the data being read does not match the type of NetworkVariableReader&lt;T&gt;.
            
            - or -
            Connect has not been called successfully.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The type of the data being read cannot be converted to an equivalent .NET type.
            
            - or -
            
            The array dimension of the data being read is not supported.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableReader`1.ReadDataAsync(System.TimeSpan,System.Object)">
      <summary>
            Asynchronously reads the next value from the server with the specified timeout.
            </summary>
      <param name="timeout">
            The TimeSpan value specifying how long to wait before the operation times out.
            </param>
      <param name="userState">
            An object that is passed to the method invoked when the asynchronous operation completes.
            </param>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">timeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the timeout (parameter) is greater than the maximum integer value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of the data being read does not match the type of the
            NetworkVariableReader&lt;T&gt;.
            
            - or -
            Connect has not been called successfully.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The type of the data being read cannot be converted to an equivalent .NET type.
            
            - or -
            
            The array dimension of the data being read is not supported.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableReader`1.OnReadDataCompleted(NationalInstruments.NetworkVariable.ReadDataCompletedEventArgs{`0})">
      <summary>
            Raises the ReadDataCompleted event.
            </summary>
      <param name="e">
            A ReadDataCompletedEventArgs&lt;T&gt; that contains the event data.
            </param>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.NetworkVariableReader`1.ReadDataCompleted">
      <summary>
            Occurs when an asynchronous read has completed or raised an exception.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableSubscriber`1">
      <summary>
            Provides a way to subscribe to network variable data and receive update notifications.
            </summary>
      <typeparam name="TValue">
            The type of the variable to subscribe to. The following types are supported by TValue (generic type parameter):
            Object;
            Byte, Byte[], Byte[,];
            UInt16, UInt16[], UInt16[,];
            UInt32, UInt32[], UInt32[,];
            UInt64, UInt64[], UInt64[,];
            SByte, SByte[], SByte[,];
            Int16, Int16[], Int16[,];
            Int32, Int32[], Int32[,];
            Int64, Int64[], Int64[,];
            Boolean, Boolean[], Boolean[,];
            Single, Single[], Single[,];
            Double, Double[], Double[,];
            String, String[], String[,]; and
            AnalogWaveform&lt;T&gt;, AnalogWaveform&lt;T&gt;[].
            			</typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableSubscriber`1.#ctor(System.String)">
      <summary>
            Initializes a new instance of the NetworkVariableSubscriber&lt;T&gt;
            class with the specified path name.
            </summary>
      <param name="location">
            The path name of the network variable.
            </param>
      <exception cref="T:System.ArgumentNullException">location (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of the NetworkVariableReader&lt;T&gt; is invalid.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableSubscriber`1.OnDataUpdated(NationalInstruments.NetworkVariable.DataUpdatedEventArgs{`0})">
      <summary>
            Raises the DataUpdated event.
            </summary>
      <param name="args">
            A DataUpdatedEventArgs&lt;T&gt; that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableSubscriber`1.ConnectionBehavior">
      <summary>
            Gets or sets a value that describes what the NetworkVariableSubscriber&lt;T&gt; does when it connects to a network variable for the first time.
            </summary>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.NetworkVariableSubscriber`1.DataUpdated">
      <summary>
            Occurs when new data is available to NetworkVariableSubscriber&lt;T&gt;.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.NetworkVariableWriter`1">
      <summary>
            Provides a way to write network variable data on demand.
            </summary>
      <typeparam name="TValue">
            The type of the variable to write. The following types are supported by TValue (generic type parameter):
            Object;
            Byte, Byte[], Byte[,];
            UInt16, UInt16[], UInt16[,];
            UInt32, UInt32[], UInt32[,];
            UInt64, UInt64[], UInt64[,];
            SByte, SByte[], SByte[,];
            Int16, Int16[], Int16[,];
            Int32, Int32[], Int32[,];
            Int64, Int64[], Int64[,];
            Boolean, Boolean[], Boolean[,];
            Single, Single[], Single[,];
            Double, Double[], Double[,];
            String, String[], String[,]; and
            AnalogWaveform&lt;T&gt;; AnalogWaveform&lt;T&gt;[].
            </typeparam>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.#ctor(System.String)">
      <summary>
            Initializes a new instance of the NetworkVariableWriter&lt;T&gt; class
            with the specified path name.
            </summary>
      <param name="location">
            The path name of the network variable. 
            </param>
      <exception cref="T:System.ArgumentNullException">location (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The type of the NetworkVariableReader&lt;T&gt; is invalid.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.WriteData(NationalInstruments.NetworkVariable.NetworkVariableData{`0})">
      <summary>
            Writes data to the server.
            </summary>
      <param name="data">
            A NetworkVariableData&lt;T&gt; containing the value to write to the server.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and data (parameter) contains characters that cannot be converted to
            ANSI using the system default code page. Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.WriteData(NationalInstruments.NetworkVariable.NetworkVariableData{`0},System.TimeSpan)">
      <summary>
            Writes data to the server with the specified timeout.
            </summary>
      <param name="data">
            A NetworkVariableData&lt;T&gt; containing the value to write to the server.
            </param>
      <param name="timeout">
            The TimeSpan value specifying how long before the operation times out..
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and data (parameter) contains characters that cannot be converted to
            ANSI using the system default code page. Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">timeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the timeout (parameter) is greater than the maximum integer value.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.WriteValue(`0)">
      <summary>
            Writes a value to the server.
            </summary>
      <param name="value">
            The value to be written to the server.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and value (parameter) contains characters that cannot 
            be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.WriteValue(`0,System.TimeSpan)">
      <summary>
            Writes a value to the server with the specified timeout.
            </summary>
      <param name="value">
            The value to be written to the server.
            </param>
      <param name="timeout">
            The TimeSpan value specifying how long to wait before the operation times out. .
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and value (parameter) contains characters that cannot 
            be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">timeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the timeout (parameter) is greater than the max integer value.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.WriteDataAsync(NationalInstruments.NetworkVariable.NetworkVariableData{`0},System.Object)">
      <summary>
            Asynchronously writes data to the server.
            </summary>
      <param name="data">
            A NetworkVariableData&lt;T&gt; containing the value to write to the server.
            </param>
      <param name="userState">
            An object that is passed to the method invoked when the asynchronous operation completes.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and data (parameter) contains characters that cannot be converted to
            ANSI using the system default code page. Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.WriteDataAsync(NationalInstruments.NetworkVariable.NetworkVariableData{`0},System.TimeSpan,System.Object)">
      <summary>
            Asynchronously writes data to the server with the specified timeout.
            </summary>
      <param name="data">
            A NetworkVariableData&lt;T&gt; containing the value to be written.
            </param>
      <param name="timeout">
            The TimeSpan value specifying how long to wait before the operation times out.
            </param>
      <param name="userState">
            An object that is passed to the method invoked when the asynchronous operation completes.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and data (parameter) contains characters that cannot be converted to
            ANSI using the system default code page. Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">timeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the timeout (parameter) is greater than the maximum integer value.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.WriteValueAsync(`0,System.Object)">
      <summary>
            Asynchronously writes a value to the server.
            </summary>
      <param name="value">
            The value to be written to the server.
            </param>
      <param name="userState">
            An object that is passed to the method invoked when the asynchronous operation completes.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and value (parameter) contains characters that cannot 
            be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.WriteValueAsync(`0,System.TimeSpan,System.Object)">
      <summary>
            Asynchronously writes a value to the server with the specified timeout.
            </summary>
      <param name="value">
            The value to be written to the server.
            </param>
      <param name="timeout">
            The TimeSpan value specifying how long to wait before the operation times out.
            </param>
      <param name="userState">
            An object that is passed to the method invoked when the asynchronous operation completes.
            </param>
      <exception cref="T:System.ArgumentException">TValue (generic type parameter) is Object, String,
            or an array of either type and value (parameter) contains characters that cannot 
            be converted using the system default
            ANSI code page.  Refer to Unicode Support in the Network Variable Class Library  for more information.
            </exception>
      <exception cref="T:System.TimeoutException">
            The operation has timed out.
            </exception>
      <exception cref="T:System.ArgumentNullException">value (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">Connect has not been called successfully.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">timeout (parameter) is less than or equal to zero.
            
            - or -
            
            The total milliseconds of the timeout (parameter) is greater than the maximum integer value.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            The underlying driver returned an error. Check the  
            Message property of the exception for more information.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.OnWriteCompleted(NationalInstruments.NetworkVariable.WriteCompletedEventArgs)">
      <summary>
            Raises the WriteCompleted event.
            </summary>
      <param name="e">
            A WriteCompletedEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.FlushOnWrite">
      <summary>
            Gets or sets a value that determines whether this 
            NetworkVariableWriter&lt;T&gt; flushes its value after each write.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:NationalInstruments.NetworkVariable.NetworkVariableException">
            An unexpected error happened.  Check the exception's message property for more information.
            </exception>
    </member>
    <member name="E:NationalInstruments.NetworkVariable.NetworkVariableWriter`1.WriteCompleted">
      <summary>
            Occurs when an asynchronous write has completed or raised an exception.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WriteCompletedEventArgs">
      <summary>
            Provides data for the WriteCompleted event.
            </summary>
    </member>
    <member name="M:NationalInstruments.NetworkVariable.WriteCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
      <summary>
            Initializes a new instance of the WriteCompletedEventArgs
            class with the specified error, whether the asynchronous operation is canceled, and the optional user-supplied state object.
            </summary>
      <param name="error">
            An error, if an error occurs, during the asynchronous operation.
            </param>
      <param name="canceled">
            A value indicating whether the asynchronous operation is canceled.
            </param>
      <param name="userState">
            The optional user-supplied state object.
            </param>
    </member>
    <member name="T:NationalInstruments.NetworkVariable.WriteFailureCause">
      <summary>
            Specifies the cause of the write failure.
            </summary>
    </member>
    <member name="F:NationalInstruments.NetworkVariable.WriteFailureCause.Unconnected">
      <summary>
            Write failed because the connection has not been made.
            </summary>
    </member>
  </members>
</doc>